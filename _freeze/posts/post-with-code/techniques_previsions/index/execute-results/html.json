{
  "hash": "0d714bc10ddd9b05ce49ba8db0a2fb37",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Ipampa 2\"\nformat: html\neditor: visual\n---\n\n\n\n## Librairies\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(tsoutliers)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRegistered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(TSA)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRegistered S3 methods overwritten by 'TSA':\n  method       from    \n  fitted.Arima forecast\n  plot.Arima   forecast\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'TSA'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    acf, arima\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:utils':\n\n    tar\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(seastests)\nlibrary(forecast)\nlibrary(seasonal)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'seasonal'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:seastests':\n\n    qs\n```\n\n\n:::\n\n```{.r .cell-code}\n#library(RJDemetra)\nlibrary(ggplot2)\nlibrary(EnvStats)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'EnvStats'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:TSA':\n\n    kurtosis, skewness\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    predict, predict.lm\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tseries)\nlibrary(smooth)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: greybox\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nPackage \"greybox\", v2.0.2 loaded.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'greybox'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:seasonal':\n\n    qs\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:seastests':\n\n    qs\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThis is package \"smooth\", v4.0.2\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(timeSeries)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: timeDate\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'timeDate'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:EnvStats':\n\n    kurtosis, skewness\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:TSA':\n\n    kurtosis, skewness\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'timeSeries'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:seasonal':\n\n    outlier, series\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:graphics':\n\n    lines, points\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(plotly)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'plotly'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:timeSeries':\n\n    filter\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:stats':\n\n    filter\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:graphics':\n\n    layout\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:timeSeries':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tidyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'tidyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:greybox':\n\n    spread\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(Kendall) # test de tendance \n```\n:::\n\n\n\n### Récuperation des données\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nipampa1 <- read_excel(\"/Users/Isabel/Desktop/Cours_M1/Projets/portfolio/posts/post-with-code/techniques_previsions/data/serie_ipampa.xlsx\", sheet = 'complete')\nipampa <- read_excel(\"/Users/Isabel/Desktop/Cours_M1/Projets/portfolio/posts/post-with-code/techniques_previsions/data/serie_ipampa.xlsx\")\n\nstr(ipampa)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntibble [216 × 2] (S3: tbl_df/tbl/data.frame)\n $ Période: chr [1:216] \"2022-12\" \"2022-11\" \"2022-10\" \"2022-09\" ...\n $ IPAMPA : num [1:216] 140 141 142 140 139 ...\n```\n\n\n:::\n\n```{.r .cell-code}\nipampa <- ipampa[nrow(ipampa):1,]\nipampa <- ipampa[, 2]\nipampa\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 216 × 1\n   IPAMPA\n    <dbl>\n 1   78.2\n 2   78.5\n 3   79.1\n 4   79.3\n 5   78.9\n 6   79.4\n 7   79.8\n 8   80  \n 9   80.5\n10   80.7\n# ℹ 206 more rows\n```\n\n\n:::\n:::\n\n\n\n## Création de la série temporelle\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nipampa <- ts(data = ipampa, start = c(2005, 01), frequency=12) \n```\n:::\n\n\n\n## Visualisation\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshow(ipampa)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       Jan   Feb   Mar   Apr   May   Jun   Jul   Aug   Sep   Oct   Nov   Dec\n2005  78.2  78.5  79.1  79.3  78.9  79.4  79.8  80.0  80.5  80.7  80.3  80.4\n2006  80.8  81.1  81.3  81.8  81.8  81.8  81.9  82.1  81.9  82.1  82.3  82.5\n2007  82.6  83.1  83.8  84.5  84.8  85.1  85.8  86.6  88.1  89.5  91.1  91.9\n2008  93.2  94.4  95.7  96.9  98.8 100.2 101.3 100.6 100.6  99.5  97.7  95.8\n2009  95.4  94.8  93.9  93.5  92.7  92.2  90.8  90.7  90.1  89.7  89.4  89.3\n2010  89.5  89.8  90.4  91.0  91.2  91.4  91.3  92.1  93.7  95.0  95.6  96.6\n2011  98.0  99.4 100.6 101.0 100.4 100.6 101.0 100.9 101.3 101.3 101.2 101.0\n2012 100.6 101.2 101.9 102.3 102.3 101.8 103.1 105.1 106.0 106.5 106.4 106.3\n2013 106.4 106.8 106.4 105.7 105.4 105.0 104.6 104.2 103.7 103.0 102.7 102.7\n2014 102.9 103.0 103.1 103.3 103.3 103.1 102.5 102.1 101.6 101.0 100.4  99.5\n2015  99.1 100.5 100.7 101.1 101.3 100.6 100.2  99.7  99.6  99.5  99.3  98.3\n2016  97.8  97.5  97.6  97.4  97.9  97.8  97.3  96.9  97.0  97.4  97.2  98.3\n2017  98.6  99.0  98.9  99.1  98.7  98.1  97.9  98.0  98.4  98.9  99.2  99.3\n2018 100.1 100.1 100.4 101.1 102.0 101.9 102.2 102.7 103.6 104.6 104.5 103.8\n2019 103.6 104.1 104.4 104.6 104.4 103.8 103.7 103.3 103.7 103.6 103.3 103.5\n2020 103.6 103.4 102.3 101.7 101.7 101.8 101.8 101.8 101.5 102.1 102.6 103.1\n2021 104.5 106.4 107.6 107.9 108.5 109.6 110.9 111.6 113.2 117.5 119.5 120.5\n2022 123.1 124.9 133.2 134.6 136.1 138.6 138.2 138.9 139.5 142.0 141.3 139.6\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(ipampa, xlab = \"Années\", ylab =\"indice 'IPAMPA'\", main= \"Série brute\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\nGraphique avec ggplot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts_df <- data.frame(Date = time(ipampa), Value = as.numeric(ipampa))\n\n# graphique ggplot\nggplot(data = ts_df, aes(x = Date, y = Value)) + \n  geom_line(aes(color = Value)) +  \n  scale_color_gradient(low = \"darkgreen\", high = \"red\") +  \n  labs(title = \"\nIndice mensuel des prix d'achat \ndes moyens de production agricole (IPAMPA)\",\n       x = \"Période\\n(01/2005 - 12/2022)\", y = \"Indice\") +\n  theme_minimal() +\n  theme(legend.position = \"right\",\n        plot.title = element_text(size = 8),\n        axis.title.x = element_text(size = 8),\n        axis.title.y = element_text(size = 8),\n        legend.title = element_text(size = 7))  \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nDon't know how to automatically pick scale for object of type <ts>. Defaulting\nto continuous.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n## Détection outlliers\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Automatic Procedure for Detection of Outliers\ntso(ipampa)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSeries: ipampa \nRegression with ARIMA(1,1,1) errors \n\nCoefficients:\n         ar1      ma1   LS122   LS202   LS207   TC214\n      0.8434  -0.2691  1.5395  2.7421  6.6747  2.4083\ns.e.  0.0531   0.1062  0.4497  0.4520  0.4505  0.3936\n\nsigma^2 = 0.2814:  log likelihood = -166.1\nAIC=346.2   AICc=346.74   BIC=369.79\n\nOutliers:\n  type ind    time coefhat  tstat\n1   LS 122 2015:02   1.539  3.423\n2   LS 202 2021:10   2.742  6.067\n3   LS 207 2022:03   6.675 14.817\n4   TC 214 2022:10   2.408  6.119\n```\n\n\n:::\n\n```{.r .cell-code}\nfit <- tso(ipampa)\nplot(fit)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\nshow(fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSeries: ipampa \nRegression with ARIMA(1,1,1) errors \n\nCoefficients:\n         ar1      ma1   LS122   LS202   LS207   TC214\n      0.8434  -0.2691  1.5395  2.7421  6.6747  2.4083\ns.e.  0.0531   0.1062  0.4497  0.4520  0.4505  0.3936\n\nsigma^2 = 0.2814:  log likelihood = -166.1\nAIC=346.2   AICc=346.74   BIC=369.79\n\nOutliers:\n  type ind    time coefhat  tstat\n1   LS 122 2015:02   1.539  3.423\n2   LS 202 2021:10   2.742  6.067\n3   LS 207 2022:03   6.675 14.817\n4   TC 214 2022:10   2.408  6.119\n```\n\n\n:::\n:::\n\n\n\n## Série corrigée\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow=c(1,1))\n\n# outlier-adjusted series\nipampa <- fit$yadj\nplot(ipampa, main= \"Série adjustée\", xlab= \"Années\", ylab =\"indice 'IPAMPA\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\nExistence de 4 outliers 3 type LS et un type TC\n\n## Tests de saisonnalité\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Friedman test\nft <- fried(ipampa)\nshow(ft)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nTest used:  Friedman rank \n \nTest statistic:  15.81 \nP-value:  0.1485093\n```\n\n\n:::\n\n```{.r .cell-code}\n# Testing the seasonality of series\n#  a boolean value is returned : TRUE or FALSE\nis <- isSeasonal(ipampa, test=\"wo\")\nshow(is)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\n# Kruskal-Wallis test\nkwt <- kw(ipampa)\nshow(kwt)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nTest used:  Kruskall Wallis \n \nTest statistic:  10.94 \nP-value:  0.4482418\n```\n\n\n:::\n\n```{.r .cell-code}\n# Seasonal dummies\n# impotant \nsd <- seasdum(ipampa)\nshow(sd)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nTest used:  SeasonalDummies \n \nTest statistic:  0.86 \nP-value:  0.5759353\n```\n\n\n:::\n\n```{.r .cell-code}\n# Webel-Ollech test\n# Webel-Ollech test - new version of seastests (2021-09)\n# impotant \n\nwot <- combined_test(ipampa)\nshow(wot)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nTest used:  WO \n \nTest statistic:  0 \nP-value:  1 1 0.03397038\n```\n\n\n:::\n:::\n\n\n\nLes tests confirment la non saisonnalité de la série IPAMPA\n\n### Graphique\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Trace une série chronologique avec son acf et soit son pacf, son nuage de points décalé ou son spectre\nggtsdisplay(ipampa, plot.type=\"histogram\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Trace un graphique saisonnier où les données sont comparées aux saisons d'années distinctes\n# ggseasonplot(ipampa_ts, col=rainbow(12), year.labels=TRUE)\n```\n:::\n\n\n\n## Vérification de la stationnarité\n\n### stationnarité de ipampa\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nadf.test(ipampa)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tAugmented Dickey-Fuller Test\n\ndata:  ipampa\nDickey-Fuller = -3.1388, Lag order = 5, p-value = 0.09931\nalternative hypothesis: stationary\n```\n\n\n:::\n:::\n\n\n\nLa série n'est pas stationnaire car le test ADF \\> 0.05\n\nVu que notre série ne presente pas de saisonalité, nous allons faire un analyse sur la tendance\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndecomp <- decompose(ipampa)\nplot(decomp)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n## Tendance\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# test de tendence serie niveau\nMannKendall(ipampa)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntau = 0.568, 2-sided pvalue =< 2.22e-16\n```\n\n\n:::\n:::\n\n\n\nDans notre cas, τ = 0.568 suggère une tendance croissante modérément forte dans la série temporelle à niveau, avec un p_value inférieur à 0,05 on peut dire que la série initial presente bien une tendance\n\n### differentiation de la série\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_ipampa <- diff(ipampa, differences = 1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# graphique ggplot\ndf <- data.frame(Date = time(d_ipampa), Value = as.numeric(d_ipampa))\n\n# graphique ggplot\nggplot(data = df, aes(x = Date, y = Value)) + \n  geom_line(aes(color = Value)) +  \n  scale_color_gradient(low = \"darkgreen\", high = \"red\") +  \n  labs(title = \"Série differenciée\",\n       x = \"Dates\", y = \"Indice\") +\n  theme_minimal() +\n  theme(legend.position = \"right\",\n        plot.title = element_text(size = 8),\n        axis.title.x = element_text(size = 8),\n        axis.title.y = element_text(size = 8),\n        legend.title = element_text(size = 7))  \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nDon't know how to automatically pick scale for object of type <ts>. Defaulting\nto continuous.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\n### Correlogramme série brute et série differencié\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow=c(1,2))\nacf(ipampa, main=\"Correlogramme sur la série en niveau\")\nacf(d_ipampa, main=\"Correlogramme sur la série en différence première\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n### Periodogramme\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Periodogramme\npar(mfrow=c(1,2))\nperiodogram(ipampa, main=\"Periodogramme sur la série en niveau\")\nperiodogram(d_ipampa, main=\"Periodogramme sur la série en différence première\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n\n## Test de stationnarité de la série differencié ipampa\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nadf.test(d_ipampa)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tAugmented Dickey-Fuller Test\n\ndata:  d_ipampa\nDickey-Fuller = -3.564, Lag order = 5, p-value = 0.0378\nalternative hypothesis: stationary\n```\n\n\n:::\n:::\n\n\n\nApres la différentiation la série devient bien stationnaire\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndecomp <- decompose(ipampa)\ndecomp_d <- decompose(d_ipampa)\n\ngraph1 <- plot(decomp)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n\n```{.r .cell-code}\ngraph2 <- plot(decomp_d)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-18-2.png){width=672}\n:::\n:::\n\n\n\n## Statistiques descriptives\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(d_ipampa)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       y          \n Min.   :-1.9000  \n 1st Qu.:-0.2500  \n Median : 0.2000  \n Mean   : 0.2291  \n 3rd Qu.: 0.6000  \n Max.   : 2.6000  \n```\n\n\n:::\n\n```{.r .cell-code}\n#histogramme\nhist(d_ipampa, main= \"Histogramme série corrigé\", ylab=\" Fréquence\", xlab=\"indice\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#skewness \nPerformanceAnalytics::skewness(d_ipampa)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.4496658\n```\n\n\n:::\n\n```{.r .cell-code}\n#kurtosis \nPerformanceAnalytics::kurtosis(d_ipampa)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.6254732\n```\n\n\n:::\n\n```{.r .cell-code}\ne1071::kurtosis(d_ipampa)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.5918263\n```\n\n\n:::\n\n```{.r .cell-code}\n#normalité\nstats::shapiro.test(d_ipampa)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tShapiro-Wilk normality test\n\ndata:  d_ipampa\nW = 0.97467, p-value = 0.0006498\n```\n\n\n:::\n\n```{.r .cell-code}\n#boxplot\nboxplot(d_ipampa, main=\"Boxplot\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-19-2.png){width=672}\n:::\n\n```{.r .cell-code}\n#test outliers\nrosnerTest(d_ipampa, k=10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nResults of Outlier Test\n-------------------------\n\nTest Method:                     Rosner's Test for Outliers\n\nHypothesized Distribution:       Normal\n\nData:                            d_ipampa\n\nSample Size:                     215\n\nTest Statistics:                 R.1  = 3.233268\n                                 R.2  = 3.183835\n                                 R.3  = 3.006058\n                                 R.4  = 2.934315\n                                 R.5  = 2.627525\n                                 R.6  = 2.678351\n                                 R.7  = 2.579619\n                                 R.8  = 2.628374\n                                 R.9  = 2.522953\n                                 R.10 = 2.523867\n\nTest Statistic Parameter:        k = 10\n\nAlternative Hypothesis:          Up to 10 observations are not\n                                 from the same Distribution.\n\nType I Error:                    5%\n\nNumber of Outliers Detected:     0\n\n   i    Mean.i      SD.i Value Obs.Num    R.i+1 lambda.i+1 Outlier\n1  0 0.2291333 0.7332725   2.6     204 3.233268   3.627118   FALSE\n2  1 0.2180544 0.7167286   2.5     209 3.183835   3.625734   FALSE\n3  2 0.2073411 0.7010315  -1.9      47 3.006058   3.624342   FALSE\n4  3 0.2172814 0.6874795  -1.8      46 2.934315   3.622942   FALSE\n5  4 0.2268419 0.6748397   2.0      91 2.627525   3.621535   FALSE\n6  5 0.2183983 0.6651861   2.0     202 2.678351   3.620120   FALSE\n7  6 0.2098739 0.6551844   1.9     193 2.579619   3.618697   FALSE\n8  7 0.2017483 0.6461226   1.9      40 2.628374   3.617266   FALSE\n9  8 0.1935442 0.6367363   1.8     205 2.522953   3.615828   FALSE\n10 9 0.1857459 0.6283000  -1.4      54 2.523867   3.614381   FALSE\n```\n\n\n:::\n:::\n\n\n\nLe test de shapiro, indique que notre série ne suit pas une loi normal\n\nLe box plot nous indique des possibles outliers. La vérification avec le test de rosner nous indique que finalement il n'y pas\n\n## Estimation des modèles linéaires\n\nModèles AR(1), AR(p) et ARIMA(p,d,q) et de la méthode LED Holt-Winters, ADAM ETS, ADAM ETS SARIMA, SSARIMA et CES\n\n### Modèle AR(1)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Parametres modele AR(1)\nar1 <- auto.arima(d_ipampa, max.p=1, max.q=0, d=0, stationary = TRUE, seasonal = FALSE, ic = \"aic\", stepwise = TRUE,  trace = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n Fitting models using approximations to speed things up...\n\n ARIMA(1,0,0)            with non-zero mean : 341.619\n ARIMA(0,0,0)            with non-zero mean : 479.739\n ARIMA(1,0,0)            with non-zero mean : 341.619\n ARIMA(0,0,0)            with zero mean     : 497.859\n ARIMA(1,0,0)            with zero mean     : 342.4367\n\n Now re-fitting the best model(s) without approximations...\n\n ARIMA(1,0,0)            with non-zero mean : 341.299\n\n Best model: ARIMA(1,0,0)            with non-zero mean \n```\n\n\n:::\n\n```{.r .cell-code}\n# Estimation\nsummary(ar1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSeries: d_ipampa \nARIMA(1,0,0) with non-zero mean \n\nCoefficients:\n         ar1    mean\n      0.6966  0.2150\ns.e.  0.0492  0.1172\n\nsigma^2 = 0.2802:  log likelihood = -167.65\nAIC=341.3   AICc=341.41   BIC=351.41\n\nTraining set error measures:\n                       ME     RMSE       MAE MPE MAPE      MASE        ACF1\nTraining set -0.000387161 0.526914 0.3958932 NaN  Inf 0.5050639 -0.08971407\n```\n\n\n:::\n\n```{.r .cell-code}\ncheckresiduals(ar1)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tLjung-Box test\n\ndata:  Residuals from ARIMA(1,0,0) with non-zero mean\nQ* = 24.914, df = 23, p-value = 0.3548\n\nModel df: 1.   Total lags used: 24\n```\n\n\n:::\n:::\n\n\n\nNombre de retards pour le test Ljung-BOx: 24, ce test permet de vérifier si les résidus de notre modèle sont effectivement du bruit blanc (c'est-à-dire non corrélés et avec une moyenne constante et une variance constante). Ici la P_value est de 0,354 donc \\> 0,05 ; Il n'y a pas suffisamment de preuves pour rejeter l'hypothèse selon laquelle les résidus du modèle ARIMA(1,0,0) sont indépendants. Les résidus du modèle ne présentent pas d'autocorrélation significative à aucun des décalages testés.\n\n### Modèle AR(p)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Parametres modele AR(p)\narp <- auto.arima(d_ipampa, max.q=0, d=0, stationary = TRUE, seasonal = FALSE, ic = \"aic\", stepwise = TRUE,  trace = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n Fitting models using approximations to speed things up...\n\n ARIMA(2,0,0)            with non-zero mean : 340.2507\n ARIMA(0,0,0)            with non-zero mean : 479.739\n ARIMA(1,0,0)            with non-zero mean : 341.619\n ARIMA(0,0,0)            with zero mean     : 497.859\n ARIMA(3,0,0)            with non-zero mean : 342.3594\n ARIMA(2,0,0)            with zero mean     : 340.1487\n ARIMA(1,0,0)            with zero mean     : 342.4367\n ARIMA(3,0,0)            with zero mean     : 342.0625\n\n Now re-fitting the best model(s) without approximations...\n\n ARIMA(2,0,0)            with zero mean     : 339.5992\n\n Best model: ARIMA(2,0,0)            with zero mean     \n```\n\n\n:::\n\n```{.r .cell-code}\n# Estimation\nsummary(arp)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSeries: d_ipampa \nARIMA(2,0,0) with zero mean \n\nCoefficients:\n         ar1     ar2\n      0.6144  0.1489\ns.e.  0.0680  0.0680\n\nsigma^2 = 0.2779:  log likelihood = -166.8\nAIC=339.6   AICc=339.71   BIC=349.71\n\nTraining set error measures:\n                     ME      RMSE       MAE MPE MAPE      MASE        ACF1\nTraining set 0.04941427 0.5246927 0.3970709 NaN  Inf 0.5065663 -0.01668794\n```\n\n\n:::\n\n```{.r .cell-code}\ncheckresiduals(arp)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tLjung-Box test\n\ndata:  Residuals from ARIMA(2,0,0) with zero mean\nQ* = 21.585, df = 22, p-value = 0.4849\n\nModel df: 2.   Total lags used: 24\n```\n\n\n:::\n:::\n\n\n\n### Modèle ARIMA(p,d,q)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Parametres modele AR(p,d,q)\narima <- auto.arima(d_ipampa, stationary = TRUE, seasonal = FALSE, ic = \"aic\", stepwise = TRUE,  trace = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n Fitting models using approximations to speed things up...\n\n ARIMA(2,0,2)            with non-zero mean : 342.5512\n ARIMA(0,0,0)            with non-zero mean : 479.739\n ARIMA(1,0,0)            with non-zero mean : 341.619\n ARIMA(0,0,1)            with non-zero mean : 397.5533\n ARIMA(0,0,0)            with zero mean     : 497.859\n ARIMA(2,0,0)            with non-zero mean : 340.2507\n ARIMA(3,0,0)            with non-zero mean : 342.3594\n ARIMA(2,0,1)            with non-zero mean : 340.767\n ARIMA(1,0,1)            with non-zero mean : 338.5836\n ARIMA(1,0,2)            with non-zero mean : 339.5905\n ARIMA(0,0,2)            with non-zero mean : 360.2773\n ARIMA(1,0,1)            with zero mean     : 338.1744\n ARIMA(0,0,1)            with zero mean     : 408.3375\n ARIMA(1,0,0)            with zero mean     : 342.4367\n ARIMA(2,0,1)            with zero mean     : 340.0586\n ARIMA(1,0,2)            with zero mean     : 338.9206\n ARIMA(0,0,2)            with zero mean     : 366.344\n ARIMA(2,0,0)            with zero mean     : 340.1487\n ARIMA(2,0,2)            with zero mean     : 341.8261\n\n Now re-fitting the best model(s) without approximations...\n\n ARIMA(1,0,1)            with zero mean     : 338.1988\n\n Best model: ARIMA(1,0,1)            with zero mean     \n```\n\n\n:::\n\n```{.r .cell-code}\n# Estimation\nsummary(arima)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSeries: d_ipampa \nARIMA(1,0,1) with zero mean \n\nCoefficients:\n         ar1      ma1\n      0.8434  -0.2691\ns.e.  0.0527   0.1045\n\nsigma^2 = 0.2761:  log likelihood = -166.1\nAIC=338.2   AICc=338.31   BIC=348.31\n\nTraining set error measures:\n                     ME      RMSE       MAE MPE MAPE      MASE       ACF1\nTraining set 0.04405366 0.5229599 0.3932828 NaN  Inf 0.5017336 0.01465994\n```\n\n\n:::\n:::\n\n\n\n### Modèle Holt-Winter\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# un lissage exponentiel double (Holt-Winters sans composante saisonnière)\n# premier modele\nholtw_model <- HoltWinters(d_ipampa,gamma=FALSE) \nholtw_model\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nHolt-Winters exponential smoothing with trend and without seasonal component.\n\nCall:\nHoltWinters(x = d_ipampa, gamma = FALSE)\n\nSmoothing parameters:\n alpha: 0.6535009\n beta : 0.05000744\n gamma: FALSE\n\nCoefficients:\n         [,1]\na -0.76012345\nb -0.07822051\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(holtw_model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n             Length Class  Mode     \nfitted       639    mts    numeric  \nx            215    ts     numeric  \nalpha          1    -none- numeric  \nbeta           1    -none- numeric  \ngamma          1    -none- logical  \ncoefficients   2    -none- numeric  \nseasonal       1    -none- character\nSSE            1    -none- numeric  \ncall           3    -none- call     \n```\n\n\n:::\n\n```{.r .cell-code}\n # modèle Holt-Winters package forecaste - deuxieme modele \nhw_f <- hw(d_ipampa, seasonal = NULL)\nsummary(hw_f)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nForecast method: Holt-Winters' additive method\n\nModel Information:\nHolt-Winters' additive method \n\nCall:\nhw(y = d_ipampa, seasonal = NULL)\n\n  Smoothing parameters:\n    alpha = 0.5271 \n    beta  = 0.0028 \n    gamma = 3e-04 \n\n  Initial states:\n    l = 0.0125 \n    b = 0.0087 \n    s = 0.2086 -0.327 -0.2191 0.0265 0.2662 -0.0816\n           -0.1315 -0.0219 -0.0996 0.0853 0.045 0.249\n\n  sigma:  0.5395\n\n     AIC     AICc      BIC \n906.7153 909.8219 964.0161 \n\nError measures:\n                      ME      RMSE       MAE MPE MAPE      MASE       ACF1\nTraining set -0.01440269 0.5190534 0.3883465 NaN  Inf 0.4954361 0.07842208\n\nForecasts:\n         Point Forecast      Lo 80     Hi 80     Lo 95     Hi 95\nJan 2023    -0.11899046 -0.8104086 0.5724277 -1.176423 0.9384424\nFeb 2023    -0.07826328 -0.8607539 0.7042273 -1.274979 1.1184528\nMar 2023    -0.28184860 -1.1466923 0.5829951 -1.604513 1.0408158\nApr 2023    -0.24232723 -1.1831015 0.6984470 -1.681117 1.1964628\nMay 2023    -0.42684394 -1.4385769 0.5848890 -1.974156 1.1204681\nJun 2023    -0.34980408 -1.4285091 0.7289009 -1.999541 1.2999329\nJul 2023    -0.45898101 -1.6013761 0.6834141 -2.206123 1.2881615\nAug 2023    -0.40898321 -1.6123107 0.7943443 -2.249314 1.4313474\nSep 2023    -0.06201067 -1.3239156 1.1998942 -1.991928 1.8679064\nOct 2023    -0.30085375 -1.6192978 1.0175903 -2.317240 1.7155325\nNov 2023    -0.54649791 -1.9196974 0.8267016 -2.646625 1.5536295\nDec 2023    -0.65465763 -2.0810370 0.7717217 -2.836117 1.5268013\nJan 2024    -0.11958951 -1.5977911 1.3586121 -2.380304 2.1411248\nFeb 2024    -0.07886233 -1.6075814 1.4498567 -2.416836 2.2591117\nMar 2024    -0.28244765 -1.8605495 1.2956542 -2.695946 2.1310509\nApr 2024    -0.24292628 -1.8693821 1.3835296 -2.730376 2.2445233\nMay 2024    -0.42744299 -2.1013153 1.2464293 -2.987410 2.1325238\nJun 2024    -0.35040313 -2.0708342 1.3700279 -2.981575 2.2807691\nJul 2024    -0.45958006 -2.2257820 1.3066219 -3.160753 2.2415928\nAug 2024    -0.40958226 -2.2208293 1.4016647 -3.179645 2.3604810\nSep 2024    -0.06260973 -1.9182307 1.7930112 -2.900537 2.7753176\nOct 2024    -0.30145280 -2.2008257 1.5979201 -3.206293 2.6033874\nNov 2024    -0.54709696 -2.4896438 1.3954499 -3.517966 2.4237721\nDec 2024    -0.65525668 -2.6404390 1.3299257 -3.691331 2.3808177\n```\n\n\n:::\n\n```{.r .cell-code}\nhw_ff <- forecast(hw_f, h=12)\nplot(hw_f$mean)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n\n```{.r .cell-code}\ncheckresiduals(hw_ff)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-2.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tLjung-Box test\n\ndata:  Residuals from Holt-Winters' additive method\nQ* = 18.017, df = 24, p-value = 0.8022\n\nModel df: 0.   Total lags used: 24\n```\n\n\n:::\n:::\n\n\n\nModèle Holt - nous testons un troisième modele, avec la fonction Holt de forecast\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Ajustement du modèle de Holt\n#holtW <- holt(d_ipampa, h=12)\n#summary(holtW)\n\n#  résidus\n#checkresiduals(holtW)\n```\n:::\n\n\n\n### Modèle ADAM ETS\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1er ADAM ETS\nadam_ets <- auto.adam(d_ipampa, model=\"ZZN\", lags=c(1,12), \n                      select=TRUE, ic = \"AIC\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: The data is not strictly positive, so not all the distributions make\nsense. Dropping dlnorm, dinvgauss, dgamma.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Only additive models are allowed for your data. Changing the selection\nmechanism.\nWarning: Only additive models are allowed for your data. Changing the selection\nmechanism.\nWarning: Only additive models are allowed for your data. Changing the selection\nmechanism.\nWarning: Only additive models are allowed for your data. Changing the selection\nmechanism.\n```\n\n\n:::\n\n```{.r .cell-code}\n# Message d'avertissement \n\"Warning messages:\n1: The data is not strictly positive, so not all the distributions make sense. Dropping dlnorm, dinvgauss, dgamma. \n2: Only additive models are allowed for your data. Changing the selection mechanism\"\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Warning messages:\\n1: The data is not strictly positive, so not all the distributions make sense. Dropping dlnorm, dinvgauss, dgamma. \\n2: Only additive models are allowed for your data. Changing the selection mechanism\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# estimation\nsummary(adam_ets)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Observed Fisher Information is not positive semi-definite, which means\nthat the likelihood was not maximised properly. Consider reestimating the\nmodel, tuning the optimiser or using bootstrap via bootstrap=TRUE.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nModel estimated using auto.adam() function: ETS(ANN)+ARIMA(3,0,0)\nResponse variable: y\nDistribution used in the estimation: Generalised Normal with shape=1.2895\nLoss function type: likelihood; Loss function value: 158.6382\nCoefficients:\n            Estimate Std. Error Lower 2.5% Upper 97.5%  \nalpha         0.0003     0.0607     0.0000      0.1199  \nphi1[1]       0.5854     0.0335     0.5195      0.6513 *\nphi2[1]       0.0926     0.0040     0.0848      0.1005 *\nphi3[1]       0.0918     0.0157     0.0608      0.1228 *\nlevel         0.2758     0.1074     0.0641      0.4875 *\nARIMAState1  -0.0004     0.7456    -1.4705      1.4689  \nARIMAState2   0.0038     2.3852    -4.6990      4.7041  \nARIMAState3   0.0001     2.9640    -5.8437      5.8408  \nother         1.2895     0.1638     0.9665      1.6124 *\n\nError standard deviation: 0.5494\nSample size: 215\nNumber of estimated parameters: 10\nNumber of degrees of freedom: 205\nInformation criteria:\n     AIC     AICc      BIC     BICc \n337.2764 338.3548 370.9828 373.8787 \n```\n\n\n:::\n\n```{.r .cell-code}\n# deuxieme adam_ets pour eviter le message d'avertissement \nadam_ets <- auto.adam(d_ipampa, model=\"AAN\",  select=TRUE, ic = \"AIC\", distribution = c(\"dnorm\"), bootstrap=TRUE, control=list(maxit=1000, trace=TRUE),orders=list(ar=c(0), i = c(0), ma = c(0)))\n\nsummary(adam_ets)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Observed Fisher Information is not positive semi-definite, which means\nthat the likelihood was not maximised properly. Consider reestimating the\nmodel, tuning the optimiser or using bootstrap via bootstrap=TRUE.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nModel estimated using auto.adam() function: ETS(AAN)\nResponse variable: y\nDistribution used in the estimation: Normal\nLoss function type: likelihood; Loss function value: 172.4178\nCoefficients:\n      Estimate Std. Error Lower 2.5% Upper 97.5%  \nalpha   0.5797     0.0661     0.4494      0.7099 *\nbeta    0.0001     0.0145     0.0000      0.0287  \nlevel   0.3396     0.4910    -0.6284      1.3073  \ntrend  -0.0044     0.0217    -0.0472      0.0384  \n\nError standard deviation: 0.5608\nSample size: 215\nNumber of estimated parameters: 5\nNumber of degrees of freedom: 210\nInformation criteria:\n     AIC     AICc      BIC     BICc \n354.8355 355.1226 371.6887 372.4596 \n```\n\n\n:::\n\n```{.r .cell-code}\n\"Warning message:\nObserved Fisher Information is not positive semi-definite, which means that the likelihood was not maximised properly. Consider reestimating the model, tuning the optimiser or using bootstrap via bootstrap=TRUE.\"\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Warning message:\\nObserved Fisher Information is not positive semi-definite, which means that the likelihood was not maximised properly. Consider reestimating the model, tuning the optimiser or using bootstrap via bootstrap=TRUE.\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# troicieme adam_ets  modèle ADAM sans saisonnalité\n# adam_ets <-auto.adam(d_ipampa, model=\"ANN\", select=TRUE, ic=\"AIC\", bootstrap=TRUE, distribution = c(\"dnorm\", \"dlaplace\"), control=list(maxit=1000, trace=TRUE))\n\n#summary(adam_ets)\n```\n:::\n\n\n\n### Modèle ADAM ETS ARIMA\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# premier test model ADAM ETS SARIMA\nadam_ets_sa <- auto.adam(d_ipampa, model=\"ZZN\", lags=c(1,1,12), orders=list(ar=c(3,3), i=c(0), ma=c(3,3), select=TRUE))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: The data is not strictly positive, so not all the distributions make\nsense. Dropping dlnorm, dinvgauss, dgamma.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Only additive models are allowed for your data. Changing the selection\nmechanism.\nWarning: Only additive models are allowed for your data. Changing the selection\nmechanism.\nWarning: Only additive models are allowed for your data. Changing the selection\nmechanism.\nWarning: Only additive models are allowed for your data. Changing the selection\nmechanism.\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(adam_ets_sa)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Observed Fisher Information is not positive semi-definite, which means\nthat the likelihood was not maximised properly. Consider reestimating the\nmodel, tuning the optimiser or using bootstrap via bootstrap=TRUE.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nModel estimated using auto.adam() function: ETS(ANN)+ARIMA(3,0,0)\nResponse variable: y\nDistribution used in the estimation: Generalised Normal with shape=1.2895\nLoss function type: likelihood; Loss function value: 158.6382\nCoefficients:\n            Estimate Std. Error Lower 2.5% Upper 97.5%  \nalpha         0.0003     0.0607     0.0000      0.1199  \nphi1[1]       0.5854     0.0335     0.5195      0.6513 *\nphi2[1]       0.0926     0.0040     0.0848      0.1005 *\nphi3[1]       0.0918     0.0157     0.0608      0.1228 *\nlevel         0.2758     0.1074     0.0641      0.4875 *\nARIMAState1  -0.0004     0.7456    -1.4705      1.4689  \nARIMAState2   0.0038     2.3852    -4.6990      4.7041  \nARIMAState3   0.0001     2.9640    -5.8437      5.8408  \nother         1.2895     0.1638     0.9665      1.6124 *\n\nError standard deviation: 0.5494\nSample size: 215\nNumber of estimated parameters: 10\nNumber of degrees of freedom: 205\nInformation criteria:\n     AIC     AICc      BIC     BICc \n337.2764 338.3548 370.9828 373.8787 \n```\n\n\n:::\n\n```{.r .cell-code}\n\"Warning messages:\n1: The data is not strictly positive, so not all the distributions make sense. Dropping dlnorm, dinvgauss, dgamma. \n2: Only additive models are allowed for your data. Changing the selection mechanism.  \"\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Warning messages:\\n1: The data is not strictly positive, so not all the distributions make sense. Dropping dlnorm, dinvgauss, dgamma. \\n2: Only additive models are allowed for your data. Changing the selection mechanism.  \"\n```\n\n\n:::\n\n```{.r .cell-code}\n# apres modification pour éviter les message d'avertisment \nadam_ets_sa <- auto.adam(d_ipampa, model=\"AAN\", lags=c(1,1,12), orders=list(ar=c(3,3), i=c(0), ma=c(3,3), select=TRUE), distribution = c(\"dnorm\", \"dlaplace\"))\nsummary(adam_ets_sa)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Observed Fisher Information is not positive semi-definite, which means\nthat the likelihood was not maximised properly. Consider reestimating the\nmodel, tuning the optimiser or using bootstrap via bootstrap=TRUE.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nModel estimated using auto.adam() function: ETS(AAN)\nResponse variable: y\nDistribution used in the estimation: Laplace\nLoss function type: likelihood; Loss function value: 166.9445\nCoefficients:\n      Estimate Std. Error Lower 2.5% Upper 97.5%  \nalpha   0.5671     0.0061     0.5550      0.5791 *\nbeta    0.0000     0.0022     0.0000      0.0043  \nlevel   0.2844     7.3964   -14.2962     14.8613  \ntrend   0.0158     0.0079     0.0003      0.0314 *\n\nError standard deviation: 0.5621\nSample size: 215\nNumber of estimated parameters: 5\nNumber of degrees of freedom: 210\nInformation criteria:\n     AIC     AICc      BIC     BICc \n343.8889 344.1760 360.7421 361.5130 \n```\n\n\n:::\n\n```{.r .cell-code}\n\"Warning message:\nObserved Fisher Information is not positive semi-definite, which means that the likelihood was not maximised properly. Consider reestimating the model, tuning the optimiser or using bootstrap via bootstrap=TRUE. \"\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Warning message:\\nObserved Fisher Information is not positive semi-definite, which means that the likelihood was not maximised properly. Consider reestimating the model, tuning the optimiser or using bootstrap via bootstrap=TRUE. \"\n```\n\n\n:::\n\n```{.r .cell-code}\n# Modele choisi\nadam_ets_sa <- auto.adam(d_ipampa, model=\"ANN\", lags=c(1,1,12), orders=list(ar=c(3,3), i=c(0), ma=c(3,3), select=TRUE), distribution=c(\"dnorm\", \"dlaplace\"), bootstrap=TRUE,control=list(maxit=3000))\nsummary(adam_ets_sa)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Observed Fisher Information is not positive semi-definite, which means\nthat the likelihood was not maximised properly. Consider reestimating the\nmodel, tuning the optimiser or using bootstrap via bootstrap=TRUE.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nModel estimated using auto.adam() function: ETS(ANN)+ARIMA(3,0,0)\nResponse variable: y\nDistribution used in the estimation: Laplace\nLoss function type: likelihood; Loss function value: 160.6124\nCoefficients:\n            Estimate Std. Error Lower 2.5% Upper 97.5%  \nalpha         0.0036     0.0050     0.0000      0.0135  \nphi1[1]       0.5864     0.0520     0.4839      0.6889 *\nphi2[1]       0.0559     0.0008     0.0543      0.0574 *\nphi3[1]       0.1051     0.0125     0.0804      0.1298 *\nlevel         0.2951     0.3738    -0.4419      1.0317  \nARIMAState1   0.0007     0.0844    -0.1657      0.1669  \nARIMAState2   0.0000     0.0794    -0.1565      0.1564  \nARIMAState3   0.0024     2.2856    -4.5038      4.5065  \n\nError standard deviation: 0.5488\nSample size: 215\nNumber of estimated parameters: 9\nNumber of degrees of freedom: 206\nInformation criteria:\n     AIC     AICc      BIC     BICc \n339.2248 340.1028 369.5605 371.9184 \n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(adam_ets_sa)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Observed Fisher Information is not positive semi-definite, which means\nthat the likelihood was not maximised properly. Consider reestimating the\nmodel, tuning the optimiser or using bootstrap via bootstrap=TRUE.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nModel estimated using auto.adam() function: ETS(ANN)+ARIMA(3,0,0)\nResponse variable: y\nDistribution used in the estimation: Laplace\nLoss function type: likelihood; Loss function value: 160.6124\nCoefficients:\n            Estimate Std. Error Lower 2.5% Upper 97.5%  \nalpha         0.0036     0.0050     0.0000      0.0135  \nphi1[1]       0.5864     0.0520     0.4839      0.6889 *\nphi2[1]       0.0559     0.0008     0.0543      0.0574 *\nphi3[1]       0.1051     0.0125     0.0804      0.1298 *\nlevel         0.2951     0.3738    -0.4419      1.0317  \nARIMAState1   0.0007     0.0844    -0.1657      0.1669  \nARIMAState2   0.0000     0.0794    -0.1565      0.1564  \nARIMAState3   0.0024     2.2856    -4.5038      4.5065  \n\nError standard deviation: 0.5488\nSample size: 215\nNumber of estimated parameters: 9\nNumber of degrees of freedom: 206\nInformation criteria:\n     AIC     AICc      BIC     BICc \n339.2248 340.1028 369.5605 371.9184 \n```\n\n\n:::\n\n```{.r .cell-code}\nforecast(adam_ets_sa, h=12)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n             Jan         Feb         Mar         Apr         May         Jun\n2023 -0.62258914 -0.35958468 -0.30092313 -0.19125026 -0.09602462 -0.02789313\n             Jul         Aug         Sep         Oct         Nov         Dec\n2023  0.02890327  0.07602108  0.11398312  0.14484443  0.17001336  0.19048551\n```\n\n\n:::\n\n```{.r .cell-code}\n# meme apres avoir reduit la complexité du modele cela donne l'avertissement \n#adam_ets_sa_Test <- auto.adam(d_ipampa, model=\"ANN\", lags=c(1,12), orders=list(ar=c(1,1), i=c(0), ma=c(1,1),select=TRUE), distribution=c(\"dnorm\", \"dlaplace\"), bootstrap=TRUE, bootstrap=TRUE, control=list(maxit=3000))\n\n#forecast(adam_ets_sa_Test, h=12)\n\n#?auto.adam()\n```\n:::\n\n\n\nsi l'on veut éviter l'avertissement il faut mettre model = 'ANN', mais cela implique que les prévision sont toutes égales. sur le graphique cela donne une ligne droite\n\nforecast(adam_ets_sa_Test, h=12) Jan Feb Mar Apr May 2023 -0.588298 -0.588298 -0.588298 -0.588298 -0.588298 Jun Jul Aug Sep Oct 2023 -0.588298 -0.588298 -0.588298 -0.588298 -0.588298 Nov Dec 2023 -0.588298 -0.588298\n\nOn continue avec l'avertissement ...\n\n### Modèle SSARIMA\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# SSARIMA\nssarima <- auto.ssarima(d_ipampa, lags=c(1,12), orders=list(ar=c(3,3), i=(0), ma=c(3,3), select=TRUE), ic=\"AICc\")\nssarima \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nTime elapsed: 1.08 seconds\nModel estimated: ARIMA(3,0,3)\nMatrix of AR terms:\n       Lag 1\nAR(1) 0.1719\nAR(2) 0.0180\nAR(3) 0.5445\nMatrix of MA terms:\n        Lag 1\nMA(1)  0.4367\nMA(2)  0.3575\nMA(3) -0.3599\nInitial values were produced using backcasting.\n\nLoss function type: likelihood; Loss function value: 161.0136\nError standard deviation: 0.5202\nSample size: 215\nNumber of estimated parameters: 7\nNumber of degrees of freedom: 208\nInformation criteria:\n     AIC     AICc      BIC     BICc \n336.0272 336.5682 359.6216 361.0746 \n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(ssarima)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nTime elapsed: 1.08 seconds\nModel estimated: ARIMA(3,0,3)\nMatrix of AR terms:\n       Lag 1\nAR(1) 0.1719\nAR(2) 0.0180\nAR(3) 0.5445\nMatrix of MA terms:\n        Lag 1\nMA(1)  0.4367\nMA(2)  0.3575\nMA(3) -0.3599\nInitial values were produced using backcasting.\n\nLoss function type: likelihood; Loss function value: 161.0136\nError standard deviation: 0.5202\nSample size: 215\nNumber of estimated parameters: 7\nNumber of degrees of freedom: 208\nInformation criteria:\n     AIC     AICc      BIC     BICc \n336.0272 336.5682 359.6216 361.0746 \n```\n\n\n:::\n\n```{.r .cell-code}\n?auto.ssarima()\n```\n:::\n\n\n\n### Modèle CES\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# auto \nces <- auto.ces(d_ipampa, models=c(\"n\", \"s\", \"p\", \"f\"), ic=\"AICc\") #  tester plusieurs types de modèles \nsummary(ces)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nTime elapsed: 1.18 seconds\nModel estimated: CES(f)\na0 + ia1: 1.4655+0.9264i\nb0 + ib1: 0.995+0.9989i\nInitial values were produced using backcasting.\n\nLoss function type: likelihood; Loss function value: 158.5716\nError standard deviation: 0.5119\nSample size: 215\nNumber of estimated parameters: 5\nNumber of degrees of freedom: 210\nInformation criteria:\n     AIC     AICc      BIC     BICc \n327.1431 327.4302 343.9963 344.7672 \n```\n\n\n:::\n\n```{.r .cell-code}\nces\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nTime elapsed: 1.18 seconds\nModel estimated: CES(f)\na0 + ia1: 1.4655+0.9264i\nb0 + ib1: 0.995+0.9989i\nInitial values were produced using backcasting.\n\nLoss function type: likelihood; Loss function value: 158.5716\nError standard deviation: 0.5119\nSample size: 215\nNumber of estimated parameters: 5\nNumber of degrees of freedom: 210\nInformation criteria:\n     AIC     AICc      BIC     BICc \n327.1431 327.4302 343.9963 344.7672 \n```\n\n\n:::\n\n```{.r .cell-code}\ncheckresiduals(ces)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tLjung-Box test\n\ndata:  Residuals\nQ* = 24.373, df = 24, p-value = 0.4405\n\nModel df: 0.   Total lags used: 24\n```\n\n\n:::\n\n```{.r .cell-code}\n#?auto.ces()\n```\n:::\n\n\n\n### Modèle Naïf\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnaive <- naive(d_ipampa, h=12)\nsummary(naive)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nForecast method: Naive method\n\nModel Information:\nCall: naive(y = d_ipampa, h = 12) \n\nResidual sd: 0.5714 \n\nError measures:\n                       ME      RMSE       MAE MPE MAPE      MASE       ACF1\nTraining set -0.006982548 0.5714192 0.4232642 NaN  Inf 0.5399827 -0.2612091\n\nForecasts:\n         Point Forecast     Lo 80       Hi 80     Lo 95       Hi 95\nJan 2023      -1.194265 -1.926568 -0.46196213 -2.314226 -0.07430425\nFeb 2023      -1.194265 -2.229898 -0.15863223 -2.778129  0.38959880\nMar 2023      -1.194265 -2.462652  0.07412099 -3.134095  0.74556413\nApr 2023      -1.194265 -2.658872  0.27034103 -3.434187  1.04565679\nMay 2023      -1.194265 -2.831745  0.44321436 -3.698574  1.31004373\nJun 2023      -1.194265 -2.988034  0.59950379 -3.937598  1.54906779\nJul 2023      -1.194265 -3.131757  0.74322676 -4.157404  1.76887310\nAug 2023      -1.194265 -3.265531  0.87700084 -4.361993  1.97346289\nSep 2023      -1.194265 -3.391175  1.00264420 -4.554148  2.16561783\nOct 2023      -1.194265 -3.510011  1.12148064 -4.735893  2.34736248\nNov 2023      -1.194265 -3.623040  1.23450953 -4.908756  2.52022526\nDec 2023      -1.194265 -3.731038  1.34250728 -5.073924  2.68539355\n```\n\n\n:::\n:::\n\n\n\n# Prévisions\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Prévision et tracé pour le modèle AR(1)\nar1_forecast <- forecast(ar1, h=12)\nplot(ar1_forecast, main=\"Prévision pour le modèle AR(1)\", xlab=\"Mois\", ylab=\"Valeurs\", col=\"blue\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Prévision et tracé pour le modèle AR(p)\narp_forecast <- forecast(arp, h=12)\nplot(arp_forecast, main=\"Prévision pour le modèle AR(p)\", xlab=\"Mois\", ylab=\"Valeurs\", col=\"blue\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-30-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Prévision et tracé pour le modèle ARIMA\narima_forecast <- forecast(arima, h=12)\nplot(arima_forecast, main=\"Prévision pour le modèle ARIMA\", xlab=\"Mois\", ylab=\"Valeurs\", col=\"blue\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-30-3.png){width=672}\n:::\n\n```{.r .cell-code}\n# Prévision et tracé pour le modèle Holt (LED Holt sans saisonnalité)\n#holt_forecast <- forecast(holtw_model, h=12, interval=\"confidence\", level = 0.90)\n#plot(holt_forecast, main=\"Prévision pour le modèle Holt\", xlab=\"Mois\", ylab=\"Valeurs\", col=\"purple\")\n\n\nhw_forecast <- forecast(hw_f, h=12)\nplot(hw_forecast, main=\"Prévision pour le modèle Holt Winter\", xlab=\"Mois\", ylab=\"Valeurs\", col=\"blue\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-30-4.png){width=672}\n:::\n\n```{.r .cell-code}\n# Prévision et tracé pour le modèle ADAM ETS\nadam_ets_forecast <- forecast(adam_ets, h=12, interval=\"confidence\", level = 0.90)\nplot(adam_ets_forecast, main=\"Prévision pour le modèle ADAM ETS\", xlab=\"Mois\", ylab=\"Valeurs\", col=\"blue\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-30-5.png){width=672}\n:::\n\n```{.r .cell-code}\n# Prévision et tracé pour le modèle ADAM ES \nadamES_forecast <- forecast(adam_ets_sa, h=12, level = 0.90)\nplot(adamES_forecast, main=\"Prévision pour le modèle ADAM ETS SARIMA\", xlab=\"Mois\", ylab=\"Valeurs\", col=\"blue\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-30-6.png){width=672}\n:::\n\n```{.r .cell-code}\n# Prévision et tracé pour le modèle SSARIMA - State Space ARIMA\nssarima_forecast <- forecast(ssarima, h=12,  level = 0.90)\nplot(ssarima_forecast, main=\"Prévision pour le modèle SSARIMA\", xlab=\"Mois\", ylab=\"Valeurs\", col=\"blue\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-30-7.png){width=672}\n:::\n\n```{.r .cell-code}\n# Prévision et tracé pour le modèle CES\nces_forecast <- forecast(ces, h=12,  level = 0.90)\nplot(ces_forecast, main=\"Prévision pour le modèle CES\", xlab=\"Mois\", ylab=\"Valeurs\", col=\"blue\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-30-8.png){width=672}\n:::\n\n```{.r .cell-code}\n# Graphique prévsion modele naive\n\nplot(naive, main=\" Méthode de Prévision Naïve\", xlab=\"Temps\", ylab=\"Valeurs\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-30-9.png){width=672}\n:::\n:::\n\n\n\n## Récupération des \"points forecastes\" dans un seul dataframe\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstart_date <- as.Date(\"2023-01-01\") # La date de début des prévisions\nforecast_horizon <- 12 # Le nombre de mois à prévoir\n\n# séquence de dates pour les prévisions\nforecast_dates <- seq(start_date, by = \"month\", length.out = forecast_horizon)\n\n#  data frames avec les dates et les previsions\ndf <- data.frame(\n  Date = forecast_dates,\n  AR1 = as.numeric(ar1_forecast$mean),\n  ARP = as.numeric(arp_forecast$mean),\n  ARIMA =as.numeric(arima_forecast$mean),\n  HOLT = as.numeric(hw_forecast$mean),\n  ADAM_ETS = as.numeric(adam_ets_forecast$mean),\n  ADAM_ETS_SARIMA = as.numeric(adamES_forecast$mean),\n  SSARIMA =  as.numeric(ssarima_forecast$mean),\n  CES = as.numeric(ces_forecast$mean),\n  NAIVE = as.numeric(naive$mean)\n)\n\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         Date         AR1         ARP      ARIMA        HOLT   ADAM_ETS\n1  2023-01-01 -0.76672710 -0.73037881 -0.6694243 -0.11899046 -0.6541573\n2  2023-02-01 -0.46889491 -0.62651673 -0.5646122 -0.07826328 -0.6730705\n3  2023-03-01 -0.26141868 -0.49364745 -0.4762105 -0.28184860 -0.6908500\n4  2023-04-01 -0.11688633 -0.39655404 -0.4016499 -0.24232723 -0.7087616\n5  2023-05-01 -0.01620203 -0.31712205 -0.3387634 -0.42684394 -0.7270051\n6  2023-06-01  0.05393680 -0.25386675 -0.2857230 -0.34980408 -0.7455831\n7  2023-07-01  0.10279699 -0.20317926 -0.2409872 -0.45898101 -0.7642945\n8  2023-08-01  0.13683404 -0.16262133 -0.2032557 -0.40898321 -0.7828873\n9  2023-09-01  0.16054497 -0.13015772 -0.1714318 -0.06201067 -0.8013775\n10 2023-10-01  0.17706251 -0.10417504 -0.1445906 -0.30085375 -0.8202084\n11 2023-11-01  0.18856898 -0.08337908 -0.1219520 -0.54649791 -0.8385255\n12 2023-12-01  0.19658463 -0.06673454 -0.1028579 -0.65465763 -0.8568616\n   ADAM_ETS_SARIMA    SSARIMA         CES     NAIVE\n1      -0.62258914 -0.3992712 -0.24360607 -1.194265\n2      -0.35958468 -0.5418099  0.01295041 -1.194265\n3      -0.30092313 -0.3051800 -0.17555379 -1.194265\n4      -0.19125026 -0.2796120 -0.16331942 -1.194265\n5      -0.09602462 -0.3485568 -0.23342431 -1.194265\n6      -0.02789313 -0.2311090 -0.33789275 -1.194265\n7       0.02890327 -0.1982459 -0.28771617 -1.194265\n8       0.07602108 -0.2280172 -0.27307246 -1.194265\n9       0.11398312 -0.1685953 -0.05269430 -1.194265\n10      0.14484443 -0.1410267 -0.12204586 -1.194265\n11      0.17001336 -0.1514261 -0.34386009 -1.194265\n12      0.19048551 -0.1203632 -0.35952800 -1.194265\n```\n\n\n:::\n:::\n\n\n\n## Recuperation des données 2023\n\nLors du Téléchargement de notre jeu de données nous nous sommes arrêtés au mois de décembre 2022 et mis de coté les données pour l'année 2023, on récupère les données pour les comparer aux modèles\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreal <- read_excel(\"/Users/Isabel/Desktop/Cours_M1/Projets/portfolio/posts/post-with-code/techniques_previsions/data/serie_ipampa.xlsx\", sheet = \"complete\") \nreal <- real[nrow(real):1,]\nreal <- real[, 2]\nreal <- ts(data = real, start = c(2005, 01), frequency=12) \n\n\nreal_2023 <- window(real, start = c(2023, 1), end = c(2023, 12))\nreal_2023\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       Jan   Feb   Mar   Apr   May   Jun   Jul   Aug   Sep   Oct   Nov   Dec\n2023 140.1 138.6 137.5 135.5 133.5 132.0 130.8 132.1 132.4 131.9 130.9 129.5\n```\n\n\n:::\n\n```{.r .cell-code}\nreal_d <- diff(real, differences = 1)\n\nreal_d <- window(real_d, start = c(2023, 1), end = c(2023, 12))\nplot(real_d)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n\n```{.r .cell-code}\nreal_d <- as.numeric(real_d)\ndf$Real = real_d\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         Date         AR1         ARP      ARIMA        HOLT   ADAM_ETS\n1  2023-01-01 -0.76672710 -0.73037881 -0.6694243 -0.11899046 -0.6541573\n2  2023-02-01 -0.46889491 -0.62651673 -0.5646122 -0.07826328 -0.6730705\n3  2023-03-01 -0.26141868 -0.49364745 -0.4762105 -0.28184860 -0.6908500\n4  2023-04-01 -0.11688633 -0.39655404 -0.4016499 -0.24232723 -0.7087616\n5  2023-05-01 -0.01620203 -0.31712205 -0.3387634 -0.42684394 -0.7270051\n6  2023-06-01  0.05393680 -0.25386675 -0.2857230 -0.34980408 -0.7455831\n7  2023-07-01  0.10279699 -0.20317926 -0.2409872 -0.45898101 -0.7642945\n8  2023-08-01  0.13683404 -0.16262133 -0.2032557 -0.40898321 -0.7828873\n9  2023-09-01  0.16054497 -0.13015772 -0.1714318 -0.06201067 -0.8013775\n10 2023-10-01  0.17706251 -0.10417504 -0.1445906 -0.30085375 -0.8202084\n11 2023-11-01  0.18856898 -0.08337908 -0.1219520 -0.54649791 -0.8385255\n12 2023-12-01  0.19658463 -0.06673454 -0.1028579 -0.65465763 -0.8568616\n   ADAM_ETS_SARIMA    SSARIMA         CES     NAIVE Real\n1      -0.62258914 -0.3992712 -0.24360607 -1.194265  0.5\n2      -0.35958468 -0.5418099  0.01295041 -1.194265 -1.5\n3      -0.30092313 -0.3051800 -0.17555379 -1.194265 -1.1\n4      -0.19125026 -0.2796120 -0.16331942 -1.194265 -2.0\n5      -0.09602462 -0.3485568 -0.23342431 -1.194265 -2.0\n6      -0.02789313 -0.2311090 -0.33789275 -1.194265 -1.5\n7       0.02890327 -0.1982459 -0.28771617 -1.194265 -1.2\n8       0.07602108 -0.2280172 -0.27307246 -1.194265  1.3\n9       0.11398312 -0.1685953 -0.05269430 -1.194265  0.3\n10      0.14484443 -0.1410267 -0.12204586 -1.194265 -0.5\n11      0.17001336 -0.1514261 -0.34386009 -1.194265 -1.0\n12      0.19048551 -0.1203632 -0.35952800 -1.194265 -1.4\n```\n\n\n:::\n\n```{.r .cell-code}\nnames (df) # on verifie que real fait bien partie du data frame \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Date\"            \"AR1\"             \"ARP\"             \"ARIMA\"          \n [5] \"HOLT\"            \"ADAM_ETS\"        \"ADAM_ETS_SARIMA\" \"SSARIMA\"        \n [9] \"CES\"             \"NAIVE\"           \"Real\"           \n```\n\n\n:::\n:::\n\n\n\nGraphique de comparaison\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Transformer les données en format long\ndf_long <- pivot_longer(df, cols = -Date, names_to = \"Model\", values_to = \"Value\")\n\n# graphique plotly\np <- ggplot(df_long, aes(x = Date, y = Value, color = Model)) +\n  geom_line() +\n  theme_minimal() +\n  labs(title = \"Comparaison des prévisions des modèles avec les données réelles\n       Jan 2023 à Déc 2023 - série differencié\",\n       x = \"Date\",\n       y = \"Valeur\",\n       color = \"Modèle\") +\n  theme(legend.position = \"bottom\") \n\n\nggplotly(p)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-72c5501a7dda9578700c\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-72c5501a7dda9578700c\">{\"x\":{\"data\":[{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[-0.6541573158375128,-0.67307046129065373,-0.69084997834421147,-0.7087615539976283,-0.72700512880093682,-0.74558306223909987,-0.764294531902037,-0.78288733273176969,-0.80137745711839836,-0.82020844233121581,-0.83852552630587363,-0.85686155615578685],\"text\":[\"Date: 2023-01-01<br />Value: -0.65415732<br />Model: ADAM_ETS\",\"Date: 2023-02-01<br />Value: -0.67307046<br />Model: ADAM_ETS\",\"Date: 2023-03-01<br />Value: -0.69084998<br />Model: ADAM_ETS\",\"Date: 2023-04-01<br />Value: -0.70876155<br />Model: ADAM_ETS\",\"Date: 2023-05-01<br />Value: -0.72700513<br />Model: ADAM_ETS\",\"Date: 2023-06-01<br />Value: -0.74558306<br />Model: ADAM_ETS\",\"Date: 2023-07-01<br />Value: -0.76429453<br />Model: ADAM_ETS\",\"Date: 2023-08-01<br />Value: -0.78288733<br />Model: ADAM_ETS\",\"Date: 2023-09-01<br />Value: -0.80137746<br />Model: ADAM_ETS\",\"Date: 2023-10-01<br />Value: -0.82020844<br />Model: ADAM_ETS\",\"Date: 2023-11-01<br />Value: -0.83852553<br />Model: ADAM_ETS\",\"Date: 2023-12-01<br />Value: -0.85686156<br />Model: ADAM_ETS\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(248,118,109,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"ADAM_ETS\",\"legendgroup\":\"ADAM_ETS\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[-0.62258913668980043,-0.35958468024176465,-0.30092313142104082,-0.19125025939708568,-0.096024619780947451,-0.027893133563162309,0.028903268156281858,0.076021080921534284,0.11398311990303558,0.14484442676698819,0.17001335592901901,0.19048551066930774],\"text\":[\"Date: 2023-01-01<br />Value: -0.62258914<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-02-01<br />Value: -0.35958468<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-03-01<br />Value: -0.30092313<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-04-01<br />Value: -0.19125026<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-05-01<br />Value: -0.09602462<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-06-01<br />Value: -0.02789313<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-07-01<br />Value:  0.02890327<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-08-01<br />Value:  0.07602108<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-09-01<br />Value:  0.11398312<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-10-01<br />Value:  0.14484443<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-11-01<br />Value:  0.17001336<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-12-01<br />Value:  0.19048551<br />Model: ADAM_ETS_SARIMA\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(216,144,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"ADAM_ETS_SARIMA\",\"legendgroup\":\"ADAM_ETS_SARIMA\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[-0.76672709887241819,-0.46889491186513726,-0.26141868312982003,-0.11688633448485181,-0.016202029915772548,0.053936795624664968,0.10279699155338298,0.13683404204286315,0.16054497451054264,0.17706251379205645,0.18856898256076671,0.19658463315307276],\"text\":[\"Date: 2023-01-01<br />Value: -0.76672710<br />Model: AR1\",\"Date: 2023-02-01<br />Value: -0.46889491<br />Model: AR1\",\"Date: 2023-03-01<br />Value: -0.26141868<br />Model: AR1\",\"Date: 2023-04-01<br />Value: -0.11688633<br />Model: AR1\",\"Date: 2023-05-01<br />Value: -0.01620203<br />Model: AR1\",\"Date: 2023-06-01<br />Value:  0.05393680<br />Model: AR1\",\"Date: 2023-07-01<br />Value:  0.10279699<br />Model: AR1\",\"Date: 2023-08-01<br />Value:  0.13683404<br />Model: AR1\",\"Date: 2023-09-01<br />Value:  0.16054497<br />Model: AR1\",\"Date: 2023-10-01<br />Value:  0.17706251<br />Model: AR1\",\"Date: 2023-11-01<br />Value:  0.18856898<br />Model: AR1\",\"Date: 2023-12-01<br />Value:  0.19658463<br />Model: AR1\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(163,165,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"AR1\",\"legendgroup\":\"AR1\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[-0.66942431056690621,-0.56461215041306456,-0.47621049215272504,-0.40164993380045622,-0.33876336615904129,-0.28572298559974102,-0.24098716878879667,-0.20325566526941896,-0.17143180556771076,-0.1445906263977928,-0.12195198652241129,-0.10285789187914753],\"text\":[\"Date: 2023-01-01<br />Value: -0.66942431<br />Model: ARIMA\",\"Date: 2023-02-01<br />Value: -0.56461215<br />Model: ARIMA\",\"Date: 2023-03-01<br />Value: -0.47621049<br />Model: ARIMA\",\"Date: 2023-04-01<br />Value: -0.40164993<br />Model: ARIMA\",\"Date: 2023-05-01<br />Value: -0.33876337<br />Model: ARIMA\",\"Date: 2023-06-01<br />Value: -0.28572299<br />Model: ARIMA\",\"Date: 2023-07-01<br />Value: -0.24098717<br />Model: ARIMA\",\"Date: 2023-08-01<br />Value: -0.20325567<br />Model: ARIMA\",\"Date: 2023-09-01<br />Value: -0.17143181<br />Model: ARIMA\",\"Date: 2023-10-01<br />Value: -0.14459063<br />Model: ARIMA\",\"Date: 2023-11-01<br />Value: -0.12195199<br />Model: ARIMA\",\"Date: 2023-12-01<br />Value: -0.10285789<br />Model: ARIMA\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(57,182,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"ARIMA\",\"legendgroup\":\"ARIMA\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[-0.73037880896847007,-0.62651672742651943,-0.49364745201109195,-0.39655403741384798,-0.31712204585938353,-0.25386674828288136,-0.20317925556932323,-0.16262132847754601,-0.13015771884047131,-0.10417504116839216,-0.083379084892844998,-0.066734535143469095],\"text\":[\"Date: 2023-01-01<br />Value: -0.73037881<br />Model: ARP\",\"Date: 2023-02-01<br />Value: -0.62651673<br />Model: ARP\",\"Date: 2023-03-01<br />Value: -0.49364745<br />Model: ARP\",\"Date: 2023-04-01<br />Value: -0.39655404<br />Model: ARP\",\"Date: 2023-05-01<br />Value: -0.31712205<br />Model: ARP\",\"Date: 2023-06-01<br />Value: -0.25386675<br />Model: ARP\",\"Date: 2023-07-01<br />Value: -0.20317926<br />Model: ARP\",\"Date: 2023-08-01<br />Value: -0.16262133<br />Model: ARP\",\"Date: 2023-09-01<br />Value: -0.13015772<br />Model: ARP\",\"Date: 2023-10-01<br />Value: -0.10417504<br />Model: ARP\",\"Date: 2023-11-01<br />Value: -0.08337908<br />Model: ARP\",\"Date: 2023-12-01<br />Value: -0.06673454<br />Model: ARP\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,191,125,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"ARP\",\"legendgroup\":\"ARP\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[-0.24360606969427784,0.012950410738757995,-0.17555378729275009,-0.1633194222064305,-0.23342430880322351,-0.33789274535728309,-0.28771616990522697,-0.27307246396856655,-0.052694299432494082,-0.12204585657844846,-0.34386008614788333,-0.35952799672505892],\"text\":[\"Date: 2023-01-01<br />Value: -0.24360607<br />Model: CES\",\"Date: 2023-02-01<br />Value:  0.01295041<br />Model: CES\",\"Date: 2023-03-01<br />Value: -0.17555379<br />Model: CES\",\"Date: 2023-04-01<br />Value: -0.16331942<br />Model: CES\",\"Date: 2023-05-01<br />Value: -0.23342431<br />Model: CES\",\"Date: 2023-06-01<br />Value: -0.33789275<br />Model: CES\",\"Date: 2023-07-01<br />Value: -0.28771617<br />Model: CES\",\"Date: 2023-08-01<br />Value: -0.27307246<br />Model: CES\",\"Date: 2023-09-01<br />Value: -0.05269430<br />Model: CES\",\"Date: 2023-10-01<br />Value: -0.12204586<br />Model: CES\",\"Date: 2023-11-01<br />Value: -0.34386009<br />Model: CES\",\"Date: 2023-12-01<br />Value: -0.35952800<br />Model: CES\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,191,196,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"CES\",\"legendgroup\":\"CES\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[-0.11899046439851604,-0.078263281561240017,-0.28184859883700014,-0.24232723308452975,-0.42684394177005736,-0.34980408058762225,-0.45898100574481371,-0.40898320611526018,-0.062010674534698773,-0.30085374726521646,-0.54649790511704233,-0.65465763325595816],\"text\":[\"Date: 2023-01-01<br />Value: -0.11899046<br />Model: HOLT\",\"Date: 2023-02-01<br />Value: -0.07826328<br />Model: HOLT\",\"Date: 2023-03-01<br />Value: -0.28184860<br />Model: HOLT\",\"Date: 2023-04-01<br />Value: -0.24232723<br />Model: HOLT\",\"Date: 2023-05-01<br />Value: -0.42684394<br />Model: HOLT\",\"Date: 2023-06-01<br />Value: -0.34980408<br />Model: HOLT\",\"Date: 2023-07-01<br />Value: -0.45898101<br />Model: HOLT\",\"Date: 2023-08-01<br />Value: -0.40898321<br />Model: HOLT\",\"Date: 2023-09-01<br />Value: -0.06201067<br />Model: HOLT\",\"Date: 2023-10-01<br />Value: -0.30085375<br />Model: HOLT\",\"Date: 2023-11-01<br />Value: -0.54649791<br />Model: HOLT\",\"Date: 2023-12-01<br />Value: -0.65465763<br />Model: HOLT\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,176,246,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"HOLT\",\"legendgroup\":\"HOLT\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[-1.1942652903955633,-1.1942652903955633,-1.1942652903955633,-1.1942652903955633,-1.1942652903955633,-1.1942652903955633,-1.1942652903955633,-1.1942652903955633,-1.1942652903955633,-1.1942652903955633,-1.1942652903955633,-1.1942652903955633],\"text\":[\"Date: 2023-01-01<br />Value: -1.19426529<br />Model: NAIVE\",\"Date: 2023-02-01<br />Value: -1.19426529<br />Model: NAIVE\",\"Date: 2023-03-01<br />Value: -1.19426529<br />Model: NAIVE\",\"Date: 2023-04-01<br />Value: -1.19426529<br />Model: NAIVE\",\"Date: 2023-05-01<br />Value: -1.19426529<br />Model: NAIVE\",\"Date: 2023-06-01<br />Value: -1.19426529<br />Model: NAIVE\",\"Date: 2023-07-01<br />Value: -1.19426529<br />Model: NAIVE\",\"Date: 2023-08-01<br />Value: -1.19426529<br />Model: NAIVE\",\"Date: 2023-09-01<br />Value: -1.19426529<br />Model: NAIVE\",\"Date: 2023-10-01<br />Value: -1.19426529<br />Model: NAIVE\",\"Date: 2023-11-01<br />Value: -1.19426529<br />Model: NAIVE\",\"Date: 2023-12-01<br />Value: -1.19426529<br />Model: NAIVE\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(149,144,255,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"NAIVE\",\"legendgroup\":\"NAIVE\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[0.5,-1.5,-1.0999999999999943,-2,-2,-1.5,-1.1999999999999886,1.2999999999999829,0.30000000000001137,-0.5,-1,-1.4000000000000057],\"text\":[\"Date: 2023-01-01<br />Value:  0.50000000<br />Model: Real\",\"Date: 2023-02-01<br />Value: -1.50000000<br />Model: Real\",\"Date: 2023-03-01<br />Value: -1.10000000<br />Model: Real\",\"Date: 2023-04-01<br />Value: -2.00000000<br />Model: Real\",\"Date: 2023-05-01<br />Value: -2.00000000<br />Model: Real\",\"Date: 2023-06-01<br />Value: -1.50000000<br />Model: Real\",\"Date: 2023-07-01<br />Value: -1.20000000<br />Model: Real\",\"Date: 2023-08-01<br />Value:  1.30000000<br />Model: Real\",\"Date: 2023-09-01<br />Value:  0.30000000<br />Model: Real\",\"Date: 2023-10-01<br />Value: -0.50000000<br />Model: Real\",\"Date: 2023-11-01<br />Value: -1.00000000<br />Model: Real\",\"Date: 2023-12-01<br />Value: -1.40000000<br />Model: Real\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(231,107,243,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"Real\",\"legendgroup\":\"Real\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[-0.39927117506479526,-0.54180990245099703,-0.30517999042114707,-0.27961202950269842,-0.34855676864132645,-0.23110896997995545,-0.19824586651335208,-0.22801719652483796,-0.16859530880669527,-0.14102666627780633,-0.15142606358113089,-0.1203631618661638],\"text\":[\"Date: 2023-01-01<br />Value: -0.39927118<br />Model: SSARIMA\",\"Date: 2023-02-01<br />Value: -0.54180990<br />Model: SSARIMA\",\"Date: 2023-03-01<br />Value: -0.30517999<br />Model: SSARIMA\",\"Date: 2023-04-01<br />Value: -0.27961203<br />Model: SSARIMA\",\"Date: 2023-05-01<br />Value: -0.34855677<br />Model: SSARIMA\",\"Date: 2023-06-01<br />Value: -0.23110897<br />Model: SSARIMA\",\"Date: 2023-07-01<br />Value: -0.19824587<br />Model: SSARIMA\",\"Date: 2023-08-01<br />Value: -0.22801720<br />Model: SSARIMA\",\"Date: 2023-09-01<br />Value: -0.16859531<br />Model: SSARIMA\",\"Date: 2023-10-01<br />Value: -0.14102667<br />Model: SSARIMA\",\"Date: 2023-11-01<br />Value: -0.15142606<br />Model: SSARIMA\",\"Date: 2023-12-01<br />Value: -0.12036316<br />Model: SSARIMA\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(255,98,188,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"SSARIMA\",\"legendgroup\":\"SSARIMA\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":43.762557077625573,\"r\":7.3059360730593621,\"b\":40.182648401826498,\"l\":37.260273972602747},\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"title\":{\"text\":\"Comparaison des prévisions des modèles avec les données réelles<br />       Jan 2023 à Déc 2023 - série differencié\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":17.534246575342465},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[19341.299999999999,19708.700000000001],\"tickmode\":\"array\",\"ticktext\":[\"Jan 2023\",\"Apr 2023\",\"Jul 2023\",\"Oct 2023\"],\"tickvals\":[19358,19448,19539,19631],\"categoryorder\":\"array\",\"categoryarray\":[\"Jan 2023\",\"Apr 2023\",\"Jul 2023\",\"Oct 2023\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Date\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-2.1649999999999991,1.4649999999999821],\"tickmode\":\"array\",\"ticktext\":[\"-2\",\"-1\",\"0\",\"1\"],\"tickvals\":[-2,-1,0,1],\"categoryorder\":\"array\",\"categoryarray\":[\"-2\",\"-1\",\"0\",\"1\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Valeur\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":null,\"bordercolor\":null,\"borderwidth\":0,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498},\"title\":{\"text\":\"Modèle\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"12f33317d3c03\":{\"x\":{},\"y\":{},\"colour\":{},\"type\":\"scatter\"}},\"cur_data\":\"12f33317d3c03\",\"visdat\":{\"12f33317d3c03\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n### Réintégration\n\nNous pouvons reintegrer les prévisions aux données pour avoir le graphique au niveau\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndec_2022 <- 139.6\n\ndf_real <- data.frame(\n    Date = forecast_dates,\n    AR1 = dec_2022 + cumsum(df$AR1),\n    ARP = dec_2022 + cumsum(df$ARP),\n    ARIMA = dec_2022 + cumsum(df$ARIMA),\n    HOLT = dec_2022 + cumsum(df$HOLT),\n    ADAM_ETS = dec_2022 + cumsum(df$ADAM_ETS),\n    ADAM_ETS_SARIMA = dec_2022 + cumsum(df$ADAM_ETS_SARIMA),\n    SSARIMA = dec_2022 + cumsum(df$SSARIMA),\n    CES = dec_2022 + cumsum(df$CES)\n    )\n\nreal_2023 <- as.numeric(real_2023)\ndf_real$Real = real_2023\ndf_real\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         Date      AR1      ARP    ARIMA     HOLT ADAM_ETS ADAM_ETS_SARIMA\n1  2023-01-01 138.8333 138.8696 138.9306 139.4810 138.9458        138.9774\n2  2023-02-01 138.3644 138.2431 138.3660 139.4027 138.2728        138.6178\n3  2023-03-01 138.1030 137.7495 137.8898 139.1209 137.5819        138.3169\n4  2023-04-01 137.9861 137.3529 137.4881 138.8786 136.8732        138.1257\n5  2023-05-01 137.9699 137.0358 137.1493 138.4517 136.1462        138.0296\n6  2023-06-01 138.0238 136.7819 136.8636 138.1019 135.4006        138.0017\n7  2023-07-01 138.1266 136.5787 136.6226 137.6429 134.6363        138.0306\n8  2023-08-01 138.2634 136.4161 136.4194 137.2340 133.8534        138.1067\n9  2023-09-01 138.4240 136.2860 136.2479 137.1719 133.0520        138.2206\n10 2023-10-01 138.6010 136.1818 136.1034 136.8711 132.2318        138.3655\n11 2023-11-01 138.7896 136.0984 135.9814 136.3246 131.3933        138.5355\n12 2023-12-01 138.9862 136.0317 135.8785 135.6699 130.5364        138.7260\n    SSARIMA      CES  Real\n1  139.2007 139.3564 140.1\n2  138.6589 139.3693 138.6\n3  138.3537 139.1938 137.5\n4  138.0741 139.0305 135.5\n5  137.7256 138.7970 133.5\n6  137.4945 138.4592 132.0\n7  137.2962 138.1714 130.8\n8  137.0682 137.8984 132.1\n9  136.8996 137.8457 132.4\n10 136.7586 137.7236 131.9\n11 136.6072 137.3798 130.9\n12 136.4868 137.0202 129.5\n```\n\n\n:::\n\n```{.r .cell-code}\n# Transformer les données en format long\ndf_real_long <- pivot_longer(df_real, cols = -Date, names_to = \"Model\", values_to = \"Value\")\n\n# graphique plotly\nr <- ggplot(df_real_long, aes(x = Date, y = Value, color = Model)) +\n  geom_line() +\n  theme_minimal() +\n  labs(title = \"Comparaison des prévisions des modèles avec les données réelles\n       Jan 2023 à Déc 2023\",\n       x = \"Date\",\n       y = \"Valeur\",\n       color = \"Modèle\") +\n  theme(legend.position = \"bottom\") \n\n\nggplotly(r)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-1aa9c82ba17034ed0548\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-1aa9c82ba17034ed0548\">{\"x\":{\"data\":[{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[138.94584268416247,138.27277222287182,137.58192224452762,136.87316069053,136.14615556172905,135.40057249948995,134.63627796758792,133.85339063485614,133.05201317773773,132.23180473540654,131.39327920910065,130.53641765294486],\"text\":[\"Date: 2023-01-01<br />Value: 138.9458<br />Model: ADAM_ETS\",\"Date: 2023-02-01<br />Value: 138.2728<br />Model: ADAM_ETS\",\"Date: 2023-03-01<br />Value: 137.5819<br />Model: ADAM_ETS\",\"Date: 2023-04-01<br />Value: 136.8732<br />Model: ADAM_ETS\",\"Date: 2023-05-01<br />Value: 136.1462<br />Model: ADAM_ETS\",\"Date: 2023-06-01<br />Value: 135.4006<br />Model: ADAM_ETS\",\"Date: 2023-07-01<br />Value: 134.6363<br />Model: ADAM_ETS\",\"Date: 2023-08-01<br />Value: 133.8534<br />Model: ADAM_ETS\",\"Date: 2023-09-01<br />Value: 133.0520<br />Model: ADAM_ETS\",\"Date: 2023-10-01<br />Value: 132.2318<br />Model: ADAM_ETS\",\"Date: 2023-11-01<br />Value: 131.3933<br />Model: ADAM_ETS\",\"Date: 2023-12-01<br />Value: 130.5364<br />Model: ADAM_ETS\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(248,118,109,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"ADAM_ETS\",\"legendgroup\":\"ADAM_ETS\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[138.97741086331018,138.61782618306842,138.31690305164739,138.12565279225029,138.02962817246936,138.00173503890619,138.03063830706247,138.106659387984,138.22064250788705,138.36548693465403,138.53550029058306,138.72598580125236],\"text\":[\"Date: 2023-01-01<br />Value: 138.9774<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-02-01<br />Value: 138.6178<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-03-01<br />Value: 138.3169<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-04-01<br />Value: 138.1257<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-05-01<br />Value: 138.0296<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-06-01<br />Value: 138.0017<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-07-01<br />Value: 138.0306<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-08-01<br />Value: 138.1067<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-09-01<br />Value: 138.2206<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-10-01<br />Value: 138.3655<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-11-01<br />Value: 138.5355<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-12-01<br />Value: 138.7260<br />Model: ADAM_ETS_SARIMA\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(211,146,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"ADAM_ETS_SARIMA\",\"legendgroup\":\"ADAM_ETS_SARIMA\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[138.83327290112757,138.36437798926244,138.10295930613262,137.98607297164776,137.96987094173198,138.02380773735666,138.12660472891005,138.26343877095292,138.42398374546346,138.6010462592555,138.78961524181628,138.98619987496934],\"text\":[\"Date: 2023-01-01<br />Value: 138.8333<br />Model: AR1\",\"Date: 2023-02-01<br />Value: 138.3644<br />Model: AR1\",\"Date: 2023-03-01<br />Value: 138.1030<br />Model: AR1\",\"Date: 2023-04-01<br />Value: 137.9861<br />Model: AR1\",\"Date: 2023-05-01<br />Value: 137.9699<br />Model: AR1\",\"Date: 2023-06-01<br />Value: 138.0238<br />Model: AR1\",\"Date: 2023-07-01<br />Value: 138.1266<br />Model: AR1\",\"Date: 2023-08-01<br />Value: 138.2634<br />Model: AR1\",\"Date: 2023-09-01<br />Value: 138.4240<br />Model: AR1\",\"Date: 2023-10-01<br />Value: 138.6010<br />Model: AR1\",\"Date: 2023-11-01<br />Value: 138.7896<br />Model: AR1\",\"Date: 2023-12-01<br />Value: 138.9862<br />Model: AR1\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(147,170,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"AR1\",\"legendgroup\":\"AR1\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[138.93057568943308,138.36596353902002,137.8897530468673,137.48810311306684,137.1493397469078,136.86361676130807,136.62262959251927,136.41937392724984,136.24794212168214,136.10335149528433,135.98139950876194,135.87854161688279],\"text\":[\"Date: 2023-01-01<br />Value: 138.9306<br />Model: ARIMA\",\"Date: 2023-02-01<br />Value: 138.3660<br />Model: ARIMA\",\"Date: 2023-03-01<br />Value: 137.8898<br />Model: ARIMA\",\"Date: 2023-04-01<br />Value: 137.4881<br />Model: ARIMA\",\"Date: 2023-05-01<br />Value: 137.1493<br />Model: ARIMA\",\"Date: 2023-06-01<br />Value: 136.8636<br />Model: ARIMA\",\"Date: 2023-07-01<br />Value: 136.6226<br />Model: ARIMA\",\"Date: 2023-08-01<br />Value: 136.4194<br />Model: ARIMA\",\"Date: 2023-09-01<br />Value: 136.2479<br />Model: ARIMA\",\"Date: 2023-10-01<br />Value: 136.1034<br />Model: ARIMA\",\"Date: 2023-11-01<br />Value: 135.9814<br />Model: ARIMA\",\"Date: 2023-12-01<br />Value: 135.8785<br />Model: ARIMA\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,186,56,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"ARIMA\",\"legendgroup\":\"ARIMA\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[138.86962119103151,138.24310446360499,137.7494570115939,137.35290297418007,137.03578092832069,136.7819141800378,136.57873492446848,136.41611359599094,136.28595587715046,136.18178083598207,136.09840175108923,136.03166721594576],\"text\":[\"Date: 2023-01-01<br />Value: 138.8696<br />Model: ARP\",\"Date: 2023-02-01<br />Value: 138.2431<br />Model: ARP\",\"Date: 2023-03-01<br />Value: 137.7495<br />Model: ARP\",\"Date: 2023-04-01<br />Value: 137.3529<br />Model: ARP\",\"Date: 2023-05-01<br />Value: 137.0358<br />Model: ARP\",\"Date: 2023-06-01<br />Value: 136.7819<br />Model: ARP\",\"Date: 2023-07-01<br />Value: 136.5787<br />Model: ARP\",\"Date: 2023-08-01<br />Value: 136.4161<br />Model: ARP\",\"Date: 2023-09-01<br />Value: 136.2860<br />Model: ARP\",\"Date: 2023-10-01<br />Value: 136.1818<br />Model: ARP\",\"Date: 2023-11-01<br />Value: 136.0984<br />Model: ARP\",\"Date: 2023-12-01<br />Value: 136.0317<br />Model: ARP\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,193,159,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"ARP\",\"legendgroup\":\"ARP\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[139.35639393030573,139.36934434104447,139.19379055375171,139.03047113154528,138.79704682274206,138.4591540773848,138.17143790747957,137.89836544351098,137.84567114407849,137.72362528750006,137.37976520135217,137.02023720462711],\"text\":[\"Date: 2023-01-01<br />Value: 139.3564<br />Model: CES\",\"Date: 2023-02-01<br />Value: 139.3693<br />Model: CES\",\"Date: 2023-03-01<br />Value: 139.1938<br />Model: CES\",\"Date: 2023-04-01<br />Value: 139.0305<br />Model: CES\",\"Date: 2023-05-01<br />Value: 138.7970<br />Model: CES\",\"Date: 2023-06-01<br />Value: 138.4592<br />Model: CES\",\"Date: 2023-07-01<br />Value: 138.1714<br />Model: CES\",\"Date: 2023-08-01<br />Value: 137.8984<br />Model: CES\",\"Date: 2023-09-01<br />Value: 137.8457<br />Model: CES\",\"Date: 2023-10-01<br />Value: 137.7236<br />Model: CES\",\"Date: 2023-11-01<br />Value: 137.3798<br />Model: CES\",\"Date: 2023-12-01<br />Value: 137.0202<br />Model: CES\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,185,227,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"CES\",\"legendgroup\":\"CES\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[139.48100953560149,139.40274625404024,139.12089765520324,138.87857042211871,138.45172648034864,138.10192239976104,137.64294139401622,137.23395818790095,137.17194751336626,136.87109376610104,136.324595860984,135.66993822772804],\"text\":[\"Date: 2023-01-01<br />Value: 139.4810<br />Model: HOLT\",\"Date: 2023-02-01<br />Value: 139.4027<br />Model: HOLT\",\"Date: 2023-03-01<br />Value: 139.1209<br />Model: HOLT\",\"Date: 2023-04-01<br />Value: 138.8786<br />Model: HOLT\",\"Date: 2023-05-01<br />Value: 138.4517<br />Model: HOLT\",\"Date: 2023-06-01<br />Value: 138.1019<br />Model: HOLT\",\"Date: 2023-07-01<br />Value: 137.6429<br />Model: HOLT\",\"Date: 2023-08-01<br />Value: 137.2340<br />Model: HOLT\",\"Date: 2023-09-01<br />Value: 137.1719<br />Model: HOLT\",\"Date: 2023-10-01<br />Value: 136.8711<br />Model: HOLT\",\"Date: 2023-11-01<br />Value: 136.3246<br />Model: HOLT\",\"Date: 2023-12-01<br />Value: 135.6699<br />Model: HOLT\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(97,156,255,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"HOLT\",\"legendgroup\":\"HOLT\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[140.09999999999999,138.59999999999999,137.5,135.5,133.5,132,130.80000000000001,132.09999999999999,132.40000000000001,131.90000000000001,130.90000000000001,129.5],\"text\":[\"Date: 2023-01-01<br />Value: 140.1000<br />Model: Real\",\"Date: 2023-02-01<br />Value: 138.6000<br />Model: Real\",\"Date: 2023-03-01<br />Value: 137.5000<br />Model: Real\",\"Date: 2023-04-01<br />Value: 135.5000<br />Model: Real\",\"Date: 2023-05-01<br />Value: 133.5000<br />Model: Real\",\"Date: 2023-06-01<br />Value: 132.0000<br />Model: Real\",\"Date: 2023-07-01<br />Value: 130.8000<br />Model: Real\",\"Date: 2023-08-01<br />Value: 132.1000<br />Model: Real\",\"Date: 2023-09-01<br />Value: 132.4000<br />Model: Real\",\"Date: 2023-10-01<br />Value: 131.9000<br />Model: Real\",\"Date: 2023-11-01<br />Value: 130.9000<br />Model: Real\",\"Date: 2023-12-01<br />Value: 129.5000<br />Model: Real\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(219,114,251,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"Real\",\"legendgroup\":\"Real\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[139.2007288249352,138.65891892248419,138.35373893206307,138.07412690256035,137.72557013391904,137.49446116393906,137.29621529742573,137.06819810090087,136.89960279209419,136.75857612581638,136.60715006223526,136.48678690036908],\"text\":[\"Date: 2023-01-01<br />Value: 139.2007<br />Model: SSARIMA\",\"Date: 2023-02-01<br />Value: 138.6589<br />Model: SSARIMA\",\"Date: 2023-03-01<br />Value: 138.3537<br />Model: SSARIMA\",\"Date: 2023-04-01<br />Value: 138.0741<br />Model: SSARIMA\",\"Date: 2023-05-01<br />Value: 137.7256<br />Model: SSARIMA\",\"Date: 2023-06-01<br />Value: 137.4945<br />Model: SSARIMA\",\"Date: 2023-07-01<br />Value: 137.2962<br />Model: SSARIMA\",\"Date: 2023-08-01<br />Value: 137.0682<br />Model: SSARIMA\",\"Date: 2023-09-01<br />Value: 136.8996<br />Model: SSARIMA\",\"Date: 2023-10-01<br />Value: 136.7586<br />Model: SSARIMA\",\"Date: 2023-11-01<br />Value: 136.6072<br />Model: SSARIMA\",\"Date: 2023-12-01<br />Value: 136.4868<br />Model: SSARIMA\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(255,97,195,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"SSARIMA\",\"legendgroup\":\"SSARIMA\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":43.762557077625573,\"r\":7.3059360730593621,\"b\":40.182648401826498,\"l\":43.105022831050235},\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"title\":{\"text\":\"Comparaison des prévisions des modèles avec les données réelles<br />       Jan 2023 à Déc 2023\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":17.534246575342465},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[19341.299999999999,19708.700000000001],\"tickmode\":\"array\",\"ticktext\":[\"Jan 2023\",\"Apr 2023\",\"Jul 2023\",\"Oct 2023\"],\"tickvals\":[19358,19448,19539,19631],\"categoryorder\":\"array\",\"categoryarray\":[\"Jan 2023\",\"Apr 2023\",\"Jul 2023\",\"Oct 2023\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Date\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[128.97,140.63],\"tickmode\":\"array\",\"ticktext\":[\"129\",\"132\",\"135\",\"138\"],\"tickvals\":[129,132,135,138],\"categoryorder\":\"array\",\"categoryarray\":[\"129\",\"132\",\"135\",\"138\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Valeur\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":null,\"bordercolor\":null,\"borderwidth\":0,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498},\"title\":{\"text\":\"Modèle\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"12f33302dbb7a\":{\"x\":{},\"y\":{},\"colour\":{},\"type\":\"scatter\"}},\"cur_data\":\"12f33302dbb7a\",\"visdat\":{\"12f33302dbb7a\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n# Qualité de prévision\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Erreur de prévision , comparatif entre la valeur predicte de chaque modele et la valeur real \nmodels <- names(df)[-which(names(df) == \"Date\" | names(df) == \"Real\")]\n# Calculer l'erreur pour chaque modèle\nerrors_df <- data.frame(Date = df$Date)  # nouveau dataframe pour stocker les erreurs\nfor (model in models) {\n  errors_df[[model]] <- df[[model]] - df$Real\n}\n\nerrors_df\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         Date        AR1        ARP      ARIMA       HOLT   ADAM_ETS\n1  2023-01-01 -1.2667271 -1.2303788 -1.1694243 -0.6189905 -1.1541573\n2  2023-02-01  1.0311051  0.8734833  0.9353878  1.4217367  0.8269295\n3  2023-03-01  0.8385813  0.6063525  0.6237895  0.8181514  0.4091500\n4  2023-04-01  1.8831137  1.6034460  1.5983501  1.7576728  1.2912384\n5  2023-05-01  1.9837980  1.6828780  1.6612366  1.5731561  1.2729949\n6  2023-06-01  1.5539368  1.2461333  1.2142770  1.1501959  0.7544169\n7  2023-07-01  1.3027970  0.9968207  0.9590128  0.7410190  0.4357055\n8  2023-08-01 -1.1631660 -1.4626213 -1.5032557 -1.7089832 -2.0828873\n9  2023-09-01 -0.1394550 -0.4301577 -0.4714318 -0.3620107 -1.1013775\n10 2023-10-01  0.6770625  0.3958250  0.3554094  0.1991463 -0.3202084\n11 2023-11-01  1.1885690  0.9166209  0.8780480  0.4535021  0.1614745\n12 2023-12-01  1.5965846  1.3332655  1.2971421  0.7453424  0.5431384\n   ADAM_ETS_SARIMA    SSARIMA        CES       NAIVE\n1       -1.1225891 -0.8992712 -0.7436061 -1.69426529\n2        1.1404153  0.9581901  1.5129504  0.30573471\n3        0.7990769  0.7948200  0.9244462 -0.09426529\n4        1.8087497  1.7203880  1.8366806  0.80573471\n5        1.9039754  1.6514432  1.7665757  0.80573471\n6        1.4721069  1.2688910  1.1621073  0.30573471\n7        1.2289033  1.0017541  0.9122838  0.00573471\n8       -1.2239789 -1.5280172 -1.5730725 -2.49426529\n9       -0.1860169 -0.4685953 -0.3526943 -1.49426529\n10       0.6448444  0.3589733  0.3779541 -0.69426529\n11       1.1700134  0.8485739  0.6561399 -0.19426529\n12       1.5904855  1.2796368  1.0404720  0.20573471\n```\n\n\n:::\n:::\n\n\n\n### CSPE somme cumulative des erreurs pour chaque modèle et graphique\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# errors_df contienne déjà les erreurs pour chaque modèle calculées comme précédemment\ncspe_df <- data.frame(Date = df$Date)  #  nouveau dataframe pour stocker le CSPE\n\nfor (model in models) {\n  cspe_df[[model]] <- cumsum(errors_df[[model]])  # Calcul du CSPE \n}\n\ncspe_df\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         Date        AR1        ARP      ARIMA       HOLT    ADAM_ETS\n1  2023-01-01 -1.2667271 -1.2303788 -1.1694243 -0.6189905 -1.15415732\n2  2023-02-01 -0.2356220 -0.3568955 -0.2340365  0.8027463 -0.32722778\n3  2023-03-01  0.6029593  0.2494570  0.3897530  1.6208977  0.08192224\n4  2023-04-01  2.4860730  1.8529030  1.9881031  3.3785704  1.37316069\n5  2023-05-01  4.4698709  3.5357809  3.6493397  4.9517265  2.64615556\n6  2023-06-01  6.0238077  4.7819142  4.8636168  6.1019224  3.40057250\n7  2023-07-01  7.3266047  5.7787349  5.8226296  6.8429414  3.83627797\n8  2023-08-01  6.1634388  4.3161136  4.3193739  5.1339582  1.75339063\n9  2023-09-01  6.0239837  3.8859559  3.8479421  4.7719475  0.65201318\n10 2023-10-01  6.7010463  4.2817808  4.2033515  4.9710938  0.33180474\n11 2023-11-01  7.8896152  5.1984018  5.0813995  5.4245959  0.49327921\n12 2023-12-01  9.4861999  6.5316672  6.3785416  6.1699382  1.03641765\n   ADAM_ETS_SARIMA     SSARIMA        CES      NAIVE\n1      -1.12258914 -0.89927118 -0.7436061 -1.6942653\n2       0.01782618  0.05891892  0.7693443 -1.3885306\n3       0.81690305  0.85373893  1.6937906 -1.4827959\n4       2.62565279  2.57412690  3.5304711 -0.6770612\n5       4.52962817  4.22557013  5.2970468  0.1286735\n6       6.00173504  5.49446116  6.4591541  0.4344083\n7       7.23063831  6.49621530  7.3714379  0.4401430\n8       6.00665939  4.96819810  5.7983654 -2.0541223\n9       5.82064251  4.49960279  5.4456711 -3.5483876\n10      6.46548693  4.85857613  5.8236253 -4.2426529\n11      7.63550029  5.70715006  6.4797652 -4.4369182\n12      9.22598580  6.98678690  7.5202372 -4.2311835\n```\n\n\n:::\n\n```{.r .cell-code}\n#  on pivot cspe_df pour l'utiliser avec ggplot2\ncspe_long <- tidyr::pivot_longer(cspe_df, cols = -Date, names_to = \"Model\", values_to = \"CSPE\")\n\n\nggplot(cspe_long, aes(x = Date, y = CSPE, color = Model)) +\n  geom_line() +\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"black\") +\n  labs(title = \"Cumulative Sum of Prediction Errors (CSPE) pour chaque modèle\",\n       x = \"Date\",\n       y = \"CSPE\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-36-1.png){width=672}\n:::\n:::\n\n\n\n### Calcul du R2OOS pour chaque modèle\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncalculate_r2oos <- function(actual, predicted, naive_predictions) {\n  ss_res <- sum((actual - predicted)^2)  # Somme des carrés des erreurs de prédiction\n  ss_tot <- sum((actual - naive_predictions)^2)  # Somme des carrés des erreurs du modèle naïf\n  r2_oos <- 1 - ss_res / ss_tot\n  return(r2_oos)\n}\n\n# DataFrame pour stocker le R^2 OOS de chaque modèle\nr2oos_df <- data.frame(Model = character(), R2OOS = numeric())\n\n# R^2 OOS pour chaque modèle, avec modèle naïf comme référence\nmodels <- setdiff(names(df), c(\"Date\", \"Real\", \"NAIVE\"))  # Exclure Date, Real, et NAIVE de la liste des modèles\n\nfor (model in models) {\n  r2oos_value <- calculate_r2oos(df$Real, df[[model]], df$NAIVE)\n  r2oos_df <- rbind(r2oos_df, data.frame(Model = model, R2OOS = r2oos_value))\n}\n\nr2oos_df\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            Model       R2OOS\n1             AR1 -0.55123249\n2             ARP -0.17276444\n3           ARIMA -0.15103662\n4            HOLT -0.07335788\n5        ADAM_ETS  0.08787972\n6 ADAM_ETS_SARIMA -0.46627994\n7         SSARIMA -0.17329720\n8             CES -0.24268116\n```\n\n\n:::\n:::\n\n\n\n### Calcul du MSE pour chaque modèle\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# dataFrame pour stocker le MSE de chaque modèle\nmse_df <- data.frame(Model = character(), MSE = numeric())\n\nfor (model in models) {\n  mse_value <- mean((errors_df[[model]])^2)  # Calcul du MSE\n  mse_df <- rbind(mse_df, data.frame(Model = model, MSE = mse_value))\n}\n\nmse_df\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            Model      MSE\n1             AR1 1.729763\n2             ARP 1.307738\n3           ARIMA 1.283509\n4            HOLT 1.196890\n5        ADAM_ETS 1.017096\n6 ADAM_ETS_SARIMA 1.635034\n7         SSARIMA 1.308332\n8             CES 1.385701\n```\n\n\n:::\n:::\n\n\n\n### DM test\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# DataFrame pour stocker les résultats du \ndm_results <- data.frame(Model = character(), DM_Statistic = numeric(), P_Value = numeric(), stringsAsFactors = FALSE)\n\n# DM test pour chaque modèle comparé au modèle naïf\nfor (model in setdiff(models, \"NAIVE\")) {\n  dm_test_result <- dm.test(errors_df$NAIVE, errors_df[[model]], alternative = \"less\")\n  \n#  résultats\ndm_results <- rbind(dm_results, data.frame(Model = model, DM_Statistic = dm_test_result$statistic, P_Value = dm_test_result$p.value))}\n\ndm_results\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n              Model DM_Statistic   P_Value\nDM              AR1   -0.8916720 0.1958281\nDM1             ARP   -0.3582740 0.3634595\nDM2           ARIMA   -0.3198306 0.3775446\nDM3            HOLT   -0.1541724 0.4401330\nDM4        ADAM_ETS    0.3622236 0.6379761\nDM5 ADAM_ETS_SARIMA   -0.7802244 0.2258607\nDM6         SSARIMA   -0.3504809 0.3662986\nDM7             CES   -0.4600823 0.3272090\n```\n\n\n:::\n\n```{.r .cell-code}\n?dm.test()\n```\n:::\n\n\n\n### Accuracy\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# dataframe pour stocker les résultats d'accuracy\naccuracy_results <- data.frame(Model = character(), \n                               ME = numeric(), \n                               RMSE = numeric(), \n                               MAE = numeric(), \n                               MPE = numeric(),\n                               MAPE = numeric())\n\nmodels <- setdiff(names(df), c(\"Real\", \"Date\"))  \n# Calcul de l'accuracy pour chaque modèle\nfor (model in models) { acc <- accuracy(df[[model]], df$Real)\n#  résultats au dataframe des résultats\naccuracy_results <- rbind(accuracy_results, data.frame(Model = model,ME = acc[1, \"ME\"], RMSE = acc[1, \"RMSE\"],MAE = acc[1, \"MAE\"], MPE = acc[1, \"MPE\"], APE = acc[1, \"MAPE\"]))\n}\n\naccuracy_results\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            Model          ME     RMSE       MAE       MPE       APE\n1             AR1 -0.79051666 1.315205 1.2187413 109.00822 109.00822\n2             ARP -0.54430560 1.143564 1.0648319 100.98722 100.98722\n3           ARIMA -0.53154513 1.132921 1.0555638 100.09331 100.09331\n4            HOLT -0.51416152 1.094025 0.9624922  82.37328  82.37328\n5        ADAM_ETS -0.08636814 1.008512 0.8628066  88.01831  98.69193\n6 ADAM_ETS_SARIMA -0.76883215 1.278684 1.1909296 106.25903 106.25903\n7         SSARIMA -0.58223224 1.143823 1.0648795  97.87055  97.87055\n8             CES -0.62668643 1.177158 1.0715819  93.44833  93.44833\n9           NAIVE  0.35259862 1.055978 0.7583333  83.20585 111.01404\n```\n\n\n:::\n:::\n\n\n\n## Estimation de modeles série corrigé (non stationnaire)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#lissage exponentiel double (Holt-Winters sans composante saisonnière)\nhw2 <- HoltWinters(ipampa, gamma = FALSE)\nforecast_hw2 <- forecast(hw2, h=12)\n\n\n# ADAM ETS\nae2 <- auto.adam(ipampa, model=\"ZZN\", lags=c(1,12), select=TRUE)\nforecast_ae2 <- forecast(ae2, h=12)\nforecast_ae2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          Jan      Feb      Mar      Apr      May      Jun      Jul      Aug\n2023 126.7689 126.1865 125.7003 125.3115 124.9819 124.7202 124.5127 124.3328\n          Sep      Oct      Nov      Dec\n2023 124.1904 124.0725 123.9818 123.9028\n```\n\n\n:::\n\n```{.r .cell-code}\n# ADAM ETS+ARIMA \naea2 <- auto.adam(ipampa, model=\"ZZN\", lags=c(1,12), orders=list(ar=c(3,3), i=(2), ma=c(3,3), select=TRUE))\nforecast_aea2 <- forecast(aea2 , h=12)\nforecast_aea2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          Jan      Feb      Mar      Apr      May      Jun      Jul      Aug\n2023 126.7788 126.2107 125.7402 125.3645 125.0520 124.7977 124.5864 124.4162\n          Sep      Oct      Nov      Dec\n2023 124.2790 124.1813 124.1015 124.0404\n```\n\n\n:::\n\n```{.r .cell-code}\n# SSARIMA\nssarima2 <- auto.ssarima(ipampa, lags=c(1,12), orders=list(ar=c(3,3), i=(2), ma=c(3,3), select=TRUE))\nforecast_ssarima2 <- forecast(ssarima2 , h=12)\nforecast_ssarima2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         Point forecast Lower bound (2.5%) Upper bound (97.5%)\nJan 2023       126.8350           125.7776            127.8923\nFeb 2023       126.3923           124.3689            128.4157\nMar 2023       125.9496           122.9206            128.9786\nApr 2023       125.5069           121.3936            129.6203\nMay 2023       125.0643           119.7833            130.3452\nJun 2023       124.6216           118.0916            131.1516\nJul 2023       124.1789           116.3217            132.0361\nAug 2023       123.7362           114.4770            132.9955\nSep 2023       123.2935           112.5607            134.0264\nOct 2023       122.8508           110.5759            135.1258\nNov 2023       122.4082           108.5252            136.2912\nDec 2023       121.9655           106.4110            137.5199\n```\n\n\n:::\n\n```{.r .cell-code}\n#ces\nces2 <- auto.ces(ipampa, models=c(\"n\", \"s\", \"p\", \"f\"), ic=\"AICc\")\nforecast_ces2 <- forecast(ces2 , h=12)\nforecast_ces2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         Point forecast Lower bound (2.5%) Upper bound (97.5%)\nJan 2023       128.0169           126.6153            129.4185\nFeb 2023       128.4711           126.4840            130.4581\nMar 2023       128.9841           126.5364            131.4319\nApr 2023       129.2816           126.4542            132.1091\nMay 2023       129.6860           126.5145            132.8574\nJun 2023       129.7981           126.3225            133.2738\nJul 2023       129.9620           126.1984            133.7255\nAug 2023       130.1308           126.1051            134.1564\nSep 2023       130.6903           126.4112            134.9694\nOct 2023       130.9689           126.4554            135.4824\nNov 2023       131.2151           126.4719            135.9583\nDec 2023       131.2254           126.2677            136.1830\n```\n\n\n:::\n\n```{.r .cell-code}\n# Naive model\nforecast_naive2 <- naive(ipampa,h=12)\nforecast_naive2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         Point Forecast    Lo 80    Hi 80    Lo 95    Hi 95\nJan 2023       127.4637 126.4812 128.4461 125.9611 128.9662\nFeb 2023       127.4637 126.0743 128.8530 125.3388 129.5885\nMar 2023       127.4637 125.7620 129.1653 124.8612 130.0661\nApr 2023       127.4637 125.4988 129.4285 124.4586 130.4687\nMay 2023       127.4637 125.2668 129.6605 124.1039 130.8234\nJun 2023       127.4637 125.0572 129.8702 123.7832 131.1441\nJul 2023       127.4637 124.8643 130.0630 123.4883 131.4390\nAug 2023       127.4637 124.6849 130.2424 123.2139 131.7134\nSep 2023       127.4637 124.5163 130.4110 122.9561 131.9712\nOct 2023       127.4637 124.3569 130.5704 122.7122 132.2151\nNov 2023       127.4637 124.2052 130.7221 122.4803 132.4470\nDec 2023       127.4637 124.0603 130.8670 122.2587 132.6686\n```\n\n\n:::\n\n```{.r .cell-code}\nipampa\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          Jan      Feb      Mar      Apr      May      Jun      Jul      Aug\n2005  78.2000  78.5000  79.1000  79.3000  78.9000  79.4000  79.8000  80.0000\n2006  80.8000  81.1000  81.3000  81.8000  81.8000  81.8000  81.9000  82.1000\n2007  82.6000  83.1000  83.8000  84.5000  84.8000  85.1000  85.8000  86.6000\n2008  93.2000  94.4000  95.7000  96.9000  98.8000 100.2000 101.3000 100.6000\n2009  95.4000  94.8000  93.9000  93.5000  92.7000  92.2000  90.8000  90.7000\n2010  89.5000  89.8000  90.4000  91.0000  91.2000  91.4000  91.3000  92.1000\n2011  98.0000  99.4000 100.6000 101.0000 100.4000 100.6000 101.0000 100.9000\n2012 100.6000 101.2000 101.9000 102.3000 102.3000 101.8000 103.1000 105.1000\n2013 106.4000 106.8000 106.4000 105.7000 105.4000 105.0000 104.6000 104.2000\n2014 102.9000 103.0000 103.1000 103.3000 103.3000 103.1000 102.5000 102.1000\n2015  99.1000  98.9605  99.1605  99.5605  99.7605  99.0605  98.6605  98.1605\n2016  96.2605  95.9605  96.0605  95.8605  96.3605  96.2605  95.7605  95.3605\n2017  97.0605  97.4605  97.3605  97.5605  97.1605  96.5605  96.3605  96.4605\n2018  98.5605  98.5605  98.8605  99.5605 100.4605 100.3605 100.6605 101.1605\n2019 102.0605 102.5605 102.8605 103.0605 102.8605 102.2605 102.1605 101.7605\n2020 102.0605 101.8605 100.7605 100.1605 100.1605 100.2605 100.2605 100.2605\n2021 102.9605 104.8605 106.0605 106.3605 106.9605 108.0605 109.3605 110.0605\n2022 118.8184 120.6184 122.2437 123.6437 125.1437 127.6437 127.2437 127.9437\n          Sep      Oct      Nov      Dec\n2005  80.5000  80.7000  80.3000  80.4000\n2006  81.9000  82.1000  82.3000  82.5000\n2007  88.1000  89.5000  91.1000  91.9000\n2008 100.6000  99.5000  97.7000  95.8000\n2009  90.1000  89.7000  89.4000  89.3000\n2010  93.7000  95.0000  95.6000  96.6000\n2011 101.3000 101.3000 101.2000 101.0000\n2012 106.0000 106.5000 106.4000 106.3000\n2013 103.7000 103.0000 102.7000 102.7000\n2014 101.6000 101.0000 100.4000  99.5000\n2015  98.0605  97.9605  97.7605  96.7605\n2016  95.4605  95.8605  95.6605  96.7605\n2017  96.8605  97.3605  97.6605  97.7605\n2018 102.0605 103.0605 102.9605 102.2605\n2019 102.1605 102.0605 101.7605 101.9605\n2020  99.9605 100.5605 101.0605 101.5605\n2021 111.6605 113.2184 115.2184 116.2184\n2022 128.5437 128.6354 128.6579 127.4637\n```\n\n\n:::\n:::\n\n\n\n### Récuperation des previsions\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Récupération des \"points forecastes\" dans un seul dataframe\nstart_date <- as.Date(\"2023-01-01\") # La date de début des prévisions\nforecast_horizon <- 12 # Le nombre de mois à prévoir\n\n# séquence de dates pour les prévisions\nforecast_dates <- seq(start_date, by = \"month\", length.out = forecast_horizon)\n\n#  data frames avec les dates et les previsions\ndf2 <- data.frame(\n  Date = forecast_dates,\n  AR1 = dec_2022 + cumsum(df$AR1),\n  ARP = dec_2022 + cumsum(df$ARP),\n  ARIMA = dec_2022 + cumsum(df$ARIMA),\n  HOLT_WINTER = as.numeric(forecast_hw2$mean),\n ADAM_ETS = as.numeric(forecast_ae2$mean),\n ADAM_ETS_SARIMA = as.numeric(forecast_aea2$mean),\n SSARIMA =  as.numeric(forecast_ssarima2$mean),\n CES = as.numeric(forecast_ces2$mean),\n NAIVE = as.numeric(forecast_naive2$mean)\n)\n\ndf2$Real = real_2023\n\n\n# Transformer les données en format long\ndf_long2 <- pivot_longer(df2, cols = -Date, names_to = \"Model\", values_to = \"Value\")\n\n# graphique plotly\np <- ggplot(df_long2, aes(x = Date, y = Value, color = Model)) +\n  geom_line() +\n  theme_minimal() +\n  labs(title = \"Comparaison des prévisions des modèles avec les données réelles\n       Jan 2023 à Déc 2023 - série corrigée\",\n       x = \"Date\",\n       y = \"Valeur\",\n       color = \"Modèle\") +\n  theme(legend.position = \"bottom\") \n\nggplotly(p)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-330999b9e972b70f4ed5\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-330999b9e972b70f4ed5\">{\"x\":{\"data\":[{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[126.76893822879275,126.18653340191804,125.70031618978508,125.3114516163447,124.98188699579943,124.72019317877364,124.51274761342924,124.33279540958374,124.19037403463555,124.07245881819264,123.98175006510841,123.90282689145683],\"text\":[\"Date: 2023-01-01<br />Value: 126.7689<br />Model: ADAM_ETS\",\"Date: 2023-02-01<br />Value: 126.1865<br />Model: ADAM_ETS\",\"Date: 2023-03-01<br />Value: 125.7003<br />Model: ADAM_ETS\",\"Date: 2023-04-01<br />Value: 125.3115<br />Model: ADAM_ETS\",\"Date: 2023-05-01<br />Value: 124.9819<br />Model: ADAM_ETS\",\"Date: 2023-06-01<br />Value: 124.7202<br />Model: ADAM_ETS\",\"Date: 2023-07-01<br />Value: 124.5127<br />Model: ADAM_ETS\",\"Date: 2023-08-01<br />Value: 124.3328<br />Model: ADAM_ETS\",\"Date: 2023-09-01<br />Value: 124.1904<br />Model: ADAM_ETS\",\"Date: 2023-10-01<br />Value: 124.0725<br />Model: ADAM_ETS\",\"Date: 2023-11-01<br />Value: 123.9818<br />Model: ADAM_ETS\",\"Date: 2023-12-01<br />Value: 123.9028<br />Model: ADAM_ETS\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(248,118,109,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"ADAM_ETS\",\"legendgroup\":\"ADAM_ETS\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[126.7788361485968,126.21066660848932,125.7402499060434,125.3645161421758,125.05195693430356,124.79774850392229,124.58639648317849,124.41617941988531,124.27897109629406,124.18128303807075,124.10149166275549,124.04037703656239],\"text\":[\"Date: 2023-01-01<br />Value: 126.7788<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-02-01<br />Value: 126.2107<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-03-01<br />Value: 125.7402<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-04-01<br />Value: 125.3645<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-05-01<br />Value: 125.0520<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-06-01<br />Value: 124.7977<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-07-01<br />Value: 124.5864<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-08-01<br />Value: 124.4162<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-09-01<br />Value: 124.2790<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-10-01<br />Value: 124.1813<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-11-01<br />Value: 124.1015<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-12-01<br />Value: 124.0404<br />Model: ADAM_ETS_SARIMA\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(216,144,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"ADAM_ETS_SARIMA\",\"legendgroup\":\"ADAM_ETS_SARIMA\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[138.83327290112757,138.36437798926244,138.10295930613262,137.98607297164776,137.96987094173198,138.02380773735666,138.12660472891005,138.26343877095292,138.42398374546346,138.6010462592555,138.78961524181628,138.98619987496934],\"text\":[\"Date: 2023-01-01<br />Value: 138.8333<br />Model: AR1\",\"Date: 2023-02-01<br />Value: 138.3644<br />Model: AR1\",\"Date: 2023-03-01<br />Value: 138.1030<br />Model: AR1\",\"Date: 2023-04-01<br />Value: 137.9861<br />Model: AR1\",\"Date: 2023-05-01<br />Value: 137.9699<br />Model: AR1\",\"Date: 2023-06-01<br />Value: 138.0238<br />Model: AR1\",\"Date: 2023-07-01<br />Value: 138.1266<br />Model: AR1\",\"Date: 2023-08-01<br />Value: 138.2634<br />Model: AR1\",\"Date: 2023-09-01<br />Value: 138.4240<br />Model: AR1\",\"Date: 2023-10-01<br />Value: 138.6010<br />Model: AR1\",\"Date: 2023-11-01<br />Value: 138.7896<br />Model: AR1\",\"Date: 2023-12-01<br />Value: 138.9862<br />Model: AR1\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(163,165,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"AR1\",\"legendgroup\":\"AR1\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[138.93057568943308,138.36596353902002,137.8897530468673,137.48810311306684,137.1493397469078,136.86361676130807,136.62262959251927,136.41937392724984,136.24794212168214,136.10335149528433,135.98139950876194,135.87854161688279],\"text\":[\"Date: 2023-01-01<br />Value: 138.9306<br />Model: ARIMA\",\"Date: 2023-02-01<br />Value: 138.3660<br />Model: ARIMA\",\"Date: 2023-03-01<br />Value: 137.8898<br />Model: ARIMA\",\"Date: 2023-04-01<br />Value: 137.4881<br />Model: ARIMA\",\"Date: 2023-05-01<br />Value: 137.1493<br />Model: ARIMA\",\"Date: 2023-06-01<br />Value: 136.8636<br />Model: ARIMA\",\"Date: 2023-07-01<br />Value: 136.6226<br />Model: ARIMA\",\"Date: 2023-08-01<br />Value: 136.4194<br />Model: ARIMA\",\"Date: 2023-09-01<br />Value: 136.2479<br />Model: ARIMA\",\"Date: 2023-10-01<br />Value: 136.1034<br />Model: ARIMA\",\"Date: 2023-11-01<br />Value: 135.9814<br />Model: ARIMA\",\"Date: 2023-12-01<br />Value: 135.8785<br />Model: ARIMA\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(57,182,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"ARIMA\",\"legendgroup\":\"ARIMA\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[138.86962119103151,138.24310446360499,137.7494570115939,137.35290297418007,137.03578092832069,136.7819141800378,136.57873492446848,136.41611359599094,136.28595587715046,136.18178083598207,136.09840175108923,136.03166721594576],\"text\":[\"Date: 2023-01-01<br />Value: 138.8696<br />Model: ARP\",\"Date: 2023-02-01<br />Value: 138.2431<br />Model: ARP\",\"Date: 2023-03-01<br />Value: 137.7495<br />Model: ARP\",\"Date: 2023-04-01<br />Value: 137.3529<br />Model: ARP\",\"Date: 2023-05-01<br />Value: 137.0358<br />Model: ARP\",\"Date: 2023-06-01<br />Value: 136.7819<br />Model: ARP\",\"Date: 2023-07-01<br />Value: 136.5787<br />Model: ARP\",\"Date: 2023-08-01<br />Value: 136.4161<br />Model: ARP\",\"Date: 2023-09-01<br />Value: 136.2860<br />Model: ARP\",\"Date: 2023-10-01<br />Value: 136.1818<br />Model: ARP\",\"Date: 2023-11-01<br />Value: 136.0984<br />Model: ARP\",\"Date: 2023-12-01<br />Value: 136.0317<br />Model: ARP\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,191,125,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"ARP\",\"legendgroup\":\"ARP\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[128.01688513962125,128.47105590132705,128.98413585808899,129.28164948863139,129.68595222021733,129.79812923520524,129.96197293225785,130.13075369227104,130.69027114808469,130.96887396444532,131.21507834577574,131.22535533285426],\"text\":[\"Date: 2023-01-01<br />Value: 128.0169<br />Model: CES\",\"Date: 2023-02-01<br />Value: 128.4711<br />Model: CES\",\"Date: 2023-03-01<br />Value: 128.9841<br />Model: CES\",\"Date: 2023-04-01<br />Value: 129.2816<br />Model: CES\",\"Date: 2023-05-01<br />Value: 129.6860<br />Model: CES\",\"Date: 2023-06-01<br />Value: 129.7981<br />Model: CES\",\"Date: 2023-07-01<br />Value: 129.9620<br />Model: CES\",\"Date: 2023-08-01<br />Value: 130.1308<br />Model: CES\",\"Date: 2023-09-01<br />Value: 130.6903<br />Model: CES\",\"Date: 2023-10-01<br />Value: 130.9689<br />Model: CES\",\"Date: 2023-11-01<br />Value: 131.2151<br />Model: CES\",\"Date: 2023-12-01<br />Value: 131.2254<br />Model: CES\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,191,196,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"CES\",\"legendgroup\":\"CES\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[126.82526681655629,126.18688293977925,125.54849906300223,124.9101151862252,124.27173130944816,123.63334743267113,122.99496355589409,122.35657967911706,121.71819580234003,121.07981192556299,120.44142804878597,119.80304417200892],\"text\":[\"Date: 2023-01-01<br />Value: 126.8253<br />Model: HOLT_WINTER\",\"Date: 2023-02-01<br />Value: 126.1869<br />Model: HOLT_WINTER\",\"Date: 2023-03-01<br />Value: 125.5485<br />Model: HOLT_WINTER\",\"Date: 2023-04-01<br />Value: 124.9101<br />Model: HOLT_WINTER\",\"Date: 2023-05-01<br />Value: 124.2717<br />Model: HOLT_WINTER\",\"Date: 2023-06-01<br />Value: 123.6333<br />Model: HOLT_WINTER\",\"Date: 2023-07-01<br />Value: 122.9950<br />Model: HOLT_WINTER\",\"Date: 2023-08-01<br />Value: 122.3566<br />Model: HOLT_WINTER\",\"Date: 2023-09-01<br />Value: 121.7182<br />Model: HOLT_WINTER\",\"Date: 2023-10-01<br />Value: 121.0798<br />Model: HOLT_WINTER\",\"Date: 2023-11-01<br />Value: 120.4414<br />Model: HOLT_WINTER\",\"Date: 2023-12-01<br />Value: 119.8030<br />Model: HOLT_WINTER\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,176,246,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"HOLT_WINTER\",\"legendgroup\":\"HOLT_WINTER\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[127.46365069333332,127.46365069333332,127.46365069333332,127.46365069333332,127.46365069333332,127.46365069333332,127.46365069333332,127.46365069333332,127.46365069333332,127.46365069333332,127.46365069333332,127.46365069333332],\"text\":[\"Date: 2023-01-01<br />Value: 127.4637<br />Model: NAIVE\",\"Date: 2023-02-01<br />Value: 127.4637<br />Model: NAIVE\",\"Date: 2023-03-01<br />Value: 127.4637<br />Model: NAIVE\",\"Date: 2023-04-01<br />Value: 127.4637<br />Model: NAIVE\",\"Date: 2023-05-01<br />Value: 127.4637<br />Model: NAIVE\",\"Date: 2023-06-01<br />Value: 127.4637<br />Model: NAIVE\",\"Date: 2023-07-01<br />Value: 127.4637<br />Model: NAIVE\",\"Date: 2023-08-01<br />Value: 127.4637<br />Model: NAIVE\",\"Date: 2023-09-01<br />Value: 127.4637<br />Model: NAIVE\",\"Date: 2023-10-01<br />Value: 127.4637<br />Model: NAIVE\",\"Date: 2023-11-01<br />Value: 127.4637<br />Model: NAIVE\",\"Date: 2023-12-01<br />Value: 127.4637<br />Model: NAIVE\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(149,144,255,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"NAIVE\",\"legendgroup\":\"NAIVE\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[140.09999999999999,138.59999999999999,137.5,135.5,133.5,132,130.80000000000001,132.09999999999999,132.40000000000001,131.90000000000001,130.90000000000001,129.5],\"text\":[\"Date: 2023-01-01<br />Value: 140.1000<br />Model: Real\",\"Date: 2023-02-01<br />Value: 138.6000<br />Model: Real\",\"Date: 2023-03-01<br />Value: 137.5000<br />Model: Real\",\"Date: 2023-04-01<br />Value: 135.5000<br />Model: Real\",\"Date: 2023-05-01<br />Value: 133.5000<br />Model: Real\",\"Date: 2023-06-01<br />Value: 132.0000<br />Model: Real\",\"Date: 2023-07-01<br />Value: 130.8000<br />Model: Real\",\"Date: 2023-08-01<br />Value: 132.1000<br />Model: Real\",\"Date: 2023-09-01<br />Value: 132.4000<br />Model: Real\",\"Date: 2023-10-01<br />Value: 131.9000<br />Model: Real\",\"Date: 2023-11-01<br />Value: 130.9000<br />Model: Real\",\"Date: 2023-12-01<br />Value: 129.5000<br />Model: Real\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(231,107,243,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"Real\",\"legendgroup\":\"Real\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[126.83498465799791,126.39230250501281,125.94962035202771,125.50693819904261,125.06425604605751,124.62157389307241,124.17889174008731,123.73620958710221,123.29352743411711,122.85084528113201,122.40816312814691,121.96548097516181],\"text\":[\"Date: 2023-01-01<br />Value: 126.8350<br />Model: SSARIMA\",\"Date: 2023-02-01<br />Value: 126.3923<br />Model: SSARIMA\",\"Date: 2023-03-01<br />Value: 125.9496<br />Model: SSARIMA\",\"Date: 2023-04-01<br />Value: 125.5069<br />Model: SSARIMA\",\"Date: 2023-05-01<br />Value: 125.0643<br />Model: SSARIMA\",\"Date: 2023-06-01<br />Value: 124.6216<br />Model: SSARIMA\",\"Date: 2023-07-01<br />Value: 124.1789<br />Model: SSARIMA\",\"Date: 2023-08-01<br />Value: 123.7362<br />Model: SSARIMA\",\"Date: 2023-09-01<br />Value: 123.2935<br />Model: SSARIMA\",\"Date: 2023-10-01<br />Value: 122.8508<br />Model: SSARIMA\",\"Date: 2023-11-01<br />Value: 122.4082<br />Model: SSARIMA\",\"Date: 2023-12-01<br />Value: 121.9655<br />Model: SSARIMA\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(255,98,188,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"SSARIMA\",\"legendgroup\":\"SSARIMA\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":43.762557077625573,\"r\":7.3059360730593621,\"b\":40.182648401826498,\"l\":43.105022831050235},\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"title\":{\"text\":\"Comparaison des prévisions des modèles avec les données réelles<br />       Jan 2023 à Déc 2023 - série corrigée\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":17.534246575342465},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[19341.299999999999,19708.700000000001],\"tickmode\":\"array\",\"ticktext\":[\"Jan 2023\",\"Apr 2023\",\"Jul 2023\",\"Oct 2023\"],\"tickvals\":[19358,19448,19539,19631],\"categoryorder\":\"array\",\"categoryarray\":[\"Jan 2023\",\"Apr 2023\",\"Jul 2023\",\"Oct 2023\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Date\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[118.78819638060938,141.11484779139954],\"tickmode\":\"array\",\"ticktext\":[\"120\",\"125\",\"130\",\"135\",\"140\"],\"tickvals\":[120,125,130,135,140],\"categoryorder\":\"array\",\"categoryarray\":[\"120\",\"125\",\"130\",\"135\",\"140\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Valeur\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":null,\"bordercolor\":null,\"borderwidth\":0,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498},\"title\":{\"text\":\"Modèle\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"12f33578c022e\":{\"x\":{},\"y\":{},\"colour\":{},\"type\":\"scatter\"}},\"cur_data\":\"12f33578c022e\",\"visdat\":{\"12f33578c022e\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\nRécupération des données completes de janvier 2005 à décembre 2023\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nip <- ipampa1[nrow(ipampa1):1,]\nip <- ip[, 2]\nip <- ts(data = ip, start = c(2005, 01), frequency=12) \nip\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       Jan   Feb   Mar   Apr   May   Jun   Jul   Aug   Sep   Oct   Nov   Dec\n2005  78.2  78.5  79.1  79.3  78.9  79.4  79.8  80.0  80.5  80.7  80.3  80.4\n2006  80.8  81.1  81.3  81.8  81.8  81.8  81.9  82.1  81.9  82.1  82.3  82.5\n2007  82.6  83.1  83.8  84.5  84.8  85.1  85.8  86.6  88.1  89.5  91.1  91.9\n2008  93.2  94.4  95.7  96.9  98.8 100.2 101.3 100.6 100.6  99.5  97.7  95.8\n2009  95.4  94.8  93.9  93.5  92.7  92.2  90.8  90.7  90.1  89.7  89.4  89.3\n2010  89.5  89.8  90.4  91.0  91.2  91.4  91.3  92.1  93.7  95.0  95.6  96.6\n2011  98.0  99.4 100.6 101.0 100.4 100.6 101.0 100.9 101.3 101.3 101.2 101.0\n2012 100.6 101.2 101.9 102.3 102.3 101.8 103.1 105.1 106.0 106.5 106.4 106.3\n2013 106.4 106.8 106.4 105.7 105.4 105.0 104.6 104.2 103.7 103.0 102.7 102.7\n2014 102.9 103.0 103.1 103.3 103.3 103.1 102.5 102.1 101.6 101.0 100.4  99.5\n2015  99.1 100.5 100.7 101.1 101.3 100.6 100.2  99.7  99.6  99.5  99.3  98.3\n2016  97.8  97.5  97.6  97.4  97.9  97.8  97.3  96.9  97.0  97.4  97.2  98.3\n2017  98.6  99.0  98.9  99.1  98.7  98.1  97.9  98.0  98.4  98.9  99.2  99.3\n2018 100.1 100.1 100.4 101.1 102.0 101.9 102.2 102.7 103.6 104.6 104.5 103.8\n2019 103.6 104.1 104.4 104.6 104.4 103.8 103.7 103.3 103.7 103.6 103.3 103.5\n2020 103.6 103.4 102.3 101.7 101.7 101.8 101.8 101.8 101.5 102.1 102.6 103.1\n2021 104.5 106.4 107.6 107.9 108.5 109.6 110.9 111.6 113.2 117.5 119.5 120.5\n2022 123.1 124.9 133.2 134.6 136.1 138.6 138.2 138.9 139.5 142.0 141.3 139.6\n2023 140.1 138.6 137.5 135.5 133.5 132.0 130.8 132.1 132.4 131.9 130.9 129.5\n```\n\n\n:::\n:::\n\n\n\n## Série complete corrigée\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Automatic Procedure for Detection of Outliers\ntso(ip)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSeries: ip \nRegression with ARIMA(1,1,1) errors \n\nCoefficients:\n         ar1      ma1   LS202   LS207   TC214\n      0.8275  -0.2803  2.7628  6.6897  2.3709\ns.e.  0.0557   0.1008  0.5046  0.5038  0.4368\n\nsigma^2 = 0.3418:  log likelihood = -198.09\nAIC=408.17   AICc=408.56   BIC=428.72\n\nOutliers:\n  type ind    time coefhat  tstat\n1   LS 202 2021:10   2.763  5.475\n2   LS 207 2022:03   6.690 13.278\n3   TC 214 2022:10   2.371  5.429\n```\n\n\n:::\n\n```{.r .cell-code}\nfit_ip <- tso(ip)\n\n# outlier-adjusted series\nip_corrige <- fit_ip$yadj\nip_corrige\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          Jan      Feb      Mar      Apr      May      Jun      Jul      Aug\n2005  78.2000  78.5000  79.1000  79.3000  78.9000  79.4000  79.8000  80.0000\n2006  80.8000  81.1000  81.3000  81.8000  81.8000  81.8000  81.9000  82.1000\n2007  82.6000  83.1000  83.8000  84.5000  84.8000  85.1000  85.8000  86.6000\n2008  93.2000  94.4000  95.7000  96.9000  98.8000 100.2000 101.3000 100.6000\n2009  95.4000  94.8000  93.9000  93.5000  92.7000  92.2000  90.8000  90.7000\n2010  89.5000  89.8000  90.4000  91.0000  91.2000  91.4000  91.3000  92.1000\n2011  98.0000  99.4000 100.6000 101.0000 100.4000 100.6000 101.0000 100.9000\n2012 100.6000 101.2000 101.9000 102.3000 102.3000 101.8000 103.1000 105.1000\n2013 106.4000 106.8000 106.4000 105.7000 105.4000 105.0000 104.6000 104.2000\n2014 102.9000 103.0000 103.1000 103.3000 103.3000 103.1000 102.5000 102.1000\n2015  99.1000 100.5000 100.7000 101.1000 101.3000 100.6000 100.2000  99.7000\n2016  97.8000  97.5000  97.6000  97.4000  97.9000  97.8000  97.3000  96.9000\n2017  98.6000  99.0000  98.9000  99.1000  98.7000  98.1000  97.9000  98.0000\n2018 100.1000 100.1000 100.4000 101.1000 102.0000 101.9000 102.2000 102.7000\n2019 103.6000 104.1000 104.4000 104.6000 104.4000 103.8000 103.7000 103.3000\n2020 103.6000 103.4000 102.3000 101.7000 101.7000 101.8000 101.8000 101.8000\n2021 104.5000 106.4000 107.6000 107.9000 108.5000 109.6000 110.9000 111.6000\n2022 120.3372 122.1372 123.7475 125.1475 126.6475 129.1475 128.7475 129.4475\n2023 129.8342 128.5782 127.6490 125.7685 123.8522 122.4108 121.2518 122.5805\n          Sep      Oct      Nov      Dec\n2005  80.5000  80.7000  80.3000  80.4000\n2006  81.9000  82.1000  82.3000  82.5000\n2007  88.1000  89.5000  91.1000  91.9000\n2008 100.6000  99.5000  97.7000  95.8000\n2009  90.1000  89.7000  89.4000  89.3000\n2010  93.7000  95.0000  95.6000  96.6000\n2011 101.3000 101.3000 101.2000 101.0000\n2012 106.0000 106.5000 106.4000 106.3000\n2013 103.7000 103.0000 102.7000 102.7000\n2014 101.6000 101.0000 100.4000  99.5000\n2015  99.6000  99.5000  99.3000  98.3000\n2016  97.0000  97.4000  97.2000  98.3000\n2017  98.4000  98.9000  99.2000  99.3000\n2018 103.6000 104.6000 104.5000 103.8000\n2019 103.7000 103.6000 103.3000 103.5000\n2020 101.5000 102.1000 102.6000 103.1000\n2021 113.2000 114.7372 116.7372 117.7372\n2022 130.0475 130.1765 130.1878 128.9857\n2023 122.9006 122.4146 121.4245 120.0314\n```\n\n\n:::\n\n```{.r .cell-code}\nip_20023 <-  window(ip_corrige, start = c(2023, 1), end = c(2023, 12))\nip_20023 # recuperation des donnes pour 2023 de la série corrigé \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          Jan      Feb      Mar      Apr      May      Jun      Jul      Aug\n2023 129.8342 128.5782 127.6490 125.7685 123.8522 122.4108 121.2518 122.5805\n          Sep      Oct      Nov      Dec\n2023 122.9006 122.4146 121.4245 120.0314\n```\n\n\n:::\n:::\n\n\n\n## Graphique Prévisions de modeles comparés au données corrigés\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndec_2022 <- 128.9857 # derniere valeur observé, pour la reintegration\n\n#  data frames avec les dates et les prévisions\ndf2 <- data.frame(\n  Date = forecast_dates,\n  AR1 = dec_2022 + cumsum(df$AR1),\n  ARP = dec_2022 + cumsum(df$ARP),\n  ARIMA = dec_2022 + cumsum(df$ARIMA),\n  HOLT_WINTER = as.numeric(forecast_hw2$mean),\n ADAM_ETS = as.numeric(forecast_ae2$mean),\n ADAM_ETS_SARIMA = as.numeric(forecast_aea2$mean),\n SSARIMA =  as.numeric(forecast_ssarima2$mean),\n CES = as.numeric(forecast_ces2$mean),\n NAIVE = as.numeric(forecast_naive2$mean),\n corrige = as.numeric(ip_20023) # on integre les données corrigés\n)\n\ndf2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         Date      AR1      ARP    ARIMA HOLT_WINTER ADAM_ETS ADAM_ETS_SARIMA\n1  2023-01-01 128.2190 128.2553 128.3163    126.8253 126.7689        126.7788\n2  2023-02-01 127.7501 127.6288 127.7517    126.1869 126.1865        126.2107\n3  2023-03-01 127.4887 127.1352 127.2755    125.5485 125.7003        125.7402\n4  2023-04-01 127.3718 126.7386 126.8738    124.9101 125.3115        125.3645\n5  2023-05-01 127.3556 126.4215 126.5350    124.2717 124.9819        125.0520\n6  2023-06-01 127.4095 126.1676 126.2493    123.6333 124.7202        124.7977\n7  2023-07-01 127.5123 125.9644 126.0083    122.9950 124.5127        124.5864\n8  2023-08-01 127.6491 125.8018 125.8051    122.3566 124.3328        124.4162\n9  2023-09-01 127.8097 125.6717 125.6336    121.7182 124.1904        124.2790\n10 2023-10-01 127.9867 125.5675 125.4891    121.0798 124.0725        124.1813\n11 2023-11-01 128.1753 125.4841 125.3671    120.4414 123.9818        124.1015\n12 2023-12-01 128.3719 125.4174 125.2642    119.8030 123.9028        124.0404\n    SSARIMA      CES    NAIVE  corrige\n1  126.8350 128.0169 127.4637 129.8342\n2  126.3923 128.4711 127.4637 128.5782\n3  125.9496 128.9841 127.4637 127.6490\n4  125.5069 129.2816 127.4637 125.7685\n5  125.0643 129.6860 127.4637 123.8522\n6  124.6216 129.7981 127.4637 122.4108\n7  124.1789 129.9620 127.4637 121.2518\n8  123.7362 130.1308 127.4637 122.5805\n9  123.2935 130.6903 127.4637 122.9006\n10 122.8508 130.9689 127.4637 122.4146\n11 122.4082 131.2151 127.4637 121.4245\n12 121.9655 131.2254 127.4637 120.0314\n```\n\n\n:::\n\n```{.r .cell-code}\n# Transformer les données en format long\ndf_long2 <- pivot_longer(df2, cols = -Date, names_to = \"Model\", values_to = \"Value\")\n\n# graphique plotly\np <- ggplot(df_long2, aes(x = Date, y = Value, color = Model)) +\n  geom_line() +\n  theme_minimal() +\n  labs(title = \"Comparaison des prévisions  avec les données corrigées\n       Jan 2023 à Déc 2023 - série corrigée\",\n       x = \"Date\",\n       y = \"Valeur\",\n       color = \"Modèle\") +\n  theme(legend.position = \"bottom\") \n\nggplotly(p)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-5bf90d0e0461ba5a16da\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-5bf90d0e0461ba5a16da\">{\"x\":{\"data\":[{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[126.76893822879275,126.18653340191804,125.70031618978508,125.3114516163447,124.98188699579943,124.72019317877364,124.51274761342924,124.33279540958374,124.19037403463555,124.07245881819264,123.98175006510841,123.90282689145683],\"text\":[\"Date: 2023-01-01<br />Value: 126.7689<br />Model: ADAM_ETS\",\"Date: 2023-02-01<br />Value: 126.1865<br />Model: ADAM_ETS\",\"Date: 2023-03-01<br />Value: 125.7003<br />Model: ADAM_ETS\",\"Date: 2023-04-01<br />Value: 125.3115<br />Model: ADAM_ETS\",\"Date: 2023-05-01<br />Value: 124.9819<br />Model: ADAM_ETS\",\"Date: 2023-06-01<br />Value: 124.7202<br />Model: ADAM_ETS\",\"Date: 2023-07-01<br />Value: 124.5127<br />Model: ADAM_ETS\",\"Date: 2023-08-01<br />Value: 124.3328<br />Model: ADAM_ETS\",\"Date: 2023-09-01<br />Value: 124.1904<br />Model: ADAM_ETS\",\"Date: 2023-10-01<br />Value: 124.0725<br />Model: ADAM_ETS\",\"Date: 2023-11-01<br />Value: 123.9818<br />Model: ADAM_ETS\",\"Date: 2023-12-01<br />Value: 123.9028<br />Model: ADAM_ETS\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(248,118,109,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"ADAM_ETS\",\"legendgroup\":\"ADAM_ETS\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[126.7788361485968,126.21066660848932,125.7402499060434,125.3645161421758,125.05195693430356,124.79774850392229,124.58639648317849,124.41617941988531,124.27897109629406,124.18128303807075,124.10149166275549,124.04037703656239],\"text\":[\"Date: 2023-01-01<br />Value: 126.7788<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-02-01<br />Value: 126.2107<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-03-01<br />Value: 125.7402<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-04-01<br />Value: 125.3645<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-05-01<br />Value: 125.0520<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-06-01<br />Value: 124.7977<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-07-01<br />Value: 124.5864<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-08-01<br />Value: 124.4162<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-09-01<br />Value: 124.2790<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-10-01<br />Value: 124.1813<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-11-01<br />Value: 124.1015<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-12-01<br />Value: 124.0404<br />Model: ADAM_ETS_SARIMA\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(216,144,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"ADAM_ETS_SARIMA\",\"legendgroup\":\"ADAM_ETS_SARIMA\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[128.21897290112759,127.75007798926245,127.48865930613263,127.37177297164779,127.35557094173201,127.40950773735668,127.51230472891005,127.64913877095292,127.80968374546346,127.98674625925553,128.17531524181629,128.37189987496936],\"text\":[\"Date: 2023-01-01<br />Value: 128.2190<br />Model: AR1\",\"Date: 2023-02-01<br />Value: 127.7501<br />Model: AR1\",\"Date: 2023-03-01<br />Value: 127.4887<br />Model: AR1\",\"Date: 2023-04-01<br />Value: 127.3718<br />Model: AR1\",\"Date: 2023-05-01<br />Value: 127.3556<br />Model: AR1\",\"Date: 2023-06-01<br />Value: 127.4095<br />Model: AR1\",\"Date: 2023-07-01<br />Value: 127.5123<br />Model: AR1\",\"Date: 2023-08-01<br />Value: 127.6491<br />Model: AR1\",\"Date: 2023-09-01<br />Value: 127.8097<br />Model: AR1\",\"Date: 2023-10-01<br />Value: 127.9867<br />Model: AR1\",\"Date: 2023-11-01<br />Value: 128.1753<br />Model: AR1\",\"Date: 2023-12-01<br />Value: 128.3719<br />Model: AR1\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(163,165,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"AR1\",\"legendgroup\":\"AR1\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[128.3162756894331,127.75166353902004,127.27545304686731,126.87380311306686,126.53503974690781,126.24931676130808,126.00832959251927,125.80507392724986,125.63364212168214,125.48905149528436,125.36709950876194,125.2642416168828],\"text\":[\"Date: 2023-01-01<br />Value: 128.3163<br />Model: ARIMA\",\"Date: 2023-02-01<br />Value: 127.7517<br />Model: ARIMA\",\"Date: 2023-03-01<br />Value: 127.2755<br />Model: ARIMA\",\"Date: 2023-04-01<br />Value: 126.8738<br />Model: ARIMA\",\"Date: 2023-05-01<br />Value: 126.5350<br />Model: ARIMA\",\"Date: 2023-06-01<br />Value: 126.2493<br />Model: ARIMA\",\"Date: 2023-07-01<br />Value: 126.0083<br />Model: ARIMA\",\"Date: 2023-08-01<br />Value: 125.8051<br />Model: ARIMA\",\"Date: 2023-09-01<br />Value: 125.6336<br />Model: ARIMA\",\"Date: 2023-10-01<br />Value: 125.4891<br />Model: ARIMA\",\"Date: 2023-11-01<br />Value: 125.3671<br />Model: ARIMA\",\"Date: 2023-12-01<br />Value: 125.2642<br />Model: ARIMA\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(57,182,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"ARIMA\",\"legendgroup\":\"ARIMA\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[128.25532119103153,127.62880446360502,127.13515701159393,126.73860297418008,126.42148092832069,126.16761418003782,125.96443492446849,125.80181359599095,125.67165587715047,125.56748083598208,125.48410175108924,125.41736721594577],\"text\":[\"Date: 2023-01-01<br />Value: 128.2553<br />Model: ARP\",\"Date: 2023-02-01<br />Value: 127.6288<br />Model: ARP\",\"Date: 2023-03-01<br />Value: 127.1352<br />Model: ARP\",\"Date: 2023-04-01<br />Value: 126.7386<br />Model: ARP\",\"Date: 2023-05-01<br />Value: 126.4215<br />Model: ARP\",\"Date: 2023-06-01<br />Value: 126.1676<br />Model: ARP\",\"Date: 2023-07-01<br />Value: 125.9644<br />Model: ARP\",\"Date: 2023-08-01<br />Value: 125.8018<br />Model: ARP\",\"Date: 2023-09-01<br />Value: 125.6717<br />Model: ARP\",\"Date: 2023-10-01<br />Value: 125.5675<br />Model: ARP\",\"Date: 2023-11-01<br />Value: 125.4841<br />Model: ARP\",\"Date: 2023-12-01<br />Value: 125.4174<br />Model: ARP\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,191,125,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"ARP\",\"legendgroup\":\"ARP\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[128.01688513962125,128.47105590132705,128.98413585808899,129.28164948863139,129.68595222021733,129.79812923520524,129.96197293225785,130.13075369227104,130.69027114808469,130.96887396444532,131.21507834577574,131.22535533285426],\"text\":[\"Date: 2023-01-01<br />Value: 128.0169<br />Model: CES\",\"Date: 2023-02-01<br />Value: 128.4711<br />Model: CES\",\"Date: 2023-03-01<br />Value: 128.9841<br />Model: CES\",\"Date: 2023-04-01<br />Value: 129.2816<br />Model: CES\",\"Date: 2023-05-01<br />Value: 129.6860<br />Model: CES\",\"Date: 2023-06-01<br />Value: 129.7981<br />Model: CES\",\"Date: 2023-07-01<br />Value: 129.9620<br />Model: CES\",\"Date: 2023-08-01<br />Value: 130.1308<br />Model: CES\",\"Date: 2023-09-01<br />Value: 130.6903<br />Model: CES\",\"Date: 2023-10-01<br />Value: 130.9689<br />Model: CES\",\"Date: 2023-11-01<br />Value: 131.2151<br />Model: CES\",\"Date: 2023-12-01<br />Value: 131.2254<br />Model: CES\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,191,196,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"CES\",\"legendgroup\":\"CES\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[129.83423671658204,128.57820345630543,127.64898017411181,125.76852387657627,123.85220446830139,122.41078088250897,121.2517843724543,122.58048681541599,122.90057852548921,122.41464272254045,121.42448766047632,120.03137911703142],\"text\":[\"Date: 2023-01-01<br />Value: 129.8342<br />Model: corrige\",\"Date: 2023-02-01<br />Value: 128.5782<br />Model: corrige\",\"Date: 2023-03-01<br />Value: 127.6490<br />Model: corrige\",\"Date: 2023-04-01<br />Value: 125.7685<br />Model: corrige\",\"Date: 2023-05-01<br />Value: 123.8522<br />Model: corrige\",\"Date: 2023-06-01<br />Value: 122.4108<br />Model: corrige\",\"Date: 2023-07-01<br />Value: 121.2518<br />Model: corrige\",\"Date: 2023-08-01<br />Value: 122.5805<br />Model: corrige\",\"Date: 2023-09-01<br />Value: 122.9006<br />Model: corrige\",\"Date: 2023-10-01<br />Value: 122.4146<br />Model: corrige\",\"Date: 2023-11-01<br />Value: 121.4245<br />Model: corrige\",\"Date: 2023-12-01<br />Value: 120.0314<br />Model: corrige\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,176,246,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"corrige\",\"legendgroup\":\"corrige\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[126.82526681655629,126.18688293977925,125.54849906300223,124.9101151862252,124.27173130944816,123.63334743267113,122.99496355589409,122.35657967911706,121.71819580234003,121.07981192556299,120.44142804878597,119.80304417200892],\"text\":[\"Date: 2023-01-01<br />Value: 126.8253<br />Model: HOLT_WINTER\",\"Date: 2023-02-01<br />Value: 126.1869<br />Model: HOLT_WINTER\",\"Date: 2023-03-01<br />Value: 125.5485<br />Model: HOLT_WINTER\",\"Date: 2023-04-01<br />Value: 124.9101<br />Model: HOLT_WINTER\",\"Date: 2023-05-01<br />Value: 124.2717<br />Model: HOLT_WINTER\",\"Date: 2023-06-01<br />Value: 123.6333<br />Model: HOLT_WINTER\",\"Date: 2023-07-01<br />Value: 122.9950<br />Model: HOLT_WINTER\",\"Date: 2023-08-01<br />Value: 122.3566<br />Model: HOLT_WINTER\",\"Date: 2023-09-01<br />Value: 121.7182<br />Model: HOLT_WINTER\",\"Date: 2023-10-01<br />Value: 121.0798<br />Model: HOLT_WINTER\",\"Date: 2023-11-01<br />Value: 120.4414<br />Model: HOLT_WINTER\",\"Date: 2023-12-01<br />Value: 119.8030<br />Model: HOLT_WINTER\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(149,144,255,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"HOLT_WINTER\",\"legendgroup\":\"HOLT_WINTER\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[127.46365069333332,127.46365069333332,127.46365069333332,127.46365069333332,127.46365069333332,127.46365069333332,127.46365069333332,127.46365069333332,127.46365069333332,127.46365069333332,127.46365069333332,127.46365069333332],\"text\":[\"Date: 2023-01-01<br />Value: 127.4637<br />Model: NAIVE\",\"Date: 2023-02-01<br />Value: 127.4637<br />Model: NAIVE\",\"Date: 2023-03-01<br />Value: 127.4637<br />Model: NAIVE\",\"Date: 2023-04-01<br />Value: 127.4637<br />Model: NAIVE\",\"Date: 2023-05-01<br />Value: 127.4637<br />Model: NAIVE\",\"Date: 2023-06-01<br />Value: 127.4637<br />Model: NAIVE\",\"Date: 2023-07-01<br />Value: 127.4637<br />Model: NAIVE\",\"Date: 2023-08-01<br />Value: 127.4637<br />Model: NAIVE\",\"Date: 2023-09-01<br />Value: 127.4637<br />Model: NAIVE\",\"Date: 2023-10-01<br />Value: 127.4637<br />Model: NAIVE\",\"Date: 2023-11-01<br />Value: 127.4637<br />Model: NAIVE\",\"Date: 2023-12-01<br />Value: 127.4637<br />Model: NAIVE\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(231,107,243,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"NAIVE\",\"legendgroup\":\"NAIVE\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[126.83498465799791,126.39230250501281,125.94962035202771,125.50693819904261,125.06425604605751,124.62157389307241,124.17889174008731,123.73620958710221,123.29352743411711,122.85084528113201,122.40816312814691,121.96548097516181],\"text\":[\"Date: 2023-01-01<br />Value: 126.8350<br />Model: SSARIMA\",\"Date: 2023-02-01<br />Value: 126.3923<br />Model: SSARIMA\",\"Date: 2023-03-01<br />Value: 125.9496<br />Model: SSARIMA\",\"Date: 2023-04-01<br />Value: 125.5069<br />Model: SSARIMA\",\"Date: 2023-05-01<br />Value: 125.0643<br />Model: SSARIMA\",\"Date: 2023-06-01<br />Value: 124.6216<br />Model: SSARIMA\",\"Date: 2023-07-01<br />Value: 124.1789<br />Model: SSARIMA\",\"Date: 2023-08-01<br />Value: 123.7362<br />Model: SSARIMA\",\"Date: 2023-09-01<br />Value: 123.2935<br />Model: SSARIMA\",\"Date: 2023-10-01<br />Value: 122.8508<br />Model: SSARIMA\",\"Date: 2023-11-01<br />Value: 122.4082<br />Model: SSARIMA\",\"Date: 2023-12-01<br />Value: 121.9655<br />Model: SSARIMA\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(255,98,188,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"SSARIMA\",\"legendgroup\":\"SSARIMA\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":43.762557077625573,\"r\":7.3059360730593621,\"b\":40.182648401826498,\"l\":43.105022831050235},\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"title\":{\"text\":\"Comparaison des prévisions  avec les données corrigées<br />       Jan 2023 à Déc 2023 - série corrigée\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":17.534246575342465},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[19341.299999999999,19708.700000000001],\"tickmode\":\"array\",\"ticktext\":[\"Jan 2023\",\"Apr 2023\",\"Jul 2023\",\"Oct 2023\"],\"tickvals\":[19358,19448,19539,19631],\"categoryorder\":\"array\",\"categoryarray\":[\"Jan 2023\",\"Apr 2023\",\"Jul 2023\",\"Oct 2023\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Date\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[119.23192861396666,131.79647089089653],\"tickmode\":\"array\",\"ticktext\":[\"120\",\"123\",\"126\",\"129\"],\"tickvals\":[120,123,126,129],\"categoryorder\":\"array\",\"categoryarray\":[\"120\",\"123\",\"126\",\"129\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Valeur\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":null,\"bordercolor\":null,\"borderwidth\":0,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498},\"title\":{\"text\":\"Modèle\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"12f33477c309d\":{\"x\":{},\"y\":{},\"colour\":{},\"type\":\"scatter\"}},\"cur_data\":\"12f33477c309d\",\"visdat\":{\"12f33477c309d\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n# Qualité de prévision 2\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Erreur de prévision , comparatif entre la valeur predicte de chaque modele et la valeur real corrigé\nmodels2 <- names(df2)[-which(names(df2) == \"Date\" | names(df2) == \"corrige\")]\n# erreur pour chaque modèle\nerrors_df2 <- data.frame(Date = df2$Date)  #  dataframe pour stocker les erreurs\nfor (m in models2) {\n  errors_df2[[m]] <- df2[[m]] - df2$corrige\n}\nerrors_df2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         Date        AR1        ARP      ARIMA HOLT_WINTER   ADAM_ETS\n1  2023-01-01 -1.6152638 -1.5789155 -1.5179610  -3.0089699 -3.0652985\n2  2023-02-01 -0.8281255 -0.9493990 -0.8265399  -2.3913205 -2.3916701\n3  2023-03-01 -0.1603209 -0.5138232 -0.3735271  -2.1004811 -1.9486640\n4  2023-04-01  1.6032491  0.9700791  1.1052792  -0.8584087 -0.4570723\n5  2023-05-01  3.5033665  2.5692765  2.6828353   0.4195268  1.1296825\n6  2023-06-01  4.9987269  3.7568333  3.8385359   1.2225666  2.3094123\n7  2023-07-01  6.2605204  4.7126506  4.7565452   1.7431792  3.2609632\n8  2023-08-01  5.0686520  3.2213268  3.2245871  -0.2239071  1.7523086\n9  2023-09-01  4.9091052  2.7710774  2.7330636  -1.1823827  1.2897955\n10 2023-10-01  5.5721035  3.1528381  3.0744088  -1.3348308  1.6578161\n11 2023-11-01  6.7508276  4.0596141  3.9426118  -0.9830596  2.5572624\n12 2023-12-01  8.3405208  5.3859881  5.2328625  -0.2283349  3.8714478\n   ADAM_ETS_SARIMA    SSARIMA        CES      NAIVE\n1       -3.0554006 -2.9992521 -1.8173516 -2.3705860\n2       -2.3675368 -2.1859010 -0.1071476 -1.1145528\n3       -1.9087303 -1.6993598  1.3351557 -0.1853295\n4       -0.4040077 -0.2615857  3.5131256  1.6951268\n5        1.1997525  1.2120516  5.8337478  3.6114462\n6        2.3869676  2.2107930  7.3873484  5.0528698\n7        3.3346121  2.9271074  8.7101886  6.2118663\n8        1.8356926  1.1557228  7.5502669  4.8831639\n9        1.3783926  0.3929489  7.7896926  4.5630722\n10       1.7666403  0.4362026  8.5542312  5.0490080\n11       2.6770040  0.9836755  9.7905907  6.0391630\n12       4.0089979  1.9341019 11.1939762  7.4322716\n```\n\n\n:::\n\n```{.r .cell-code}\ndf2$corrige\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 129.8342 128.5782 127.6490 125.7685 123.8522 122.4108 121.2518 122.5805\n [9] 122.9006 122.4146 121.4245 120.0314\n```\n\n\n:::\n:::\n\n\n\n### CSPE 2\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# errors_df contienne déjà les erreurs pour chaque modèle calculées comme précédemment\ncspe_df2 <- data.frame(Date = df2$Date)  #  nouveau dataframe pour stocker le CSPE\n\nfor (m in models2) {\n  cspe_df2[[m]] <- cumsum(errors_df2[[m]])  # Calcul du CSPE \n}\n\ncspe_df2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         Date       AR1        ARP     ARIMA HOLT_WINTER   ADAM_ETS\n1  2023-01-01 -1.615264 -1.5789155 -1.517961   -3.008970 -3.0652985\n2  2023-02-01 -2.443389 -2.5283145 -2.344501   -5.400290 -5.4569685\n3  2023-03-01 -2.603710 -3.0421377 -2.718028   -7.500772 -7.4056325\n4  2023-04-01 -1.000461 -2.0720586 -1.612749   -8.359180 -7.8627048\n5  2023-05-01  2.502905  0.4972179  1.070086   -7.939653 -6.7330223\n6  2023-06-01  7.501632  4.2540512  4.908622   -6.717087 -4.4236100\n7  2023-07-01 13.762153  8.9667017  9.665168   -4.973908 -1.1626467\n8  2023-08-01 18.830805 12.1880285 12.889755   -5.197815  0.5896619\n9  2023-09-01 23.739910 14.9591059 15.622818   -6.380198  1.8794574\n10 2023-10-01 29.312013 18.1119440 18.697227   -7.715028  3.5372735\n11 2023-11-01 36.062841 22.1715581 22.639839   -8.698088  6.0945359\n12 2023-12-01 44.403362 27.5575462 27.872701   -8.926423  9.9659837\n   ADAM_ETS_SARIMA    SSARIMA        CES     NAIVE\n1       -3.0554006 -2.9992521 -1.8173516 -2.370586\n2       -5.4229374 -5.1851530 -1.9244991 -3.485139\n3       -7.3316677 -6.8845128 -0.5893434 -3.670468\n4       -7.7356754 -7.1460985  2.9237822 -1.975341\n5       -6.5359230 -5.9340469  8.7575299  1.636105\n6       -4.1489553 -3.7232539 16.1448783  6.688975\n7       -0.8143432 -0.7961466 24.8550668 12.900841\n8        1.0213494  0.3595762 32.4053337 17.784005\n9        2.3997420  0.7525251 40.1950263 22.347077\n10       4.1663823  1.1887277 48.7492576 27.396085\n11       6.8433863  2.1724032 58.5398483 33.435248\n12      10.8523842  4.1065050 69.7338245 40.867520\n```\n\n\n:::\n\n```{.r .cell-code}\n#  on pivot cspe_df2 pour l'utiliser avec ggplot2\ncspe_long2 <- tidyr::pivot_longer(cspe_df2, cols = -Date,  names_to = \"Model\", values_to = \"CSPE\")\n\n\na<- ggplot(cspe_long2, aes(x = Date, y = CSPE, color = Model)) +\n  geom_line() +\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"black\") +\n  labs(title = \"Cumulative Sum of Prediction Errors (CSPE) \",\n       x = \"Date\",\n       y = \"CSPE\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")\n\n ggplotly(a)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-f476f083da514a093542\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-f476f083da514a093542\">{\"x\":{\"data\":[{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[-3.0652984877892919,-5.456968542176682,-7.4056325265034104,-7.8627047867349802,-6.7330222592369466,-4.4236099629722787,-1.1626467219973335,0.58966187217041011,1.8794573813167545,3.5372734769689487,6.0945358816010469,9.9659836560264523],\"text\":[\"Date: 2023-01-01<br />CSPE: -3.0652985<br />Model: ADAM_ETS\",\"Date: 2023-02-01<br />CSPE: -5.4569685<br />Model: ADAM_ETS\",\"Date: 2023-03-01<br />CSPE: -7.4056325<br />Model: ADAM_ETS\",\"Date: 2023-04-01<br />CSPE: -7.8627048<br />Model: ADAM_ETS\",\"Date: 2023-05-01<br />CSPE: -6.7330223<br />Model: ADAM_ETS\",\"Date: 2023-06-01<br />CSPE: -4.4236100<br />Model: ADAM_ETS\",\"Date: 2023-07-01<br />CSPE: -1.1626467<br />Model: ADAM_ETS\",\"Date: 2023-08-01<br />CSPE:  0.5896619<br />Model: ADAM_ETS\",\"Date: 2023-09-01<br />CSPE:  1.8794574<br />Model: ADAM_ETS\",\"Date: 2023-10-01<br />CSPE:  3.5372735<br />Model: ADAM_ETS\",\"Date: 2023-11-01<br />CSPE:  6.0945359<br />Model: ADAM_ETS\",\"Date: 2023-12-01<br />CSPE:  9.9659837<br />Model: ADAM_ETS\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(248,118,109,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"ADAM_ETS\",\"legendgroup\":\"ADAM_ETS\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[-3.0554005679852452,-5.422937415801357,-7.3316676838697674,-7.7356754182702332,-6.5359229522680664,-4.1489553308547471,-0.81434322013055294,1.0213493843387624,2.399741955143611,4.1663822706739069,6.843386272953083,10.852384192484053],\"text\":[\"Date: 2023-01-01<br />CSPE: -3.0554006<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-02-01<br />CSPE: -5.4229374<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-03-01<br />CSPE: -7.3316677<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-04-01<br />CSPE: -7.7356754<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-05-01<br />CSPE: -6.5359230<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-06-01<br />CSPE: -4.1489553<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-07-01<br />CSPE: -0.8143432<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-08-01<br />CSPE:  1.0213494<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-09-01<br />CSPE:  2.3997420<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-10-01<br />CSPE:  4.1663823<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-11-01<br />CSPE:  6.8433863<br />Model: ADAM_ETS_SARIMA\",\"Date: 2023-12-01<br />CSPE: 10.8523842<br />Model: ADAM_ETS_SARIMA\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(211,146,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"ADAM_ETS_SARIMA\",\"legendgroup\":\"ADAM_ETS_SARIMA\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[-1.6152638154544547,-2.443389282497435,-2.6037101504766156,-1.000461055405097,2.5029054180255201,7.5016322728732234,13.76215262932898,18.830804584865902,23.739909804840153,29.312013341555229,36.062840922895205,44.403361680833143],\"text\":[\"Date: 2023-01-01<br />CSPE: -1.6152638<br />Model: AR1\",\"Date: 2023-02-01<br />CSPE: -2.4433893<br />Model: AR1\",\"Date: 2023-03-01<br />CSPE: -2.6037102<br />Model: AR1\",\"Date: 2023-04-01<br />CSPE: -1.0004611<br />Model: AR1\",\"Date: 2023-05-01<br />CSPE:  2.5029054<br />Model: AR1\",\"Date: 2023-06-01<br />CSPE:  7.5016323<br />Model: AR1\",\"Date: 2023-07-01<br />CSPE: 13.7621526<br />Model: AR1\",\"Date: 2023-08-01<br />CSPE: 18.8308046<br />Model: AR1\",\"Date: 2023-09-01<br />CSPE: 23.7399098<br />Model: AR1\",\"Date: 2023-10-01<br />CSPE: 29.3120133<br />Model: AR1\",\"Date: 2023-11-01<br />CSPE: 36.0628409<br />Model: AR1\",\"Date: 2023-12-01<br />CSPE: 44.4033617<br />Model: AR1\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(147,170,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"AR1\",\"legendgroup\":\"AR1\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[-1.5179610271489423,-2.3445009444343299,-2.7180280716788303,-1.612748835188242,1.0700864434181767,4.9086223222172833,9.665167542282262,12.889754654116132,15.622818250309066,18.697227023052974,22.639838871338597,27.872701371189976],\"text\":[\"Date: 2023-01-01<br />CSPE: -1.5179610<br />Model: ARIMA\",\"Date: 2023-02-01<br />CSPE: -2.3445009<br />Model: ARIMA\",\"Date: 2023-03-01<br />CSPE: -2.7180281<br />Model: ARIMA\",\"Date: 2023-04-01<br />CSPE: -1.6127488<br />Model: ARIMA\",\"Date: 2023-05-01<br />CSPE:  1.0700864<br />Model: ARIMA\",\"Date: 2023-06-01<br />CSPE:  4.9086223<br />Model: ARIMA\",\"Date: 2023-07-01<br />CSPE:  9.6651675<br />Model: ARIMA\",\"Date: 2023-08-01<br />CSPE: 12.8897547<br />Model: ARIMA\",\"Date: 2023-09-01<br />CSPE: 15.6228183<br />Model: ARIMA\",\"Date: 2023-10-01<br />CSPE: 18.6972270<br />Model: ARIMA\",\"Date: 2023-11-01<br />CSPE: 22.6398389<br />Model: ARIMA\",\"Date: 2023-12-01<br />CSPE: 27.8727014<br />Model: ARIMA\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,186,56,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"ARIMA\",\"legendgroup\":\"ARIMA\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[-1.5789155255505136,-2.528314518250923,-3.0421376807688034,-2.0720585831649885,0.49721787685430741,4.2540511743831502,8.9667017263973463,12.188028506972302,14.959105858633563,18.111943972075196,22.171558062688121,27.557546161602474],\"text\":[\"Date: 2023-01-01<br />CSPE: -1.5789155<br />Model: ARP\",\"Date: 2023-02-01<br />CSPE: -2.5283145<br />Model: ARP\",\"Date: 2023-03-01<br />CSPE: -3.0421377<br />Model: ARP\",\"Date: 2023-04-01<br />CSPE: -2.0720586<br />Model: ARP\",\"Date: 2023-05-01<br />CSPE:  0.4972179<br />Model: ARP\",\"Date: 2023-06-01<br />CSPE:  4.2540512<br />Model: ARP\",\"Date: 2023-07-01<br />CSPE:  8.9667017<br />Model: ARP\",\"Date: 2023-08-01<br />CSPE: 12.1880285<br />Model: ARP\",\"Date: 2023-09-01<br />CSPE: 14.9591059<br />Model: ARP\",\"Date: 2023-10-01<br />CSPE: 18.1119440<br />Model: ARP\",\"Date: 2023-11-01<br />CSPE: 22.1715581<br />Model: ARP\",\"Date: 2023-12-01<br />CSPE: 27.5575462<br />Model: ARP\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,193,159,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"ARP\",\"legendgroup\":\"ARP\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[-1.8173515769607889,-1.9244991319391715,-0.58934344796199412,2.9237821640931259,8.7575299160090623,16.144878268705327,24.855066828508882,32.40533370536393,40.195026327959411,48.749257569864284,58.539848255163704,69.733824470986548],\"text\":[\"Date: 2023-01-01<br />CSPE: -1.8173516<br />Model: CES\",\"Date: 2023-02-01<br />CSPE: -1.9244991<br />Model: CES\",\"Date: 2023-03-01<br />CSPE: -0.5893434<br />Model: CES\",\"Date: 2023-04-01<br />CSPE:  2.9237822<br />Model: CES\",\"Date: 2023-05-01<br />CSPE:  8.7575299<br />Model: CES\",\"Date: 2023-06-01<br />CSPE: 16.1448783<br />Model: CES\",\"Date: 2023-07-01<br />CSPE: 24.8550668<br />Model: CES\",\"Date: 2023-08-01<br />CSPE: 32.4053337<br />Model: CES\",\"Date: 2023-09-01<br />CSPE: 40.1950263<br />Model: CES\",\"Date: 2023-10-01<br />CSPE: 48.7492576<br />Model: CES\",\"Date: 2023-11-01<br />CSPE: 58.5398483<br />Model: CES\",\"Date: 2023-12-01<br />CSPE: 69.7338245<br />Model: CES\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,185,227,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"CES\",\"legendgroup\":\"CES\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[-3.0089699000257468,-5.4002904165519254,-7.500771527661513,-8.3591802180125825,-7.9396533768658202,-6.7170868267036639,-4.9739076432638711,-5.1978147795628047,-6.3801975027119795,-7.7150282996894362,-8.6980879113797869,-8.9264228564022829],\"text\":[\"Date: 2023-01-01<br />CSPE: -3.0089699<br />Model: HOLT_WINTER\",\"Date: 2023-02-01<br />CSPE: -5.4002904<br />Model: HOLT_WINTER\",\"Date: 2023-03-01<br />CSPE: -7.5007715<br />Model: HOLT_WINTER\",\"Date: 2023-04-01<br />CSPE: -8.3591802<br />Model: HOLT_WINTER\",\"Date: 2023-05-01<br />CSPE: -7.9396534<br />Model: HOLT_WINTER\",\"Date: 2023-06-01<br />CSPE: -6.7170868<br />Model: HOLT_WINTER\",\"Date: 2023-07-01<br />CSPE: -4.9739076<br />Model: HOLT_WINTER\",\"Date: 2023-08-01<br />CSPE: -5.1978148<br />Model: HOLT_WINTER\",\"Date: 2023-09-01<br />CSPE: -6.3801975<br />Model: HOLT_WINTER\",\"Date: 2023-10-01<br />CSPE: -7.7150283<br />Model: HOLT_WINTER\",\"Date: 2023-11-01<br />CSPE: -8.6980879<br />Model: HOLT_WINTER\",\"Date: 2023-12-01<br />CSPE: -8.9264229<br />Model: HOLT_WINTER\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(97,156,255,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"HOLT_WINTER\",\"legendgroup\":\"HOLT_WINTER\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[-2.3705860232487197,-3.4851387862208298,-3.6704682669993218,-1.9753414502422686,1.6361047747896578,6.6889745856140053,12.900840906493031,17.784004784410357,22.347076952254469,27.39608492304734,33.435247955904345,40.867519532206245],\"text\":[\"Date: 2023-01-01<br />CSPE: -2.3705860<br />Model: NAIVE\",\"Date: 2023-02-01<br />CSPE: -3.4851388<br />Model: NAIVE\",\"Date: 2023-03-01<br />CSPE: -3.6704683<br />Model: NAIVE\",\"Date: 2023-04-01<br />CSPE: -1.9753415<br />Model: NAIVE\",\"Date: 2023-05-01<br />CSPE:  1.6361048<br />Model: NAIVE\",\"Date: 2023-06-01<br />CSPE:  6.6889746<br />Model: NAIVE\",\"Date: 2023-07-01<br />CSPE: 12.9008409<br />Model: NAIVE\",\"Date: 2023-08-01<br />CSPE: 17.7840048<br />Model: NAIVE\",\"Date: 2023-09-01<br />CSPE: 22.3470770<br />Model: NAIVE\",\"Date: 2023-10-01<br />CSPE: 27.3960849<br />Model: NAIVE\",\"Date: 2023-11-01<br />CSPE: 33.4352480<br />Model: NAIVE\",\"Date: 2023-12-01<br />CSPE: 40.8675195<br />Model: NAIVE\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(219,114,251,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"NAIVE\",\"legendgroup\":\"NAIVE\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19358,19389,19417,19448,19478,19509,19539,19570,19601,19631,19662,19692],\"y\":[-2.9992520585841334,-5.1851530098767569,-6.8845128319608619,-7.1460985094945215,-5.9340469317384077,-3.7232539211749724,-0.79614655354195918,0.35957621814425522,0.75252512677215577,1.1887276853637161,2.1724031530343098,4.1065050111646997],\"text\":[\"Date: 2023-01-01<br />CSPE: -2.9992521<br />Model: SSARIMA\",\"Date: 2023-02-01<br />CSPE: -5.1851530<br />Model: SSARIMA\",\"Date: 2023-03-01<br />CSPE: -6.8845128<br />Model: SSARIMA\",\"Date: 2023-04-01<br />CSPE: -7.1460985<br />Model: SSARIMA\",\"Date: 2023-05-01<br />CSPE: -5.9340469<br />Model: SSARIMA\",\"Date: 2023-06-01<br />CSPE: -3.7232539<br />Model: SSARIMA\",\"Date: 2023-07-01<br />CSPE: -0.7961466<br />Model: SSARIMA\",\"Date: 2023-08-01<br />CSPE:  0.3595762<br />Model: SSARIMA\",\"Date: 2023-09-01<br />CSPE:  0.7525251<br />Model: SSARIMA\",\"Date: 2023-10-01<br />CSPE:  1.1887277<br />Model: SSARIMA\",\"Date: 2023-11-01<br />CSPE:  2.1724032<br />Model: SSARIMA\",\"Date: 2023-12-01<br />CSPE:  4.1065050<br />Model: SSARIMA\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(255,97,195,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"SSARIMA\",\"legendgroup\":\"SSARIMA\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[19341.299999999999,19708.700000000001],\"y\":[0,0],\"text\":\"yintercept: 0\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"dash\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":43.762557077625573,\"r\":7.3059360730593621,\"b\":40.182648401826498,\"l\":37.260273972602747},\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"title\":{\"text\":\"Cumulative Sum of Prediction Errors (CSPE) \",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":17.534246575342465},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[19341.299999999999,19708.700000000001],\"tickmode\":\"array\",\"ticktext\":[\"Jan 2023\",\"Apr 2023\",\"Jul 2023\",\"Oct 2023\"],\"tickvals\":[19358,19448,19539,19631],\"categoryorder\":\"array\",\"categoryarray\":[\"Jan 2023\",\"Apr 2023\",\"Jul 2023\",\"Oct 2023\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Date\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-12.859435222771724,73.666836837355987],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"20\",\"40\",\"60\"],\"tickvals\":[0,20,40.000000000000007,60],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"20\",\"40\",\"60\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"CSPE\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":null,\"bordercolor\":null,\"borderwidth\":0,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498},\"title\":{\"text\":\"Model\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"12f3379c0ab4b\":{\"x\":{},\"y\":{},\"colour\":{},\"type\":\"scatter\"},\"12f33582e075f\":{\"yintercept\":{}}},\"cur_data\":\"12f3379c0ab4b\",\"visdat\":{\"12f3379c0ab4b\":[\"function (y) \",\"x\"],\"12f33582e075f\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n### Calcul du R2OOS 2\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# DataFrame pour stocker le R^2 OOS de chaque modèle\nr2oos_df2 <- data.frame(Model = character(), R2OOS = numeric())\n\n# R^2 OOS pour chaque modèle, avec modèle naïf comme référence\nmodels2 <- setdiff(names(df2), c(\"Date\", \"corrige\", \"NAIVE\"))  # Exclure Date, corrige, et NAIVE de la liste des modèles\n\nfor (model in models2) {\n  r2oos_value2 <- calculate_r2oos(df2$corrige, df2[[model]], df2$NAIVE) #on reutilise la fonction crée avant\n  r2oos_df2 <- rbind(r2oos_df2, data.frame(Model = model, R2OOS = r2oos_value2))\n}\n\nr2oos_df2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            Model      R2OOS\n1             AR1 -0.1186581\n2             ARP  0.5136306\n3           ARIMA  0.5210950\n4     HOLT_WINTER  0.8839270\n5        ADAM_ETS  0.7372353\n6 ADAM_ETS_SARIMA  0.7241445\n7         SSARIMA  0.8470932\n8             CES -1.3871863\n```\n\n\n:::\n:::\n\n\n\n### Calcul du MSE 2\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# dataFrame pour stocker le MSE de chaque modèle\nmse_df2 <- data.frame(Model = character(), MSE = numeric())\n\nfor (model in models2) {\n  mse_value2 <- mean((errors_df2[[model]])^2)  # Calcul du MSE\n  mse_df2 <- rbind(mse_df2, data.frame(Model = model, MSE = mse_value2))\n}\n\nmse_df2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            Model       MSE\n1             AR1 23.193565\n2             ARP 10.084083\n3           ARIMA  9.929321\n4     HOLT_WINTER  2.406585\n5        ADAM_ETS  5.448001\n6 ADAM_ETS_SARIMA  5.719417\n7         SSARIMA  3.170275\n8             CES 49.494445\n```\n\n\n:::\n:::\n\n\n\n### DM test 2\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# DataFrame pour stocker les résultats du \ndm_results2 <- data.frame(Model = character(), DM_Statistic = numeric(), P_Value = numeric(), stringsAsFactors = FALSE)\n\n# DM test pour chaque modèle comparé au modèle naïf\nfor (model in setdiff(models2, \"NAIVE\")) {\n  dm_test_result2 <- dm.test(errors_df2$NAIVE, errors_df2[[model]], alternative = \"less\")\n  \n#  résultats\ndm_results2 <- rbind(dm_results2, data.frame(Model = model, DM_Statistic = dm_test_result2$statistic, P_Value = dm_test_result2$p.value))}\n\ndm_results2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n              Model DM_Statistic      P_Value\nDM              AR1    -1.716421 0.0570373979\nDM1             ARP     4.390655 0.9994600888\nDM2           ARIMA     4.259706 0.9993281653\nDM3     HOLT_WINTER     3.396124 0.9970150632\nDM4        ADAM_ETS     3.576107 0.9978258800\nDM5 ADAM_ETS_SARIMA     3.595847 0.9978998138\nDM6         SSARIMA     3.519984 0.9976007031\nDM7             CES    -4.181538 0.0007662846\n```\n\n\n:::\n:::\n\n\n\n## Prévision modele Holt Winter\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheckresiduals(forecast_hw2)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-51-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tLjung-Box test\n\ndata:  Residuals from HoltWinters\nQ* = 23.15, df = 24, p-value = 0.511\n\nModel df: 0.   Total lags used: 24\n```\n\n\n:::\n\n```{.r .cell-code}\nforecast_hw2$mean\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          Jan      Feb      Mar      Apr      May      Jun      Jul      Aug\n2023 126.8253 126.1869 125.5485 124.9101 124.2717 123.6333 122.9950 122.3566\n          Sep      Oct      Nov      Dec\n2023 121.7182 121.0798 120.4414 119.8030\n```\n\n\n:::\n\n```{.r .cell-code}\ndf2$corrige\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 129.8342 128.5782 127.6490 125.7685 123.8522 122.4108 121.2518 122.5805\n [9] 122.9006 122.4146 121.4245 120.0314\n```\n\n\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../../../site_libs/plotly-binding-4.10.4/plotly.js\"></script>\n<script src=\"../../../site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"../../../site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"../../../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<link href=\"../../../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}