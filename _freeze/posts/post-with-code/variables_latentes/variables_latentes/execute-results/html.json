{
  "hash": "3510d762e68b5dbdb0da44932f705650",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Variables latentes\"\nsubtitle: \"Discrimination des saumons suivant leur provenance\"\ndate: \"2024-03\"\ncategories: [Classifaction, ACP, PLS-DA]\n---\n\n\n\n# Apprentissage superviseÃÅ par une approche PLS\n\nDiscrimination des saumons suivant leur provenance et leur mode de production sur la base de donn√©es de caract√©risation chimique.\n\n::: {style=\"text-align: center;\"}\n<iframe src=\"/pdf/projet_saumon.pdf\" width=\"80%\" height=\"500px\">\n\n</iframe>\n:::\n\nVous avez la possibilit√© de t√©l√©charger le document ici :) [üì• T√©l√©charger le fichier PDF](/pdf/projet_saumon.pdf)\n\n**Pr√©sentation du code**\n\nJe vous pr√©sente ci-dessous, le code utilis√© pour mener √† bien ce projet, avec les √©tapes et explications correspondantes.\n\n**Librairies**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsuppressPackageStartupMessages({\nlibrary(caret)\nlibrary(corrplot)\nlibrary(ggplot2)\nlibrary(FactoMineR)\nlibrary(factoextra)\nlibrary(mixOmics)\nlibrary(tidyr)\nlibrary(here)\n})  \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsaumon <- read.csv(here(\"data\", \"ICPMS_raw_data.csv\"))\n```\n:::\n\n\n\n# Pr√©paration du jeu de donn√©es\n\nLes 20 √©l√©ments restants ont √©t√© s√©lectionn√©s √† partir des donn√©es brutes de ICP-MS; Li, B, Al, V, Cr, Mn, Fe, Co, Ni, Cu, Zn, As, Se, Rb, Sr, Nb, Mo, Cd, Cs, Ta'\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(saumon)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t521 obs. of  38 variables:\n $ Class             : chr  \"Alaskan\" \"Alaskan\" \"Alaskan\" \"Alaskan\" ...\n $ X7..Li....No.Gas..: num  41.7 26.2 29.1 27.4 48.3 ...\n $ X9..Be....No.Gas..: num  0.36 0.13 0.18 0.26 0.2 0.13 0.09 0.14 0.14 0.13 ...\n $ X11..B....No.Gas..: num  895 714 630 637 1135 ...\n $ X23..Na....He..   : num  3515111 1972504 2215578 2146019 2613561 ...\n $ X24..Mg....He..   : num  1367207 1043805 1038513 1059030 1236369 ...\n $ X27..Al....He..   : num  942 953 1548 897 988 ...\n $ X28..Si....He..   : num  15274 13080 12523 12792 13179 ...\n $ X31..P....He..    : num  8489171 6068584 6473927 6611607 7205997 ...\n $ X39..K....He..    : num  6669882 4515977 5007307 4953765 5337876 ...\n $ X44..Ca....He..   : num  60213 34519 45423 43136 63616 ...\n $ X47..Ti....He..   : num  145 254 179 184 177 ...\n $ X51..V....He..    : num  14.34 3.33 9.47 11.57 8.88 ...\n $ X52..Cr....He..   : num  17.9 10.4 30.5 28.6 37.9 ...\n $ X55..Mn....He..   : num  299 302 236 164 249 ...\n $ X56..Fe....He..   : num  11212 8978 8687 9740 14683 ...\n $ X59..Co....He..   : num  8.16 5.04 5.56 4.49 5.49 4.6 3.51 4.63 4.86 3.5 ...\n $ X60..Ni....He..   : num  38.2 79.3 90.5 39.3 95.8 ...\n $ X63..Cu....He..   : num  1506 1192 1377 1049 1435 ...\n $ X66..Zn....He..   : num  22574 12049 13794 11922 16469 ...\n $ X71..Ga....He..   : num  0 0.74 0 0.75 0.76 0.36 0 0 0.37 0.35 ...\n $ X72..Ge....He..   : num  0 0.43 0.43 0 0 0.44 0 0.48 0.46 0 ...\n $ X75..As....He..   : num  1235 1129 1047 1224 1435 ...\n $ X78..Se....He..   : num  1741 1673 1332 1503 1686 ...\n $ X85..Rb....He..   : num  3757 2723 2900 2746 3071 ...\n $ X88..Sr....He..   : num  1604 747 999 1095 1935 ...\n $ X93..Nb....He..   : num  10.75 7.05 6.93 5.56 10.56 ...\n $ X95..Mo....He..   : num  14.75 7.11 7.78 8.93 10.21 ...\n $ X107..Ag....He..  : num  0.73 0.29 1.64 0.46 0.83 0.57 1.24 0.39 0.86 1.22 ...\n $ X111..Cd....He..  : num  5.55 4.4 9 9.19 6.6 ...\n $ X133..Cs....He..  : num  93.4 66.5 69.4 61 68.2 ...\n $ X135..Ba....He..  : num  11.7 243.4 25.6 21.9 20 ...\n $ X181..Ta....He..  : num  18.3 10.5 13.3 59.3 15.9 ...\n $ X182..W....He..   : num  1.07 0.67 0.96 1.38 1.02 0.72 0.73 0.49 0.54 0.82 ...\n $ X205..Tl....He..  : num  3.21 2.21 2.32 1.15 2.18 2.13 1.56 3.82 1.44 2.15 ...\n $ X206...Pb.....He..: num  2.56 5.78 3.33 1.45 3.33 1.65 6.22 1.62 3.8 3.97 ...\n $ X207...Pb.....He..: num  1.95 6.34 3.47 1.82 3.64 2.03 5.51 1.13 4.01 4.99 ...\n $ X208..Pb....He..  : num  2.19 6.11 3.25 1.77 3.33 1.83 5.69 1.38 3.85 4.49 ...\n```\n\n\n:::\n\n```{.r .cell-code}\nsaumon <- saumon[c(1, 2, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 30, 31, 33)]\nnames(saumon) <- c(\"pays\", \"Li\", \"B\", \"Al\", \"V\", \"Cr\", \"Mn\", \"Fe\", \"Co\", \"Ni\", \"Cu\", \"Zn\", \"As\", \"Se\", \"Rb\", \"Sr\", \"Nb\", \"Mo\", \"Cd\", \"Cs\", \"Ta\")\n```\n:::\n\n\n\n## Convertir la colonne pays en factor\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsaumon$pays <- as.factor(saumon$pays)\nsummary(saumon)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        pays           Li              B                Al         \n Alaskan  : 99   Min.   : 0.00   Min.   :   0.0   Min.   :   35.7  \n Iceland-F: 55   1st Qu.: 9.95   1st Qu.:  92.1   1st Qu.:  943.5  \n Iceland-W: 90   Median :17.79   Median : 359.7   Median : 1447.5  \n Norway   :100   Mean   :20.61   Mean   : 382.7   Mean   : 2408.3  \n Scotland :177   3rd Qu.:28.96   3rd Qu.: 585.3   3rd Qu.: 2736.1  \n                 Max.   :87.00   Max.   :1346.1   Max.   :45092.6  \n       V               Cr               Mn              Fe       \n Min.   : 0.00   Min.   :  5.72   Min.   :104.7   Min.   : 2921  \n 1st Qu.: 6.30   1st Qu.: 18.52   1st Qu.:191.4   1st Qu.: 5423  \n Median :10.20   Median : 30.30   Median :228.3   Median : 7012  \n Mean   :11.56   Mean   : 42.62   Mean   :245.1   Mean   : 8231  \n 3rd Qu.:15.30   3rd Qu.: 51.60   3rd Qu.:289.2   3rd Qu.:10301  \n Max.   :95.70   Max.   :396.75   Max.   :774.9   Max.   :40184  \n       Co              Ni                Cu               Zn       \n Min.   : 3.50   Min.   :   3.90   Min.   : 458.4   Min.   : 5765  \n 1st Qu.: 7.50   1st Qu.:  15.30   1st Qu.: 873.3   1st Qu.:10471  \n Median :10.80   Median :  23.68   Median :1159.3   Median :13916  \n Mean   :10.92   Mean   :  58.92   Mean   :1252.4   Mean   :13747  \n 3rd Qu.:13.57   3rd Qu.:  50.70   3rd Qu.:1476.0   3rd Qu.:16421  \n Max.   :29.90   Max.   :1596.60   Max.   :8928.6   Max.   :26602  \n       As               Se               Rb             Sr        \n Min.   : 788.1   Min.   : 453.3   Min.   :1838   Min.   : 281.1  \n 1st Qu.:1343.4   1st Qu.: 825.6   1st Qu.:2879   1st Qu.: 845.8  \n Median :1799.1   Median :1296.8   Median :3438   Median :1200.0  \n Mean   :2091.7   Mean   :1375.0   Mean   :3523   Mean   :1379.4  \n 3rd Qu.:2530.9   3rd Qu.:1833.3   3rd Qu.:4127   3rd Qu.:1738.2  \n Max.   :6746.5   Max.   :3154.4   Max.   :6320   Max.   :8613.3  \n       Nb               Mo              Cd               Cs        \n Min.   :  0.00   Min.   : 3.00   Min.   : 0.000   Min.   : 47.10  \n 1st Qu.:  2.70   1st Qu.: 9.00   1st Qu.: 0.300   1st Qu.: 68.39  \n Median :  6.30   Median :11.70   Median : 0.990   Median : 82.20  \n Mean   : 15.66   Mean   :12.26   Mean   : 4.723   Mean   : 89.19  \n 3rd Qu.: 13.78   3rd Qu.:14.40   3rd Qu.: 7.800   3rd Qu.:107.40  \n Max.   :296.92   Max.   :66.00   Max.   :51.900   Max.   :217.19  \n       Ta        \n Min.   :  0.30  \n 1st Qu.:  4.94  \n Median : 10.52  \n Mean   : 19.09  \n 3rd Qu.: 20.15  \n Max.   :268.14  \n```\n\n\n:::\n:::\n\n\n\n## Configurer preProcess pour la normalisation min-max\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npreproc <- preProcess(saumon,  method = \"range\")\nsaumon_norm <- predict(preproc, saumon)\n```\n:::\n\n\n\n## V√©rification de valeurs manquantes\n\n`{sum(is.null(saumon))} str(saumon_norm)`\n\n# Analyse descriptif\n\n## Matrice de corr√©lation\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncor(saumon_norm[, -1], use = \"complete.obs\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            Li            B          Al            V         Cr          Mn\nLi  1.00000000  0.724641027  0.04008869  0.024334770 0.08005162  0.12836481\nB   0.72464103  1.000000000 -0.11376094  0.070988674 0.04267486 -0.16201305\nAl  0.04008869 -0.113760939  1.00000000 -0.122583713 0.07338391  0.30331472\nV   0.02433477  0.070988674 -0.12258371  1.000000000 0.09779409 -0.01296994\nCr  0.08005162  0.042674861  0.07338391  0.097794089 1.00000000  0.14218022\nMn  0.12836481 -0.162013053  0.30331472 -0.012969938 0.14218022  1.00000000\nFe  0.25317831  0.008776603  0.27505466  0.159549917 0.28942941  0.46487195\nCo -0.26034878 -0.425520211  0.17365018 -0.038118096 0.05600151  0.50677703\nNi  0.15426275  0.174676930 -0.04150267  0.094758157 0.23774355 -0.03411629\nCu  0.25409546  0.022376096  0.09103141  0.111587130 0.30627305  0.33886807\nZn  0.26209502 -0.091873578  0.21303529  0.039069060 0.12705212  0.62871674\nAs  0.07282843 -0.231511136  0.24805751 -0.127048528 0.04332965  0.45817103\nSe  0.19054180 -0.161683420  0.18229134 -0.008138077 0.16589213  0.51642643\nRb  0.04282060 -0.217158345  0.21644267 -0.074508843 0.18615152  0.64335441\nSr  0.36064173  0.275550424  0.13837845  0.114383963 0.06042190  0.34308817\nNb -0.05934258 -0.021515850 -0.01853557 -0.019491929 0.03429055  0.10774112\nMo  0.10421444  0.140319783  0.01026243  0.088107541 0.42042750  0.20471256\nCd  0.09084172 -0.135760711  0.15647636  0.093146759 0.14878504  0.29846500\nCs  0.02233589 -0.273479302  0.28315336 -0.111128301 0.16923000  0.60488525\nTa -0.09605333 -0.128510184  0.01275089 -0.049036467 0.06082321  0.20172671\n            Fe          Co            Ni         Cu            Zn          As\nLi 0.253178306 -0.26034878  0.1542627477 0.25409546  0.2620950186  0.07282843\nB  0.008776603 -0.42552021  0.1746769304 0.02237610 -0.0918735782 -0.23151114\nAl 0.275054656  0.17365018 -0.0415026707 0.09103141  0.2130352910  0.24805751\nV  0.159549917 -0.03811810  0.0947581574 0.11158713  0.0390690600 -0.12704853\nCr 0.289429410  0.05600151  0.2377435505 0.30627305  0.1270521172  0.04332965\nMn 0.464871950  0.50677703 -0.0341162865 0.33886807  0.6287167425  0.45817103\nFe 1.000000000  0.23142264  0.1519759449 0.60107970  0.6699140899  0.17341713\nCo 0.231422638  1.00000000 -0.2197332620 0.16829169  0.4893560155  0.37495967\nNi 0.151975945 -0.21973326  1.0000000000 0.59157403  0.0009223212 -0.16137993\nCu 0.601079703  0.16829169  0.5915740256 1.00000000  0.5935674243  0.13872561\nZn 0.669914090  0.48935602  0.0009223212 0.59356742  1.0000000000  0.52222525\nAs 0.173417127  0.37495967 -0.1613799282 0.13872561  0.5222252491  1.00000000\nSe 0.769207606  0.30519477  0.0590346669 0.62420299  0.8192668000  0.34391452\nRb 0.465893237  0.62962681 -0.0820321103 0.41919822  0.6855785324  0.46802316\nSr 0.145974273 -0.01132413 -0.0046252187 0.06733761  0.1647603608  0.03433229\nNb 0.083513250  0.17287801 -0.0011868805 0.07977229  0.1744046862  0.09849027\nMo 0.101636738  0.31989378  0.2582018447 0.37676314  0.2552816609  0.09634495\nCd 0.667687354  0.10537444  0.0858341537 0.44220436  0.5185553926  0.05601936\nCs 0.380361544  0.53676923 -0.1205520641 0.29233323  0.5767797766  0.61844455\nTa 0.158705002  0.27069289  0.0063345396 0.15556021  0.2734057750  0.15783964\n             Se          Rb           Sr          Nb          Mo          Cd\nLi  0.190541801  0.04282060  0.360641733 -0.05934258  0.10421444  0.09084172\nB  -0.161683420 -0.21715834  0.275550424 -0.02151585  0.14031978 -0.13576071\nAl  0.182291343  0.21644267  0.138378448 -0.01853557  0.01026243  0.15647636\nV  -0.008138077 -0.07450884  0.114383963 -0.01949193  0.08810754  0.09314676\nCr  0.165892135  0.18615152  0.060421901  0.03429055  0.42042750  0.14878504\nMn  0.516426429  0.64335441  0.343088165  0.10774112  0.20471256  0.29846500\nFe  0.769207606  0.46589324  0.145974273  0.08351325  0.10163674  0.66768735\nCo  0.305194769  0.62962681 -0.011324131  0.17287801  0.31989378  0.10537444\nNi  0.059034667 -0.08203211 -0.004625219 -0.00118688  0.25820184  0.08583415\nCu  0.624202989  0.41919822  0.067337612  0.07977229  0.37676314  0.44220436\nZn  0.819266800  0.68557853  0.164760361  0.17440469  0.25528166  0.51855539\nAs  0.343914522  0.46802316  0.034332287  0.09849027  0.09634495  0.05601936\nSe  1.000000000  0.67263481  0.064750989  0.20787315  0.10240250  0.71970435\nRb  0.672634807  1.00000000  0.042192750  0.23350173  0.23237317  0.36564902\nSr  0.064750989  0.04219275  1.000000000 -0.18928860 -0.05813792  0.11870994\nNb  0.207873151  0.23350173 -0.189288598  1.00000000  0.24765213  0.12228641\nMo  0.102402501  0.23237317 -0.058137918  0.24765213  1.00000000 -0.05689127\nCd  0.719704345  0.36564902  0.118709942  0.12228641 -0.05689127  1.00000000\nCs  0.542852861  0.86687886  0.115683237  0.15873294  0.09295079  0.27459355\nTa  0.332121329  0.36836121 -0.208432236  0.94275429  0.28107000  0.19763015\n            Cs          Ta\nLi  0.02233589 -0.09605333\nB  -0.27347930 -0.12851018\nAl  0.28315336  0.01275089\nV  -0.11112830 -0.04903647\nCr  0.16923000  0.06082321\nMn  0.60488525  0.20172671\nFe  0.38036154  0.15870500\nCo  0.53676923  0.27069289\nNi -0.12055206  0.00633454\nCu  0.29233323  0.15556021\nZn  0.57677978  0.27340577\nAs  0.61844455  0.15783964\nSe  0.54285286  0.33212133\nRb  0.86687886  0.36836121\nSr  0.11568324 -0.20843224\nNb  0.15873294  0.94275429\nMo  0.09295079  0.28107000\nCd  0.27459355  0.19763015\nCs  1.00000000  0.28032163\nTa  0.28032163  1.00000000\n```\n\n\n:::\n\n```{.r .cell-code}\ncorrplot::corrplot(cor(saumon_norm[, -1]), method = \"color\", type = \"upper\", order=\"FPC\", \n                   tl.cex = 0.6,\n                   number.cex = 0.5,\n                   addCoef.col = \"black\")\n```\n\n::: {.cell-output-display}\n![](variables_latentes_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\nDistribution des valeurs observ√©s pour les diff√©rents variables\n\n## Transformation des donn√©es en format long\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsaumon_norm_long <- pivot_longer(saumon_norm, cols = -1, names_to = \"variable\", values_to = \"value\")\n```\n:::\n\n\n\nHistogrammes avec courbes de densit√© pour chaque variable\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(saumon_norm_long, aes(x = value)) +\n  geom_histogram(aes(y = after_stat(density)), bins = 30, fill = \"blue\", color = \"white\") +\n  geom_density(color = \"red\", linewidth = 1) +\n  facet_wrap(~variable, scales = \"free\") +\n  theme_minimal() +\n  labs(y = \"Densit√©\", title = \"Distribution des Variables avec Courbe de Densit√©\")\n```\n\n::: {.cell-output-display}\n![](variables_latentes_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\nTableau de contingence des pays\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(saumon_norm$pays)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  Alaskan Iceland-F Iceland-W    Norway  Scotland \n       99        55        90       100       177 \n```\n\n\n:::\n:::\n\n\n\n## ACP FactoMineR\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npca_res <- PCA(saumon_norm[, -1], scale.unit = FALSE)\n```\n\n::: {.cell-output-display}\n![](variables_latentes_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: ggrepel: 18 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](variables_latentes_files/figure-html/unnamed-chunk-10-2.png){width=672}\n:::\n\n```{.r .cell-code}\nfviz_screeplot(pca_res)\n```\n\n::: {.cell-output-display}\n![](variables_latentes_files/figure-html/unnamed-chunk-10-3.png){width=672}\n:::\n\n```{.r .cell-code}\nfviz_pca_var(pca_res)\n```\n\n::: {.cell-output-display}\n![](variables_latentes_files/figure-html/unnamed-chunk-10-4.png){width=672}\n:::\n\n```{.r .cell-code}\nfviz_pca_var(pca_res, axes = c(2,3))\n```\n\n::: {.cell-output-display}\n![](variables_latentes_files/figure-html/unnamed-chunk-10-5.png){width=672}\n:::\n\n```{.r .cell-code}\nround(pca_res$var$cos2,2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Dim.1 Dim.2 Dim.3 Dim.4 Dim.5\nLi  0.00  0.79  0.03  0.02  0.00\nB   0.11  0.80  0.04  0.02  0.00\nAl  0.08  0.00  0.01  0.03  0.01\nV   0.00  0.01  0.03  0.00  0.03\nCr  0.04  0.02  0.00  0.03  0.08\nMn  0.51  0.00  0.05  0.00  0.05\nFe  0.46  0.11  0.14  0.00  0.02\nCo  0.38  0.14  0.09  0.06  0.10\nNi  0.00  0.06  0.05  0.01  0.00\nCu  0.31  0.10  0.08  0.00  0.01\nZn  0.78  0.06  0.00  0.01  0.00\nAs  0.35  0.01  0.28  0.12  0.17\nSe  0.77  0.05  0.14  0.00  0.01\nRb  0.77  0.00  0.05  0.04  0.03\nSr  0.01  0.14  0.02  0.08  0.13\nNb  0.06  0.00  0.00  0.54  0.28\nMo  0.04  0.02  0.04  0.22  0.02\nCd  0.33  0.03  0.36  0.01  0.00\nCs  0.65  0.01  0.14  0.00  0.00\nTa  0.15  0.01  0.00  0.51  0.24\n```\n\n\n:::\n:::\n\n\n\n## ACP mixOmics\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npca.saumon = pca(saumon_norm[, -1], scale = FALSE, ncomp = 10, center = TRUE)\nplotIndiv(pca.saumon, group = saumon_norm$pays, ind.names = FALSE,  legend = TRUE, \n          title = 'Saumons par Pays - ACP',\n          size.title = rel(1))\n```\n\n::: {.cell-output-display}\n![](variables_latentes_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n## S√©paration du jeu de donn√©es en jeu d‚Äôentra√Ænement et jeu test\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nintrain <- createDataPartition(saumon_norm$pays, p=0.8, list=FALSE)\n#save(intrain,file=\"intrain.Rdata\") # enregistrer intrain pour la reprod \nload(file = here(\"data\", \"intrain.Rdata\"))# t√©lecharger le fichier\n\nX.app <- saumon_norm[intrain, -1]\nY.app <- saumon_norm[intrain, 1]\nX.test <- saumon_norm[-intrain, -1]\nY.test <- saumon_norm[-intrain, 1]\n```\n:::\n\n\n\n# Analyse Discriminante par les Moindres Carr√©s Partiels (PLS-DA)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplsda.saumon <- mixOmics::plsda(X.app, Y.app, ncomp=10, scale = FALSE) #scale FALSE par defaut true\nplotVar(plsda.saumon, comp = 1:2) # permet de voir les variables sur un graphique\n```\n\n::: {.cell-output-display}\n![](variables_latentes_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplotIndiv(plsda.saumon, comp = 1:2, centroid = TRUE, ellipse = TRUE, legend = TRUE,\n          title = \"Projection d'√©chantillons PLSDA \")\n```\n\n::: {.cell-output-display}\n![](variables_latentes_files/figure-html/unnamed-chunk-13-2.png){width=672}\n:::\n\n```{.r .cell-code}\nplsda.saumon\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\n mixOmics::plsda(X = X.app, Y = Y.app, ncomp = 10, scale = FALSE) \n\n PLS-DA (regression mode) with 10 PLS-DA components. \n You entered data X of dimensions: 418 20 \n You entered data Y with 5 classes. \n\n No variable selection. \n\n Main numerical outputs: \n -------------------- \n loading vectors: see object$loadings \n variates: see object$variates \n variable names: see object$names \n\n Functions to visualise samples: \n -------------------- \n plotIndiv, plotArrow, cim \n\n Functions to visualise variables: \n -------------------- \n plotVar, plotLoadings, network, cim \n\n Other functions: \n -------------------- \n auc \n```\n\n\n:::\n:::\n\n\n\n# Choix de composantes\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(2024) # pour la reproductibit√© \nperf.saumon <- perf(plsda.saumon, validation = \"Mfold\", folds = 10,\n                  progressBar = FALSE, auc = TRUE, nrepeat = 10)\n```\n:::\n\n\n\nMontre le nombre de composantes pour predire, avec plusieur options (max.dist, centroids) et la mahalanobis\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(perf.saumon, col = color.mixo(5:7), sd = TRUE, legend.position = \"horizontal\")\n```\n\n::: {.cell-output-display}\n![](variables_latentes_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n\n```{.r .cell-code}\nperf.saumon$choice.ncomp\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        max.dist centroids.dist mahalanobis.dist\noverall        8              7                8\nBER            8              7                8\n```\n\n\n:::\n\n```{.r .cell-code}\nperf.saumon$error.rate # montre le nombre d'erreur pour chaque regle\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$overall\n         max.dist centroids.dist mahalanobis.dist\ncomp1  0.51674641      0.5315789       0.53157895\ncomp2  0.25526316      0.2122010       0.23229665\ncomp3  0.17559809      0.2011962       0.16411483\ncomp4  0.08995215      0.1528708       0.10119617\ncomp5  0.06626794      0.1339713       0.07200957\ncomp6  0.05813397      0.1236842       0.05071770\ncomp7  0.05622010      0.1188995       0.04354067\ncomp8  0.05430622      0.1191388       0.04545455\ncomp9  0.05311005      0.1177033       0.04473684\ncomp10 0.05191388      0.1167464       0.04114833\n\n$BER\n         max.dist centroids.dist mahalanobis.dist\ncomp1  0.61827074     0.46266901       0.46266901\ncomp2  0.33672496     0.18519078       0.20225882\ncomp3  0.25827874     0.15505755       0.12294782\ncomp4  0.09944416     0.11729272       0.08943790\ncomp5  0.08380595     0.10433444       0.06480790\ncomp6  0.07491183     0.09952109       0.05101839\ncomp7  0.07218904     0.09592463       0.04769309\ncomp8  0.06792527     0.09740361       0.04642086\ncomp9  0.06587086     0.09610791       0.04531562\ncomp10 0.06588942     0.09584617       0.04467631\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnb_compo = 4 # nombre de composontes d√©finit\nvip.saumon <- vip(plsda.saumon)[, nb_compo] \nbarplot(vip.saumon, xlab = colnames(X.app), las=2, main = \"Variable Importance in the Projection\")\n```\n\n::: {.cell-output-display}\n![](variables_latentes_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbarplot(vip.saumon, \n        las = 2,   # Orientations verticales des noms de variables\n        main = \"Variable Importance in the Projection\",\n        col = ifelse(vip.saumon > 1, \"red\", \"grey\"), # Variables importantes en rouge\n        ylim = c(0, max(vip.saumon) * 1.1)) \n# Ajout d'une ligne de r√©f√©rence\nabline(h=1, col=\"blue\") \n```\n\n::: {.cell-output-display}\n![](variables_latentes_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n\n```{.r .cell-code}\nauc.saumon = auroc(plsda.saumon, roc.comp = nb_compo)\n```\n\n::: {.cell-output-display}\n![](variables_latentes_files/figure-html/unnamed-chunk-17-2.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$Comp1\n                         AUC   p-value\nAlaskan vs Other(s)   0.5670 6.221e-02\nIceland-F vs Other(s) 0.7249 1.048e-06\nIceland-W vs Other(s) 0.9898 0.000e+00\nNorway vs Other(s)    0.7784 9.326e-15\nScotland vs Other(s)  0.7599 0.000e+00\n\n$Comp2\n                         AUC   p-value\nAlaskan vs Other(s)   0.9832 0.000e+00\nIceland-F vs Other(s) 0.7267 8.563e-07\nIceland-W vs Other(s) 0.9971 0.000e+00\nNorway vs Other(s)    0.9724 0.000e+00\nScotland vs Other(s)  0.7599 0.000e+00\n\n$Comp3\n                         AUC p-value\nAlaskan vs Other(s)   0.9998       0\nIceland-F vs Other(s) 0.9376       0\nIceland-W vs Other(s) 0.9995       0\nNorway vs Other(s)    0.9651       0\nScotland vs Other(s)  0.8876       0\n\n$Comp4\n                         AUC p-value\nAlaskan vs Other(s)   0.9998       0\nIceland-F vs Other(s) 0.9624       0\nIceland-W vs Other(s) 0.9995       0\nNorway vs Other(s)    0.9746       0\nScotland vs Other(s)  0.9529       0\n\n$Comp5\n                         AUC p-value\nAlaskan vs Other(s)   0.9999       0\nIceland-F vs Other(s) 0.9650       0\nIceland-W vs Other(s) 0.9994       0\nNorway vs Other(s)    0.9848       0\nScotland vs Other(s)  0.9766       0\n\n$Comp6\n                         AUC p-value\nAlaskan vs Other(s)   0.9998       0\nIceland-F vs Other(s) 0.9564       0\nIceland-W vs Other(s) 0.9996       0\nNorway vs Other(s)    0.9893       0\nScotland vs Other(s)  0.9791       0\n\n$Comp7\n                         AUC p-value\nAlaskan vs Other(s)   0.9999       0\nIceland-F vs Other(s) 0.9606       0\nIceland-W vs Other(s) 0.9998       0\nNorway vs Other(s)    0.9893       0\nScotland vs Other(s)  0.9771       0\n\n$Comp8\n                         AUC p-value\nAlaskan vs Other(s)   1.0000       0\nIceland-F vs Other(s) 0.9710       0\nIceland-W vs Other(s) 0.9997       0\nNorway vs Other(s)    0.9896       0\nScotland vs Other(s)  0.9769       0\n\n$Comp9\n                         AUC p-value\nAlaskan vs Other(s)   0.9999       0\nIceland-F vs Other(s) 0.9710       0\nIceland-W vs Other(s) 0.9998       0\nNorway vs Other(s)    0.9915       0\nScotland vs Other(s)  0.9799       0\n\n$Comp10\n                         AUC p-value\nAlaskan vs Other(s)   0.9999       0\nIceland-F vs Other(s) 0.9693       0\nIceland-W vs Other(s) 0.9998       0\nNorway vs Other(s)    0.9921       0\nScotland vs Other(s)  0.9834       0\n```\n\n\n:::\n:::\n\n\n\n# Taux d'erreur sur la base test\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplsda.fin.saumon <- plsda(X.app, Y.app, ncomp = nb_compo, scale = FALSE)\nplsda.test <- predict(plsda.fin.saumon, dist=\"mahalanobis.dist\", newdata= X.test)\nplsda.test.fin <- plsda.test$class$mahalanobis.dist[,nb_compo]\n```\n:::\n\n\n\n# Matrice de confusion\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmat.confusion <- table(Y.test, plsda.test.fin)\nmat.confusion\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           plsda.test.fin\nY.test      Alaskan Iceland-F Iceland-W Norway Scotland\n  Alaskan        19         0         0      0        0\n  Iceland-F       0        10         0      1        0\n  Iceland-W       0         0        18      0        0\n  Norway          1         3         0     15        1\n  Scotland        0         1         0      2       32\n```\n\n\n:::\n\n```{.r .cell-code}\nsum(diag(mat.confusion))/sum(mat.confusion) # calcul de l'exactitude du mod√©le \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.9126214\n```\n\n\n:::\n\n```{.r .cell-code}\n1-sum(diag(mat.confusion))/sum(mat.confusion)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.08737864\n```\n\n\n:::\n:::\n\n\n\n# M√©trique recall et precision\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprecision <- diag(mat.confusion) / colSums(mat.confusion)  #  pour la pr√©cision\nrecall <- diag(mat.confusion) / rowSums(mat.confusion)  #  pour le rappel\nprint(precision)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Alaskan Iceland-F Iceland-W    Norway  Scotland \n0.9500000 0.7142857 1.0000000 0.8333333 0.9696970 \n```\n\n\n:::\n\n```{.r .cell-code}\nprint(recall)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Alaskan Iceland-F Iceland-W    Norway  Scotland \n1.0000000 0.9090909 1.0000000 0.7500000 0.9142857 \n```\n\n\n:::\n:::\n\n\n\n# Calcul du score F1 pour chaque classe\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nf1_score <- 2 * (precision * recall) / (precision + recall)\nprint(f1_score)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Alaskan Iceland-F Iceland-W    Norway  Scotland \n0.9743590 0.8000000 1.0000000 0.7894737 0.9411765 \n```\n\n\n:::\n:::\n\n\n\nPour connaitre les √©l√©ments importants pour chaque composant\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchargements <- loadings(plsda.fin.saumon)\nchargements\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$X\n          comp1         comp2        comp3       comp4\nLi  0.008964501 -0.4588862072  0.150378615 -0.33668167\nB  -0.256269451 -0.6818269920  0.441188848  0.23963969\nAl  0.080764726  0.0299523940  0.042070663 -0.02750608\nV  -0.034764210 -0.0009046813 -0.130204390  0.02008908\nCr  0.071070471 -0.0377640641  0.007907627  0.05022188\nMn  0.173648921  0.0211225704  0.203676706 -0.16191590\nFe  0.210951974 -0.1552414077 -0.149491265  0.10381226\nCo  0.135816558  0.3166949106  0.421057444  0.31905502\nNi  0.001320836 -0.0894152396 -0.050928120  0.03594458\nCu  0.102988297 -0.1106426865 -0.041157067  0.07681745\nZn  0.370964836 -0.1965595383  0.068665442 -0.07755414\nAs  0.169533209  0.0785343194  0.269274690 -0.53190235\nSe  0.579540293 -0.2826197067 -0.289639291  0.12929686\nRb  0.358413233  0.0784967995  0.388969234  0.19916232\nSr  0.032219788 -0.0537203639 -0.034722406 -0.33146513\nNb  0.045883129  0.0406332068  0.062762789  0.25249882\nMo -0.010332293 -0.0264612505  0.192279840  0.16275678\nCd  0.268539116 -0.1202022379 -0.309500802  0.13914753\nCs  0.321533399  0.1526348143  0.254711082 -0.21502098\nTa  0.091232764  0.0575383770  0.057858566  0.26177170\n\n$Y\n                comp1        comp2      comp3      comp4\nAlaskan    0.02247218 -0.806396974 -0.5151578 -0.1617632\nIceland-F  0.12867531  0.001277555  0.4809542 -0.5222550\nIceland-W  0.74984154  0.274862117 -0.3076689  0.2892834\nNorway    -0.36451565  0.523572748 -0.2475114 -0.3220023\nScotland  -0.53647337  0.006684554  0.5893840  0.7167371\n```\n\n\n:::\n\n```{.r .cell-code}\npar(mfrow=c(2,2)) # Configure l'affichage en grille 2x2\n\nfor(i in 1:4) {\n  barplot(chargements$X[, paste(\"comp\", i, sep=\"\")], \n          main = paste(\"Composant\", i), \n          las = 2, cex.names = 0.5, \n          col = rainbow(4)[i])\n}\n```\n\n::: {.cell-output-display}\n![](variables_latentes_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "variables_latentes_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}