---
title: "√âconom√©trie lin√©aire avanc√©e"
author: 
  - "J. DUPAU"
  - "V. Trillaud"
  - "Isabel PALACIO"
date: "2024-01"
editor: visual
categories: [R√©gression, MCO, Questionnaire]
image: "ecrans-francÃßais.jpg"
---

**Analyse du temps d‚ÄôeÃÅcran chez les francÃßais de plus de 18 ans**

(sur un eÃÅchantillon de 98 personnes en 2023)

**R√©sum√©**

L‚Äôobjectif de notre √©tude est d‚Äôidentifier les facteurs influen√ßant la consommation num√©rique hebdomadaire chez les adultes Fran√ßais, √† partir de 18 ans, √† l‚Äô√©chelle nationale. Nous avons fait appel √† la m√©thode des moindres carr√©s (MCO) qui nous a permis d‚Äôobtenir un mod√®le fiable validant toutes les conditions requises pour son application. Pour ce faire, nous avons opt√© pour l‚Äôutilisation d‚Äôun jeu de donn√©es se rapprochant le plus possible de la r√©alit√©. Par cons√©quent, nous avons directement interrog√© la population √† l‚Äôaide d‚Äôun questionnaire se basant sur la mod√©lisation faite au pr√©alable √† partir de la litt√©rature. Nous avons obtenu un √©chantillon non repr√©sentatif de 98 individus d√ª √† un ratio femmes/hommes √©lev√©.

Le mod√®le nous a donn√© d‚Äôune part des r√©sultats attendus. En effet, les personnes ayant une vie sociale importante ou ne travaillant pas toute la journ√©e sur un √©cran ont une consommation num√©rique hebdomadaire moindre par rapport aux casaniers et √† ceux exer√ßant un m√©tier pour lequel l‚Äô√©cran est le seul outil de travail. Puis, d‚Äôautre part, des r√©sultats inattendus. En effet, une personne poss√©dant un nombre d‚Äôappareils moindre a une consommation plus importante que celle ayant plus d‚Äôappareils, ou encore les personnes n‚Äôayant pas la fibre passent plus de temps sur les √©crans que ceux ayant la fibre.

::: {style="text-align: center;"}
<iframe src="/pdf/econometrie.pdf" width="80%" height="500px">

</iframe>
:::

Vous avez la possibilit√© de t√©l√©charger le document ici :) [üì• T√©l√©charger le fichier PDF](/pdf/Tutorial.pdf)

**Pr√©sentation du code**

Je vous pr√©sente ci-dessous, le code utilis√© pour mener √† bien ce projet, avec les √©tapes et explications correspondantes.

## Pr√©paration des donn√©es

-   Librairies

```{r}

suppressPackageStartupMessages({
library(readxl)
library(writexl)
library(outliers)
library(dplyr)
library(VIM)
library(car)
library(MASS)
library(ggplot2)
library(EnvStats)
library(pander)
library(corrplot)
library(PerformanceAnalytics)
library(tidyverse)
library(questionr)
library(leaps)
library(stats)
library(lmtest)
library(AER)
library(here)
})  
```

-   Vecteur de couleur

```{r}
couleurs_genre <- c("#9DBBA4", "#395948")
couleurs <- c("#9DBBA4", "#395948")


```

# Pr√©paration et visualisation des donn√©es

-   T√©l√©chargement et visualisation du fichier, √† l'aide de la librairie "readxl"
-   Supprimer la colonne "horodateur" qui est inutile

```{r}

ecran <- read_excel(here("data", "BDD_propre.xlsx"))


head(ecran)


ecran <- ecran[,-1]
```

### Renommer les colonnes

```{r}
colnames(ecran) <- c("age", "genre", "csp", "lieu_de_vie", "nb_personnes", "revenu", "temps_ecran", "nb_appareils", "internet", "fibre", "forfait_tel", "telephone_pro", "ecran_travail", "sommeil", "stress", "loisir", "vie_sociale", "ecran_jour", "reseaux_sociaux", "nb_abonnements")


```

### Mettre en num√©rique les variables

```{r}
str(ecran)
ecran$loisir <- as.numeric(ecran$loisir)
ecran$vie_sociale <- as.numeric(ecran$vie_sociale)
str(ecran)
summary(ecran)
```

### Mettre en facteurs les variables

```{r}
ecran$age <- as.factor(ecran$age)
ecran$genre <- as.factor(ecran$genre)
ecran$csp <- as.factor(ecran$csp)
ecran$lieu_de_vie <- as.factor(ecran$lieu_de_vie)
ecran$revenu <- as.factor(ecran$revenu)
ecran$nb_appareils <- as.factor(ecran$nb_appareils)
ecran$internet <- as.factor(ecran$internet)
ecran$fibre <- as.factor(ecran$fibre)
ecran$forfait_tel <- as.factor(ecran$forfait_tel)
ecran$telephone_pro <- as.factor(ecran$telephone_pro)
ecran$ecran_travail <- as.factor(ecran$ecran_travail)
ecran$sommeil <- as.factor(ecran$sommeil)
ecran$stress <- as.factor(ecran$stress)
ecran$ecran_jour <- as.factor(ecran$ecran_jour)
ecran$reseaux_sociaux <- as.factor(ecran$reseaux_sociaux)
ecran$nb_abonnements <- as.factor(ecran$nb_abonnements)

```

R√©sum√© des toutes les variables

```{r}
str(ecran)
summary(ecran)
```

### Valeurs manquantes - visualisation

```{r}
sum(is.na(ecran))

lapply(ecran, function(x) which(is.na(x)))
```

Nous avons au total 41 valeurs manquantes

R√©sum√© des variables num√©riques

```{r}

summary(select_if(ecran, is.numeric))
sapply(select_if(ecran, is.numeric), sd)
```

### Imputation des valeurs manquantes

L'algorithme des k-plus proches voisins utilisera le voisin le plus proche pour l'imputation

```{r}
ecran <- kNN(ecran, dist_var = colnames(ecran), k = 1)
ecran <- ecran[, -c(21:40)]
```

### Exportation de la base de donn√©es sous format excel

```{r}
# write_xlsx(x = ecran, path = "data/BDD_sans_NA.xlsx")
```

**Utilisation de cette nouvelle base pour la suite du travail**

```{r}

ecran <- read_excel(here("data", "BDD_sans_NA.xlsx"), col_names = T )

```

```{r}
colnames(ecran) <- c("age", "genre", "csp", "lieu_de_vie", "nb_personnes", "revenu", "temps_ecran", "nb_appareils", "internet", "fibre", "forfait_tel", "telephone_pro", "ecran_travail", "sommeil", "stress", "loisir", "vie_sociale", "ecran_jour", "reseaux_sociaux", "nb_abonnements")
```

## Mettre en facteurs les variables

```{r}
str(ecran)
ecran$age <- as.factor(ecran$age)
ecran$genre <- as.factor(ecran$genre)
ecran$csp <- as.factor(ecran$csp)
ecran$lieu_de_vie <- as.factor(ecran$lieu_de_vie)
ecran$revenu <- as.factor(ecran$revenu)
ecran$nb_appareils <- as.factor(ecran$nb_appareils)
ecran$internet <- as.factor(ecran$internet)
ecran$fibre <- as.factor(ecran$fibre)
ecran$forfait_tel <- as.factor(ecran$forfait_tel)
ecran$telephone_pro <- as.factor(ecran$telephone_pro)
ecran$ecran_travail <- as.factor(ecran$ecran_travail)
ecran$sommeil <- as.factor(ecran$sommeil)
ecran$stress <- as.factor(ecran$stress)
ecran$ecran_jour <- as.factor(ecran$ecran_jour)
ecran$reseaux_sociaux <- as.factor(ecran$reseaux_sociaux)
ecran$nb_abonnements <- as.factor(ecran$nb_abonnements)
str(ecran)
```

# Statistiques descriptives

### Analyse univari√©e des variables qualitatives

#### Tableaux de contingence

```{r}
table(ecran$genre,ecran$age)
table(ecran$csp)
table(ecran$csp, ecran$revenu)
table(ecran$revenu)
```

#### Diagrammes en b√¢tons

```{r}
ecran |>
  ggplot() +
  aes(x = age, fill = age) +
  geom_bar(fill = "#395948") +
  ggtitle("R√©partition de l'√¢ge") +
  labs(x = "√¢ge", y="effectif") +
  theme_classic() +
  theme(plot.title = element_text(hjust = 0.5, size = 12))
  

```

```{r}

ecran |>
  count(genre) |>
  ggplot() +
  aes(x = "", y = n, fill = genre) +
  geom_bar(stat = "identity", color="white") +
  ggtitle("") +
  theme(plot.title = element_text(hjust = 0.5, size = 12))+
  coord_polar("y") +
  scale_fill_manual(values = couleurs_genre) +
  theme_void() +
  theme(plot.title = element_text(hjust = 0.5, size = 12))+
  geom_text(aes(label = n), position = position_stack(vjust = 0.5), color = "white",size = 5, fontface = "bold")

```

```{r}
ecran |>
  ggplot() +
  geom_bar(fill = "#395948") +
  ggtitle("R√©partition des lieux de r√©sidence") +
  aes(x = fct_infreq(lieu_de_vie), fill = lieu_de_vie) +
  labs(x = "lieux de r√©sidence",y="effectif") +
  theme_classic() +
  theme(plot.title = element_text(hjust = 0.5, size = 12)) 


```

Nous utilisons 'levels' pour renommer nos variables afin d'am√©liorer la visualisation. Cependant, il est important de noter que cela modifie √©galement les noms dans la base de donn√©es

```{r}

#levels(ecran$csp) <- c("agriculteurs","artisans","sans activit√©", "cadres","employ√©s","ouvriers", "interm√©diaire","retrait√©s")
ecran |>
  ggplot() +
  aes(x =fct_infreq(csp), fill = csp) +
  geom_bar(fill = "blue4") +
  ggtitle("R√©partition de la cat√©gorie socio-professionnelle") +
  labs(x = "csp", y="effectif") +
  theme_classic() +
  theme(plot.title = element_text(hjust = 0.5, size = 12), 
        axis.text.x = element_text(angle = 45, hjust = 1))

```

```{r}
ecran |>
  ggplot() +
  geom_bar(fill = "blue4") +
  ggtitle("R√©partition du revenu") +
  aes(x = fct_infreq(revenu), fill = revenu) +
  labs(x = "Revenu", y="effectif") +
  theme_classic() + 
  theme(plot.title = element_text(hjust = 0.5, size = 12),
         axis.text.x = element_text(angle = 45, hjust = 1)) 

```

```{r}
#levels(ecran$internet) <- c("Non","ADSL","Fibre", "Autre solution")
ecran |>
  ggplot(aes(x = internet, fill = internet)) +
  geom_bar(fill = "#395948") +
  ggtitle("R√©partition des moyens de connexion") +
  aes(x = fct_infreq(internet), fill = internet) +
  labs(x = "internet", y="effectif") +
  theme_classic() +
  theme(plot.title = element_text(hjust = 0.5, size = 12))

```

```{r}
ecran |>
  ggplot(aes(x = fct_infreq(nb_appareils), fill = nb_appareils)) +
  geom_bar(fill = "blue4") +
  ggtitle("R√©partition du nombre d'appareils") +
  labs(x = "appareils", y="effectif") +
  theme_classic() +
  theme(plot.title = element_text(hjust = 0.5, size = 12)) 
```

```{r}

ecran |>
  count(fibre) |>
  ggplot() +
  aes(x = "", y = n, fill = fibre) +
  geom_bar(stat = "identity", color = "white") +
  ggtitle("R√©partition de l'acc√®s √† la fibre") +
  coord_polar("y") +
  scale_fill_manual(values = couleurs) +
  theme_void() +
  theme(plot.title = element_text(hjust = 0.5, size = 12))+
  geom_text(aes(label = n), position = position_stack(vjust = 0.5), color = "white",size = 5, fontface = "bold")
```

```{r}
ecran |>
  ggplot(aes(x = fct_infreq(forfait_tel), fill = forfait_tel)) +
  geom_bar(fill = "blue4") +
  ggtitle("R√©partition des forfaits t√©l√©phoniques") +
  labs(x = "forfait", y="effectif")+
  theme_classic() +
  theme(plot.title = element_text(hjust = 0.5, size = 12),
         axis.text.x = element_text(angle = 45, hjust = 1)) 


```

```{r}

ecran |>
  count(telephone_pro) |>
  ggplot() +
  aes(x = "", y = n, fill = telephone_pro) +
  geom_bar(stat = "identity", color = "white") +
  ggtitle("R√©partition de la possession d'un t√©l√©phone professionnel") +
  coord_polar("y") +
  scale_fill_manual(values = couleurs) +
  theme_void() +
  theme(plot.title = element_text(hjust = 0.5, size = 12))+
   geom_text(aes(label = n), position = position_stack(vjust = 0.5), color = "white",size = 5, fontface = "bold") 
  

```

```{r}
#levels(ecran$ecran_travail) <- c("Fr√©quemment", "Jamais", "Parfois", "Rarement", "Toute la journ√©e")

ecran |>
  ggplot(aes(x = fct_infreq(ecran_travail), fill = ecran_travail)) +
  geom_bar(fill = "blue4") +
  ggtitle("R√©partition de la consommation num√©rique au travail") +
  labs(x="fr√©quence",y="effectif")+
  theme_classic() +
  theme(plot.title = element_text(hjust = 0.5, size = 12))
  

```

```{r}
ecran |>
  ggplot(aes(x = fct_infreq(sommeil), fill = sommeil)) +
  geom_bar(fill = "blue4") +
  ggtitle("R√©partition du temps de sommeil") +
  labs(x="dur√©e",y="effectif")+
  theme_classic()+
  theme(plot.title = element_text(hjust = 0.5, size = 12))
```

```{r}
ecran |>
  ggplot(aes(x = fct_infreq(stress), fill = stress)) +
  geom_bar(fill = "blue4") +
  labs(x="fr√©quence", y="effectif")+
  ggtitle("R√©partition du stress") +
  theme_classic()+
  theme(plot.title = element_text(hjust = 0.5, size = 12))
```

```{r}
ecran |>
  ggplot(aes(x = fct_infreq(ecran_jour), fill = ecran_jour)) +
  geom_bar(fill = "blue4") +
  ggtitle("R√©partition du moment de la journ√©e") +
  labs(x="fr√©quence", y="effectif")+
  theme_classic() +
  theme(plot.title = element_text(hjust = 0.5, size = 12),
          axis.text.x = element_text(angle = 45, hjust = 1))
```

```{r}
ecran |>
  ggplot(aes(x = fct_infreq(reseaux_sociaux), fill = reseaux_sociaux)) +
  geom_bar(fill = "blue4") +
  ggtitle("R√©partition des r√©seaux sociaux") +
  labs(x="quantit√©",y="effectif")+
  theme_classic()+
  theme(plot.title = element_text(hjust = 0.5, size = 12))
  
```

```{r}
ecran |>
  ggplot(aes(x = fct_infreq(nb_abonnements), fill = nb_abonnements)) +
  geom_bar(fill = "blue4") +
  ggtitle("R√©partition des abonnements") +
  labs(x="quantit√©", y="effectif")+
  theme_classic() +
  theme(plot.title = element_text(hjust = 0.5, size = 12))
```

### Analyse bivari√©e des variables qualitatives

```{r}
ecran|>
pivot_longer(
cols = temps_ecran,
names_to = "mesure",
values_to = "valeur"
) |>
ggplot() +
aes(y = valeur, x = age, color = age) +
geom_boxplot() +
geom_jitter(alpha = 0.3) +
#scale_color_manual(values = vecteur_couleur)
facet_wrap(~ mesure, scales = "free_y") +
theme_bw()

ecran|>
pivot_longer(
cols = temps_ecran,
names_to = "mesure",
values_to = "valeur"
) |>
ggplot() +
aes(y = valeur, x = csp, color=csp) +
geom_boxplot() +
geom_jitter(alpha = 0.3) +
#scale_color_manual(values = vecteur_couleur)
facet_wrap(~ mesure, scales = "free_y") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))

ecran|>
pivot_longer(
cols = temps_ecran,
names_to = "mesure",
values_to = "valeur"
) |>
ggplot() +
aes(y = valeur, x = ecran_jour, color=ecran_jour) +
geom_boxplot() +
geom_jitter(alpha = 0.3) +
#scale_color_manual(values = vecteur_couleur)
facet_wrap(~ mesure, scales = "free_y") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))


ggplot(ecran) +
    geom_boxplot(aes(x = csp, y = temps_ecran))

```

### Analyse univari√©e des variables quantitatives

```{r}
str(ecran)
summary(select_if(ecran, is.numeric))
```

#### Histogrammes

```{r}
hist(ecran$nb_personnes, main= "R√©partition du nombre de personnes dans le foyer", xlab="personnes", ylab = "nombre d'individus", col = "#395948")

hist(ecran$temps_ecran, main= "R√©partition du temps d'√©crans", xlab="dur√©e",ylab = "nombre d'individus", col = "#395948")

hist(ecran$loisir, main= "R√©partition du temps consacr√© aux loisirs", xlab="dur√©e", ylab = "nombre d'individus", col = "#395948")

hist(ecran$vie_sociale, main= "R√©partition du temps consacr√© √† la vie sociale", xlab="dur√©e",ylab = "nombre d'individus", col = "#395948")
```

#### Boxplots

```{r}
ecran|>
pivot_longer(
cols = where(is.numeric)
) |>
ggplot() +
aes(y = value) +
facet_wrap(~ name, scales = "free_y") +
geom_boxplot() +
theme_light()
```

### Valeurs atypiques - Test Rosner

```{r}
rosnerTest(ecran$temps_ecran,k=2, alpha=0.05)
rosnerTest(ecran$loisir,k=2, alpha=0.05)
rosnerTest(ecran$vie_sociale,k=5, alpha=0.05)
```

D'apres le test de Rosner nous avons 2 valeurs atypiques dans la variable "loisir" et 1 valeur atypique dans la variable "vie_sociale". Les observations 80, 61 et 34 sont donc des valeurs atypiques

#### Supprimer les valeurs atypiques

```{r}
ecran <- ecran[-c(9, 61, 34),]
dim(ecran)
```

# Statistiques descriptives sans les valeurs atypiques

## Analyse univari√©e des variables quantitatives

```{r}
str(ecran)
summary(ecran)
summary(select_if(ecran, is.numeric))
```

### Histogrammes

```{r}
par(mfrow = c(2,2))
hist(ecran$nb_personnes, main= "R√©partition du nombre de personnes dans le foyer", xlab="personnes",ylab = "nombre d'individus", col = "blue4")
hist(ecran$temps_ecran, main= "R√©partition du temps d'√©crans", xlab="dur√©e", ylab = "nombre d'individus", col = "blue4")
hist(ecran$loisir, main= "R√©partition du temps consacr√© aux loisirs", xlab="dur√©e", ylab = "nombre d'individus", col = "blue4")
hist(ecran$vie_sociale, main= "R√©partition du temps consacr√© √† la vie sociale", xlab="dur√©e",ylab = "nombre d'individus", col = "blue4")
```

## Analyse bivari√©e des variables quantitatives

Nous observons √† l'aide de nuages de points le lien entre "temps_ecran" (y) et les variables explicatives

```{r}
par(mfrow = c(2,2))
purrr::map2(
.x = c("nb_personnes", "loisir", "vie_sociale"),
.y = c("temps_ecran", "temps_ecran", "temps_ecran"),
.f = ~ ggplot(ecran) +
aes(x = get(.x), y = get(.y)) +
geom_point() +
labs(x = .x, y = .y) +
ggtitle(paste("Corr√©lation entre", .x, "et", .y)) +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5, size = 12, face="bold"))
)

```

### Correlation

Sous forme de matrice :

```{r}
mydata <- ecran[,c("nb_personnes","temps_ecran","loisir","vie_sociale")]
corr_mat=cor(mydata,method="s")
corr_mat
corrplot(corr_mat, method = 'number',type="upper", tl.srt=45)
corrplot(corr_mat,type="upper")

```

Nous pouvons voir que la corr√©lation est tr√®s faible entre chaque variable explicative.De plus, la variable √† expliquer a une corr√©lation n√©gative avec les variables "loisir" et "vie_sociale" et positive avec la variable "nb_personnes".

-   Test de normalit√© des variables numeriques :

```{r}
ks.test(ecran$nb_personnes,"pnorm",mean(ecran$nb_personnes),sd(ecran$nb_personnes))
ks.test(ecran$loisir,"pnorm",mean(ecran$loisir),sd(ecran$loisir))
ks.test(ecran$vie_sociale,"pnorm",mean(ecran$vie_sociale),sd(ecran$vie_sociale))
```

Les variables ne suivent pas la loi normale , on va donc utiliser le coefficient de Spearman

Sous forme de tableau :

```{r}
cor(ecran[,c("nb_personnes","temps_ecran","loisir","vie_sociale")],
    use="complete.obs",method = c("spearman"))
```

Pour avoir un aper√ßu visuel, nous utilisons une matrice de corr√©lation compl√©t√©e par les nuages de points et les histogrammes.

```{r}
#chart.Correlation(mydata, histogram=TRUE, pch=19,method = c("spearman"))
```

-   Conclusion : Pas de corr√©lation entre ces variables explicatives donc nous allons les conserver.

# Cat√©gories

Pour avoir un nombre de variables correctes et pas d√©mesur√©s ; Cr√©ation ecran2

```{r}
ecran2 <- ecran
summary(ecran2)
```

## Regrouper en cat√©gories plus larges et cr√©ation de cat√©gories binaires

### **Variables quali en binaire**

-   R√©seaux sociaux

```{r}
summary(ecran2$reseaux_sociaux)
ecran2 <- ecran2 |> 
  mutate(cat_reseau_0_2 = ifelse(reseaux_sociaux %in% c("0","1","2"), 1, 0),
         cat_reseau_3_5 = ifelse(reseaux_sociaux %in% c("3","4","5"), 1, 0),
         cat_reseau_6_sup6 = ifelse(reseaux_sociaux %in% c("6","7","8","9","Plus de 10"), 1, 0))

```

-   Age

```{r}
ecran2 <- ecran2 |> 
  mutate(cat_18_24 = ifelse(age == "18 - 24 ans", 1, 0),
         cat_25_49 = ifelse(age == "25 - 49 ans", 1, 0),
         cat_plus_50 = ifelse(age %in% c("50- 69 ans","70 ans et plus"), 1, 0))

```

-   Forfait t√©l√©phone

```{r}
summary(ecran2$forfait_tel)
ecran2 <- ecran2 |> 
  mutate(tel_inf_15 = ifelse(forfait_tel %in% c("0", "Moins  de 5 ‚Ç¨","Entre 5 et 10 ‚Ç¨","10 et 15 ‚Ç¨" ), 1, 0),
         tel_15_25 = ifelse(forfait_tel %in% c("15 et 20 ‚Ç¨","20 et 25 ‚Ç¨"), 1, 0),
         tel_sup_25 = ifelse(forfait_tel %in% c("25 et 30 ‚Ç¨","30 et 35 ‚Ç¨","Plus de 35‚Ç¨"), 1, 0))

```

-   Nombre d'appareils

```{r}
summary(ecran2$nb_appareils)
ecran2 <- ecran2 |> 
  mutate(appareils_1_2 = ifelse(nb_appareils %in% c("1", "2"), 1, 0),
         appareils_3_4 = ifelse(nb_appareils %in% c("3", "4"), 1, 0),
         appareils_plus_4 = ifelse(nb_appareils %in% c("5","6","7","8","9","10","Plus de 10"), 1, 0))

```

-   Nombre d'abonnements

```{r}
summary(ecran2$nb_abonnements)
ecran2 <- ecran2 |> 
  mutate(abo_0 = ifelse(nb_abonnements == "0", 1, 0),
         abo_1 = ifelse(nb_abonnements == "1", 1, 0),
         abo_2 = ifelse(nb_abonnements == "2", 1, 0),
         abo_3_sup = ifelse(nb_abonnements %in% c("3","4","5","6","7", "8","9","10","Plus de 10"), 1, 0))

```

-   Genre

```{r}
summary(ecran2$genre)
ecran2 <- ecran2 |> 
  mutate(homme = ifelse(genre == "Homme", 1, 0),
         femme = ifelse(genre == "Femme", 1, 0))

```

-   Lieu de vie

```{r}
summary(ecran2$lieu_de_vie)
ecran2 <- ecran2 |> 
  mutate(pas_ville = ifelse(lieu_de_vie %in% c("Campagne","P√©riurbaine/ Banlieue"), 1, 0),
         ville = ifelse(lieu_de_vie == "Ville", 1, 0))
```

-   CSP

```{r}
summary(ecran2$csp)
ecran2 <- ecran2 |> 
  mutate(cat_Employes = ifelse(csp == "Employ√©s", 1, 0),
         cat_sans_activite = ifelse(csp == "Autres personnes sans activit√© professionnelle (par exemple les ch√¥meurs ou les √©tudiants)", 1, 0),
         cat_cadres = ifelse(csp == "Cadres et professions intellectuelles sup√©rieures", 1, 0),
         cat_autres = ifelse(csp %in% c("Professions interm√©diaires","Retrait√©s", "Ouvriers", "Artisan/commer√ßant/Chef d‚Äôentreprise","Agriculteurs exploitants"), 1, 0))

```

-   Ecran au travail

```{r}
summary(ecran2$ecran_travail)
ecran2 <- ecran2 |> 
  mutate(ecran_travail_plein = ifelse(ecran_travail == "Toute la journ√©e", 1, 0),
         ecran_travail_bcp = ifelse(ecran_travail == "Fr√©quemment (Plus de la moiti√© du temps)", 1, 0),
         ecran_travail_peu = ifelse(ecran_travail %in% c("Parfois (Entre un quart et la moiti√© du temps)","Rarement","Jamais"), 1, 0))

```

-   Internet

```{r}
summary(ecran2$internet)
ecran2 <- ecran2 |> 
  mutate(pas_internet = ifelse(internet == "Non", 1, 0),
         internet_autre = ifelse(internet %in% c("Oui, avec l‚ÄôADSL", "Oui, avec une autre solution"), 1, 0),
         internet_fibre = ifelse(internet == "Oui, avec la fibre", 1, 0))

```

-   Sommeil

```{r}
summary(ecran2$sommeil)
ecran2 <- ecran2 |> 
  mutate(nuit_inf_7 = ifelse(sommeil %in% c("3h ‚Äì 5h", "5h ‚Äì 7h"), 1, 0),
         nuit_5_7 = ifelse(sommeil %in% c("7h et 9h","Plus de 9h"), 1, 0))

```

-   Ecran jour

```{r}
summary(ecran2$ecran_jour)
ecran2 <- ecran2 |> 
  mutate(jour_3 = ifelse(ecran_jour == "Le matin, L‚Äôapr√®s midi, Le soir", 1, 0),
         jour_2 = ifelse(ecran_jour %in% c("L‚Äôapr√®s midi, Le soir", "Le matin, L‚Äôapr√®s midi", "Le matin, Le soir"), 1, 0),
         jour_1 = ifelse(ecran_jour %in% c("L‚Äôapr√®s midi","Le matin","Le soir"), 1, 0))

```

### Variables instruments

-   Revenu

```{r}
summary(ecran2$revenu)
ecran2 <- ecran2 |> 
  mutate(cat_inf_20000 = ifelse(revenu %in% c("< 10 000","10 000 - 20 000"), 1, 0),
         cat_20_40000 = ifelse(revenu %in% c("20 000 - 30 000","30 000 - 40 000"), 1, 0),
         cat_sup_40000 = ifelse(revenu %in% c("40 000 - 50 000","50 000 - 60 000","60 000 - 70 000", "70 000 - 80 000","80 000 et plus"), 1, 0))

```

-   Fibre

```{r}
summary(ecran2$fibre)
ecran2 <- ecran2 |> 
  mutate(fibre_oui = ifelse(fibre == "Oui", 1, 0),
         fibre_non = ifelse(fibre == "Non", 1, 0))

```

-   T√©l√©phone pro

```{r}

summary(ecran2$telephone_pro)
ecran2 <- ecran2 |> 
  mutate(tel_pro_non = ifelse(telephone_pro == "Non", 1, 0),
         tel_pro_oui = ifelse(telephone_pro == "Oui", 1, 0))

```

-   Stress

```{r}
summary(ecran2$stress)
ecran2 <- ecran2 |> 
  mutate(stress_toujours = ifelse(stress == "Toujours", 1, 0),
         stress_bcp = ifelse(stress == "Fr√©quemment", 1, 0),
         stress_peu = ifelse(stress %in% c("Parfois", "Rarement","Jamais"),1, 0))

```

```{r}
summary(ecran2)
str(ecran2)
```

# Cr√©ation 2 base de donn√©es

-   Base sans les instruments et la deuxi√®me avec les instruments. Les deux **avec** la variable de r√©f√©rence

```{r}
ecran_sans_instru <- ecran2[, -c(1,2,3,4,5,6,8,9,10,11,12,13,14,15,18,19,20,56,57,58,59,60,61,62,63,64,65)]
ecran_avec_instru <- ecran2[, -c(1,2,3,4,6,8,9,10,11,12,13,14,15,18,19,20)]

#save(ecran_sans_instru, file = "data/ecran_sans_instru.rda")
#save(ecran_avec_instru, file = "data/ecran_avec_instru.rda")

```

-   Base sans instruments et la deuxi√®me avec les instruments. Les deux **sans** la variable de r√©f√©rence

```{r}
ecran_sans_instru_sansref <- ecran_sans_instru[, -c(5,7,11,14,17,21,23,24,28,33,35,38)]

ecran_avec_instru_sansref <- ecran_avec_instru[, -c(6,8,12,15,18,22,24,25,29,34,36,39,42,43,46,49)]

#save(ecran_sans_instru_sansref, file = "data/ecran_sans_instru_sansref.rda")
#save(ecran_avec_instru_sansref, file = "data/ecran_avec_instru_sansref.rda")

```

# Analyse √©conom√©trique

## R√©cup√©ration de donn√©es

Utilisation de la base de donn√©es √©cran sans les instruments et sans la r√©f√©rence

```{r}
load(here("data", "ecran_sans_instru_sansref.rda"))
ecran <- ecran_sans_instru_sansref
dim(ecran)
```

```{r}
str(ecran)
```

```{r}
ecran[4:26] <- lapply(ecran[4:26], as.factor)
str(ecran)
summary(ecran)
```

# MCO

**Hypoth√®ses sous-jacentes √† la m√©thode des Moindres Carr√©s Ordinaires**

**Mod√®le lin√©aire**

Mod√®le avec toutes les variables, ne sera pas utilis√© dans notre analyse - voir m√©thode STEP

```{r}
modele1 <- lm(temps_ecran ~ loisir + vie_sociale + cat_reseau_0_2 + cat_reseau_6_sup6 + cat_25_49 + cat_plus_50 + tel_inf_15 + tel_sup_25 + appareils_1_2 + appareils_plus_4 + abo_0 + abo_2 + abo_3_sup + homme + pas_ville + cat_sans_activite + cat_cadres + cat_autres + ecran_travail_bcp + ecran_travail_peu + pas_internet + internet_autre + nuit_inf_7 + jour_3 + jour_2, data=ecran)

summary(modele1)
```

R = 38.39% de la variance dans temps_ecran est expliqu√©e par le mod√®le. R- ajust√© : 16,07

P-value associ√©e au test de Fisher \< 0,05 : H0 est refus√©e ==\> 0.040, le mod√®le, dans son ensemble, est statistiquement significatif, mais pas tr√®s fortement.

```{r}
plot(modele1)

```

D‚Äôapr√®s les graphiques, le mod√®le1

-   Ne suivent pas a priori une loi normale

-   Ne v√©rifie pas √† priori l'hypoth√®se d'homosc√©dasticit√© car variance de la variable Mesure augmente √† droite

## Test de normalit√© de r√©sidus

Hypoth√®se H0 : les erreurs suivent une loi normale au seuil de risque de 5 %

```{r}

qqnorm(residuals(modele1))

hist(residuals(modele1), breaks=30, main="Histogramme des R√©sidus", xlab="R√©sidus")

residus<-residuals(modele1) 

shapiro.test(residus)


ks.test(residus, "pnorm", mean = mean(residus), sd = sd(residus))

```

p-value = 0,16 : hypoth√®se de normalit√© des r√©sidus OK au seuil de risque de 5%

## **Test d'homosceÃÅdasticiteÃÅ des reÃÅsidus**

H0 = homoscedasticit√©

```{r}
bptest(modele1)
```

p-value = 0.986 \> 0,05 On ne rejette pas l'hypoth√®se nulle (√† savoir l'homosc√©dasticit√© des r√©sidus)

## Test de la lin√©arit√© de la forme fonctionnelle

```{r}

reset(modele1)
```

p-value = 0.3172

p_value\> 0,05 forme fonctionnelle lineÃÅaire du modeÃÄle speÃÅcifieÃÅ est accepteÃÅe au seuil de 5%

## Analyse des observations influen√ßant l'estimation

```{r}
plot(cooks.distance(modele1),type="h")

# OU option avec le seuil 

cooks_d <- cooks.distance(modele1)
# Afficher le graphique des distances de Cook
plot(cooks_d, type="h", main="Distances de Cook")

```

### V√©rification de la multicolin√©arit√© apr√®s estimation

```{r}
vif(modele1)
```

Pas de probleÃÄme de multicolineÃÅariteÃÅ entre les diffeÃÅrentes variables explicatives du modeÃÄle

# Step : SeÃÅlection des variables explicatives significatives (modeÃÄle lineÃÅaire = modele1 )

```{r}
modele0 <- (lm(temps_ecran~1,data=ecran))
summary(modele0)
```

### M√©thode ascendante

```{r}

step(modele0, scope=list(lower=modele0, upper=modele1), data=ecran, direction="forward")

#AIC=513.47


```

Step: AIC=513.47

temps_ecran \~ ecran_travail_peu + homme + cat_reseau_6_sup6 + ecran_travail_bcp + internet_autre + vie_sociale

### M√©thode descendante

```{r}

step(modele1, data=ecran,direction="backward")
# Step:  AIC=511.42
```

Step: AIC=511.42temps_ecran \~ vie_sociale + cat_reseau_6_sup6 + tel_sup_25 + appareils_1_2 + abo_0 + homme + pas_ville + cat_cadres + ecran_travail_bcp + ecran_travail_peu + internet_autre

### M√©thode double

```{r}
#m√©thode dans les 2 sens
step(modele0, scope = list(upper=modele1),data=ecran,direction="both")
#Step:  AIC=513.47
```

temps_ecran \~ ecran_travail_peu + homme + cat_reseau_6_sup6 + ecran_travail_bcp + internet_autre + vie_sociale

```{r}
# methode descendente 

modele_d <- lm(temps_ecran ~ vie_sociale + cat_reseau_6_sup6 + 
    tel_sup_25 + appareils_1_2 + abo_0 + homme + pas_ville + 
    cat_cadres + ecran_travail_bcp + ecran_travail_peu + internet_autre, data = ecran)

summary(modele_d)
```

```{r}
 # methode ascendante 

modele_a <-lm(temps_ecran ~ ecran_travail_peu + homme + cat_reseau_6_sup6 +  ecran_travail_bcp + internet_autre + vie_sociale, data = ecran)
summary(modele_a)

```

```{r}
# m√©thode double
modele_double <- lm(temps_ecran ~ ecran_travail_peu + homme + cat_reseau_6_sup6 +  ecran_travail_bcp + internet_autre + vie_sociale, data = ecran)
summary(modele_double)
```

# Modele_d - Tests

```{r}
residus3<-residuals(modele_d) 

ks.test(residus3, "pnorm", mean = mean(residus3), sd = sd(residus3))

reset(modele_d)

bptest(modele_d)

vif(modele_d)

plot(cooks.distance(modele_d), type = "h", main = "Distance de cook")
```

### Possible endogeÃÅneÃÅiteÃÅ de certaines variables explicatives

```{r}
load(here("data", "ecran_avec_instru_sansref.rda"))
ecran_i <- ecran_avec_instru_sansref
```

√† partir base de donn√©es avec les instruments, nous allons choisir les variables que conforment le mod√®le retenue ult√©rieurement, le modele_d

```{r}

modele_di <- lm(temps_ecran ~ vie_sociale + cat_reseau_6_sup6 + 
    tel_sup_25 + appareils_1_2 + abo_0 + homme + pas_ville + 
    cat_cadres + ecran_travail_bcp + ecran_travail_peu + internet_autre, 
    data = ecran_i)
summary(modele_di)
```

-   variables endog√®nes = + tel_sup_25 + appareils_1_2 + abo_0 + internet_autre + vie_sociale

-   variables exog√®nes = cat_reseau_6_sup6 + homme + pas_ville + cat_cadres + ecran_travail_bcp + ecran_travail_peu

-   instruments =stress_toujours + stress_bcp + tel_pro_non + cat_inf_20000 + cat_20_40000 + nb_personnes + fibre_non

```{r}

# ivreg
reg_DMC <- ivreg(temps_ecran ~ vie_sociale + tel_sup_25 + appareils_1_2 + abo_0 + internet_autre + cat_reseau_6_sup6 + homme + pas_ville + cat_cadres + ecran_travail_bcp + ecran_travail_peu |  cat_reseau_6_sup6 + homme + pas_ville + cat_cadres + ecran_travail_bcp + ecran_travail_peu  +  tel_pro_non + cat_inf_20000 + cat_20_40000 + nb_personnes + fibre_non + stress_toujours + stress_bcp, data=ecran_i)

summary(reg_DMC, diagnostics = TRUE)
```
