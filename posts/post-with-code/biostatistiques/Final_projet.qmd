---
title: "Biostatistiques"
author: 
  - "C. ORHAN"
  - "Isabel PALACIO"
date: "2024-02"
format: 
  html:
    toc: true
    toc_float: 
      collapsed: false
      smooth_scroll: true
editor: visual
image: "crabe.jpeg" 
categories: [Imputation, MICE, Régression, ACP]
---

# Introduction

Notre projet explore diverses stratégies pour gérer les valeurs manquantes, en s'appuyant sur un dataset provenant de la plateforme <https://www.kaggle.com/datasets>. Au cœur de notre approche se trouve une analyse descriptive, qui nous a permis de comprendre la distribution des données en examinant les tendances et la dispersion à travers des mesures comme la moyenne, la médiane et l'écart-type, et en utilisant des outils visuels tels que les histogrammes et les box-plots.

Concernant le remplacement des N/A, nous avons opté pour trois techniques adaptées aux caractéristiques de notre dataset : La régression linéaire, l'imputation multiple par MICE (Multiple Imputation by Chained Equations) et l'imputation multiple par Analyse en Composantes Principales (ACP).

**Présentation du code**

Je vous présente ci-dessous, le code utilisé pour mener à bien ce projet, avec les étapes et explications correspondantes.

## Librairies

```{r}

suppressPackageStartupMessages({
library(naniar)
library(tidyverse)
library(dplyr)
library(EnvStats)
library(corrplot)
library(RColorBrewer)
library(FactoMineR)
library(factoextra)
library(missMDA)
library(mice)
library(ggplot2)
library(car)
library(tinytex)
library(ranger)
library(here)
})

vecteur_couleur <- c("F"="darkred", "M"="darkgreen", "I"="darkblue" )


```

## Téléchargement de la base de données

```{r}

crabe <- read.csv(here("data", "CrabAgePrediction.csv")) 

```

## Présentation de la base de données

```{r}
glimpse(crabe)
```

À titre informatif, notre base de données est une base sur des crabes destinés à la consommation dans des restaurants de la région de Boston.

Le type de crabe le plus commun à cet effet est le crabe bleu américain qui est natif des côtes atlantiques américaines.

Le crabe bleu américain est pêché et consommé en grande quantité, principalement aux Etats-Unis et au Mexique. Chaque année, 58 000 tonnes sont prélevées ; son importance économique et culinaire est considérable sur la côte est des Etats-Unis, en particulier dans les états de Louisiane, du Maryland, de Caroline du Nord, du New Jersey et du Massachusetts.

## Transformation de la BD

### Traduction des noms de nos variables en français

```{r}
names(crabe) <- c("sexe", "longueur", "diametre", "hauteur", "poids","poids.chair", "poids.visceres", "poids.coquille", "age")
```

Notre base de données est donc composée de 3894 crabes bleus et de 9 variables qui sont :

Variables qualitatives :

-   **Sexe du crabe** - Mâle (Male), Femelle (Female) et Indéterminé (Indeterminate).

Variables quantitatives :

-   **Longueur** : longueur du crabe (en pieds ; 1 pied = 30,48 cm).

-   **Diamètre** : diamètre du crabe (en pieds ; 1 pied = 30,48 cm).

-   **Hauteur** : hauteur du crabe (en pieds ; 1 pied = 30,48 cm).

-   **Poids** : poids du crabe (en onces ; 1 livre = 16 onces).

-   **Poids éviscéré** : poids du crabe sans sa coquille (en onces ; 1 livre = 16 onces).

-   **Poids des viscères** : poids des viscères, qui sont les organes entourant la cavité abdominale (en onces ; 1 livre = 16 onces).

-   **Poids** **de la coquille** : poids de la coquille du crabe (en onces ; 1 livre = 16 onces).

-   **Age** : âge du crabe (en mois).

### Conversion des variables à l'origine en pied en centimètre

```{r}
crabe$longueur <- crabe$longueur * 30.48
crabe$diametre <- crabe$diametre * 30.48
crabe$hauteur <- crabe$hauteur * 30.48
```

## Conversion des variables à l'origine en onces en kilogramme

```{r}
crabe$poids <- crabe$poids * 0.0283495
crabe$poids.chair <- crabe$poids.chair * 0.0283495
crabe$poids.visceres <- crabe$poids.visceres * 0.0283495
crabe$poids.coquille <- crabe$poids.coquille * 0.0283495
```

```{r}
str(crabe)
```

Nos variables sont bien classées, nous n'avons pas à les modifier.

```{r}
plot(crabe)
```

Après un aperçu rapide de nos données, nous pouvons observer que :

Les graphiques ont différentes tendances et degrés de corrélation. Certains indiquent une corrélation positive marquée, visible par les points qui forment une trajectoire nette ascendante de gauche à droite.

Des points paraissent s'écarter de la tendance générale dans plusieurs scatter plots, suggérant la présence de valeurs aberrantes.

Notre jeu de données ne présente pas de valeurs manquantes. Cependant, en ce qui concerne la variable qualitative "sexe", nous observons une anomalie qui nécessite une analyse plus détaillée. En effet, nous recensons trois catégories : M pour masculin, F pour féminin et I pour indéfini, ce qui pourrait indiquer une erreur.

Afin de mieux comprendre nos données, nous allons réaliser une première analyse descriptive des variables qui présentent des valeurs atypiques.

# Analyse descriptive exploratoire

L'analyse descriptive exploratoire a pour objectif de déterminer la présence de valeurs aberrantes ou extrêmes au sein de nos données, afin de procéder à leur correction si nécessaire.

## Calcul des mesures de dispersion

```{r}
summary(crabe)
```

1.  **Longueur** : La longueur des crabes varie de 5.715 à 62.103 avec une moyenne d'environ 39.969. La médiane est de 41.529, ce qui suggère une distribution légèrement asymétrique vers les valeurs inférieures puisque la moyenne est inférieure à la médiane. Les valeurs sont concentrées principalement entre 34.290 et 46.863, qui représentent les premiers et troisième quartile, indiquant que 50 % des observations sont dans cette plage.

2.  **Diamètre** : le diamètre varie de 4.191 à 49.530, avec une moyenne de 31.117. La médiane est de 32.385, suggérant une distribution similaire à celle de la longueur, avec une légère asymétrie. Le diamètre des crabes est généralement compris entre 26.670 et 36.576 (premier et troisième quartiles).

3.  **Hauteur** : la hauteur présente une gamme plus étendue allant de 0 à 86.106, avec une moyenne de 10.649. La médiane de 11.049 est supérieure à la moyenne, ce qui pourrait indiquer une distribution asymétrique avec une queue de distribution vers les valeurs inférieures.

4.  **Poids** : le poids total des crabes est compris entre 0.001607 et 2.270838, avec une moyenne de 0.668121. La médiane est de 0.646170, indiquant une distribution des poids assez symétrique autour de la valeur centrale.

5.  **Poids de chair** : le poids de la chair varie de 0.0008037 à 1.1958969, avec une moyenne de 0.2893730. La médiane, à 0.2704431, est légèrement inférieure à la moyenne, suggérant une distribution modérément asymétrique.

6.  **Poids des viscères** : le poids des viscères varie de 0.0004018 à 0.6108076, avec une moyenne de 0.1456185. La médiane est assez proche de la moyenne, ce qui indique une distribution assez équilibrée.

7.  **Poids de la coquille** : le poids de la coquille a une plage allant de 0.001205 à 0.807713, avec une moyenne de 0.192659. La médiane est également proche de la moyenne, ce qui suggère une distribution régulière.

8.  **Age** : l'âge varie de 1 à 29 mois, avec une moyenne proche de la médiane (9.955 contre 10), indiquant une distribution symétrique. La plupart des crabes ont entre 8 et 11 mois (premier et troisième quartiles), ce qui montre que les âges sont relativement concentrés.

## Vérification de l’absence de doublons

Notre jeu de données est composé de 3 893 entrées. Nous allons vérifier s'il contient des doublons.

```{r}
#| eval: false
crabe |>
 	distinct() |>
 	nrow()
```

\[1\] 3893

Aucune ligne n'est répétée, nous pouvons donc conserver la totalité de nos données

## Diagramme en camembert

**Sexe**

```{r}
crabe |>
  count(sexe) |>
  mutate(pourcentage = n / sum(n) * 100) |>
  ggplot(aes(x = "", y = n, fill = sexe)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar(theta = "y") +
  scale_fill_manual(values = vecteur_couleur) +
  geom_text(aes(label = paste0(round(pourcentage, 1), "%")),
   		 position = position_stack(vjust = 0.5),
   		 color = "white") +  
  labs(
    title = "Distribution des sexes dans le jeu de données ",
    fill = "Sexe"
  ) +
  theme_void()  

```

Il illustre la distribution des sexes dans notre jeu de données. Les mâles représentent la plus grande proportion avec 36,9 %, tandis que les femelles et les indéfinis ont des proportions presque égales de 31,5 % et 31,7 % respectivement.

## Représentation des valeurs aberrantes grâce à des boxplots

```{r}
crabe  |>
    pivot_longer(
      cols = longueur:age,
      names_to = "mesure",
      values_to = "valeur"
      ) |>
    ggplot() +
    aes(y = valeur, x = sexe, color = sexe) +
    geom_boxplot() +
    geom_jitter(alpha = 0.3,  position = position_jitter(width = 0.2))  +
    facet_wrap(~ mesure, scales = "free_y") +
    scale_color_manual(values =vecteur_couleur)+
    labs(title = "Distribution des mesures par sexe")+
    theme_bw()

```

Nous pouvons donc observer la présence de valeurs aberrantes ou extrêmes dans nos variables. Pour les identifier, nous avons utilisé le test de Rosner.

```{r}
rosnerTest(crabe$longueur, k=10, alpha=0.05)
rosnerTest(crabe$diametre, k=10, alpha=0.05)
rosnerTest(crabe$hauteur, k=10, alpha=0.05)
rosnerTest(crabe$poids, k=10, alpha=0.05)
rosnerTest(crabe$poids.chair, k=10, alpha=0.05)
rosnerTest(crabe$poids.visceres, k=10, alpha=0.05)
rosnerTest(crabe$poids.coquille, k=10, alpha=0.05)
rosnerTest(crabe$age, k=10, alpha=0.05)
```

Nous utilisons le test de Rosner pour identifier les observations qui peuvent être considérées comme aberrantes ou extrêmes, afin de les analyser en détail.

-   Hauteur pour les observations numéros 2257 (86,106 cm) et 749 (39,24 cm)

-   Poids de la chair pour les observations 2257 (1,19 kg), 1950 (1,08 kg) et 773 (1,08 kg)

-   Poids des viscères pour l'observation 773 (0,61 kg)

-   Poids de la coquille pour les observations 3296 (0,8 kg), 2897 (0,72 kg), 2726 (0,71 kg) et 3070 (0,71 kg)

-   Age pour les observations 1730 (29 mois), 3070 (27 mois), 3535 (27 mois), 90 (26 mois), 2424 (25 mois), 374 (24 mois) et 3308 (24 mois).

Lors de nos recherches, nous avons cherché à comprendre la normalité de notre base de données.

On apprend ainsi que le crabe bleu à une longévité d'environ 3 ans donc nous décidons de conserver les valeurs extrêmes de la variable âge. Concernant les variables poids de la chair, poids des viscères et poids de la coquille, nous décidons également de les garder.

Pour la suite, nous allons donc traiter les deux valeurs de la variable "hauteur".

**Observation n°2257**

```{r}
crabe[2257,]
resultat <- crabe %>%
  filter(sexe == "F", age == 8) %>%
  summarise(mean_hauteur = mean(hauteur))
print(resultat)
```

Nous constatons que la moyenne des hauteurs pour les crabes âgés de 8 mois et de sexe féminin est de 11,39. Nous pouvons donc supposer que notre valeur de 86,106 est une valeur aberrante, probablement due à une erreur de saisie de virgule, que nous pouvons corriger.

```{r}
crabe[2257,"hauteur"]<-8.6106
```

# Première méthode de remplacement : Régression linéaire

**Observation n°749**

```{r}
crabe[749,]
resultat <- crabe %>%
  filter(sexe == "M", age == 10) %>%
  summarise(min_hauteur = min(hauteur))
print(resultat)
```

Par conséquent, cette valeur observée de 39,243 cm, n’est pas une valeur aberrante, mais semble être une valeur extrême compte tenu de la valeur minimum de 4,953 cm.

Nous avons choisi comme première méthode de remplacement pour cette valeur, une régression linéaire.

```{r}
crabe[749,"hauteur"]<-NA
```

Pour commencer, nous avons remplacé la valeur extrême identifiée par une valeur manquante "NA" afin de procéder à son remplacement.

```{r}
regression_linéaire <- lm (
  hauteur ~ sexe + diametre + longueur + poids + poids.chair + poids.visceres + poids.coquille + age,
  data=crabe
  )
summary(regression_linéaire)
```

À travers cette régression linéaire, nous avons identifié les variables qui montrent des corrélations significatives avec la variable « hauteur ». Il apparaît que la variable significative liée au sexe est « sexeI », représentant le sexe indéterminé, tandis que « sexeF », qui sert de modalité de référence par défaut, et « sexeM », qui n'est pas significative, ne seront pas pris en compte dans notre analyse. Par conséquent, nous allons filtrer notre ensemble de données en se concentrant uniquement sur le sexe indéterminé.

```{r}
sexeI <- crabe |> filter(sexe=="I")
modele <- regression_linéaire2 <-lm(
  hauteur~diametre+poids.visceres+poids.coquille+age,
  data=sexeI
)
summary(regression_linéaire2)
```

Nous allons à présent utiliser les résultats de cette régression afin de générer des prédictions pour remplacer la valeur manquante.

```{r}
crabe$hauteur[is.na(crabe$hauteur)] <- predict(modele, newdata = crabe[is.na(crabe$hauteur), ])
```

Cette prédiction nous a permis d'utiliser les relations linéaires identifiées dans le modèle pour estimer et remplacer de manière précise la valeur manquante de l'observation n°749.

```{r}
crabe[749,"hauteur"]
crabe_complet<-crabe
```

La nouvelle valeur est donc 16,09 cm.

# Création de nos valeurs manquantes

Notre jeu de données est initialement complet, sans valeurs manquantes. Nous avons toutefois opté pour l'insertion aléatoire de données manquantes de façon contrôlée.

Pour garantir une reproductibilité fiable de ce processus aléatoire, nous employons la fonction set.seed, qui fixe la graine du générateur de nombres aléatoires. Cette étape est essentielle pour s'assurer que les résultats puissent être régénérés de manière identique lors de chaque exécution.

Afin d'intégrer les valeurs manquantes (N/A) dans notre jeu de données, nous procédons de la manière suivante :

```{r}

set.seed(123)  
n <- nrow(crabe)  
p <- ncol(crabe)  
m <- 50

cols <- c("poids", "diametre", "age")

row_indices <- sample(1:n, m)  
col_indices <- sample(cols, m, replace = TRUE)

```

Explication détaillée du script :

**n \<- nrow(crabe)** : cette commande calcule le nombre total d'observations dans le jeu de données crabe et stocke ce nombre dans la variable n.

**p \<- ncol(crabe)** : cette commande détermine le nombre total de variables présentes dans le jeu de données crabe et l'assigne à la variable p.

**m \<- 50** : cette instruction spécifie le nombre total de valeurs manquantes à générer dans le jeu de données, fixé ici à 50.

**cols \<- c ("poids", "diametre", "age")** : cette ligne crée un vecteur cols contenant les noms des variables pour lesquelles les valeurs manquantes seront introduites.

**row_indices \<- sample(1:n, m)** : cet appel à sample produit un vecteur row_indices composé de m indices de lignes choisies aléatoirement parmi toutes les lignes disponibles, allant de 1 à n.

**col_indices** \<- sample(cols, m, replace = TRUE) : cette instruction crée un vecteur col_indices de m éléments, sélectionnant aléatoirement et avec remplacement parmi les noms de colonnes spécifiés dans cols.

Pour injecter les valeurs manquantes dans le jeu de données, nous parcourons les indices générés et assignons NA à la position correspondante à chaque itération de la boucle :

```{r}
for (i in 1:m) {
  crabe[row_indices[i], col_indices[i]] <- NA
}
crabe_mice <- crabe
crabe_missMDA <- crabe
```

## Visualisation des valeurs manquantes

```{r, fig.cap="Description de la figure."}

gg_miss_upset(crabe)

```

Le graphique ci-dessus, illustre la répartition des valeurs manquantes (N/A) que nous avons générées et insérées de manière aléatoire dans les colonnes sélectionnées de notre jeu de données. Au total, 50 valeurs manquantes ont été introduites : 19 dans la colonne du poids, 16 dans celle du diamètre et 15 dans celle de l'âge.

Afin de mieux comprendre la distribution des colonnes où nous avons inséré des valeurs manquantes, et pour déterminer les méthodes de remplacement les plus adaptées, nous procédons à l'examen de la normalité et à l'analyse de la corrélation entre nos variables.

## Test de normalité

**QQ plot Age**

```{r}
qqnorm(crabe$age, main = "Q-Q plot - Age")
qqline(crabe$age, col = 2)

```

**QQ plot Poids**

```{r}

qqnorm(crabe$poids, main = "Q-Q Plot - Poids")

qqline(crabe$poids, col = 2)

```

**QQ plot Diametre**

```{r}
qqnorm(crabe$diametre, main = "Q-Q Plot - Diamètre")

qqline(crabe$diametre, col = 2)
```

Un graphique Q-Q (quantile-quantile) est un outil visuel utilisé en statistique pour comparer deux distributions de probabilité en traçant leurs quantiles l'un contre l'autre. Il est souvent utilisé pour vérifier si deux ensembles de données suivent une même distribution. Si les points s'alignent approximativement sur une ligne droite, cela suggère que les deux distributions sont similaires.

Dans notre cas, les Q-Q plots ne suivent pas la droite de la loi normale, nous pouvons donc supposer qu'ils ne suivent pas une distribution normale.

**Calculer la moyenne et l'écart-type de nos données**

```{r}
moyenne_age <- mean(crabe$age, na.rm = TRUE)
ecart_type_age <- sd(crabe$age, na.rm = TRUE)

moyenne_poids <- mean(crabe$poids, na.rm = TRUE)
ecart_type_poids <- sd(crabe$poids, na.rm = TRUE)

moyenne_diametre <- mean(crabe$diametre, na.rm = TRUE)
ecart_type_diametre <- sd(crabe$diametre, na.rm = TRUE)
```

**Test KS pour comparer nos données à une distribution normale**

```{r}
age.ks<-ks.test(crabe$age, "pnorm", mean = moyenne_age, sd = ecart_type_age)
age.ks

poids.ks<-ks.test(crabe$poids, "pnorm", mean = moyenne_poids, sd = ecart_type_poids)
poids.ks

diametre.ks<-ks.test(crabe$diametre, "pnorm", mean = moyenne_diametre, sd = ecart_type_diametre)
diametre.ks
```

Nous avons par la suite effectué les tests de Kolmogorov-Smirnov, notre échantillon étant composé de plus de 50 observations. Ces tests confirment ce qu'on a constaté avec les Q-Q plots, nos variables ne présentent pas une distribution normale. De ce fait, nous excluons l'option de remplacement par la moyenne.

## Matrice de corrélation

```{r}
crabe |>
  select(longueur:age) |>
  drop_na() |>
  cor() |>
  corrplot::corrplot.mixed()
```

Nous observons une corrélation existante entre les variables âge, diamètre et poids.

::: callout-warning
## Risque de multicolinéarité

Les variables longueur, diamètre, hauteur, poids, poids.chair, poids.visceres, et poids.coquille ont des coefficients supérieurs à 0.9. Dans le cadre de notre projet, l'objectif est d'utiliser la régression pour prédire et imputer des valeurs manquantes plutôt que pour l'inférence statistique, la multicolinéarité est un peu moins problématique. Cependant, elle peut affecter la stabilité des coefficients de régression utilisés dans l'imputation.
:::

Ainsi, pour la suite, nous opterons pour des méthodes d'imputation plus robustes telles que l'imputation MICE (Multiple Imputation by Chained Equations) et la méthode basée sur l'Analyse en Composantes Principales (ACP), ainsi qu'un remplacement global des valeurs manquantes.

# Deuxième méthode de remplacement : l'imputation MICE des valeurs manquantes pour l'age, le poids, diamètre

```{r}
md.pattern(crabe_mice, rotate.names = TRUE)
```

Nous pouvons donc observer nos 50 valeurs manquantes réparties dans nos trois variables. Chaque valeur manquante n'est que dans une seule variable par observation.

Nous allons par la suite imputer les valeurs manquantes par plusieurs méthodes telles que Prédictive Mean Matching et Random Forest :

-   PMM() : pour une observation avec une valeur manquante, la méthode trouve un ensemble d'observations (par exemple, les plus proches voisins) dans les données complètes dont les valeurs prédites par le modèle sont proches de la valeur prédite pour l'observation manquante.

-   RF (Forêt aléatoire) : dans une forêt aléatoire, chaque arbre de décision est entraîné sur un sous-ensemble de données et un sous-ensemble de caractéristiques. La prédiction finale résulte de la moyenne des prédictions de tous les arbres individuels.

## Aléatoire

```{r}
crabe_mice_aleatoire <- mice(crabe_mice, m = 5)
crabe_mice_aleatoire$imp
crabe_mice_aleatoire$method
plot(crabe_mice_aleatoire)
```

Lorsque nous effectuons la méthode de manière aléatoire, le logiciel propose d'effectuer l'imputation avec la méthode PMM.

## Imputation par la PMM

```{r}
meth_pmm <- c("", "", "pmm", "", "pmm", "", "", "", "pmm")
set.seed(123)
crabe_pmm <- mice(crabe_mice, method = meth_pmm, m = 6, maxit = 6)
crabe_pmm$imp
plot(crabe_pmm, main="Plot selon la méthode pmm")
```

## Imputation par la RF

```{r}
set.seed(123)
meth_rf <- c("", "", "rf", "", "rf", "", "", "", "rf")
crabe_rf <- mice(crabe_mice, method = meth_rf, m = 6, maxit = 6, )
crabe_rf$imp
plot(crabe_rf, main="Plot selon la méthode rf")
```

## Imputation mix entre PMM et RF

```{r}
meth_mix <- c("", "", "pmm", "", "pmm", "", "", "", "rf")
set.seed(123)
crabe_mix <- mice(crabe_mice, method = meth_mix,m = 6, maxit = 6)
crabe_mix$imp
names(crabe)
plot(crabe_mix, main="Plot avec la méthode mix")
```

Nous observons donc que la méthode de remplacement par la PMM n'est pas optimale, choisissons donc l'imputation par la méthode de random forest.

Après avoir analysé les graphiques, nous pouvons dire que la meilleure itération est la 2ème, c'est pourquoi nous procédons à l'imputation avec celle-ci.

## Imputation des valeurs manquantes

```{r}
crabe_complet_mice_rf2 <- mice::complete(crabe_rf, 2)
```

## Vérification

```{r}
md.pattern(crabe_complet_mice_rf2, rotate.names = TRUE)
```

Toutes les valeurs manquantes ont bien été imputées.

# Troisième méthode: ACP (Analyse en composante principale)

La PCA est utilisée pour réduire la dimensionnalité des données tout en préservant autant que possible la variance des données. Elle s'effectue sur des variables exclusivement quantitatives.

Le principe est d'itérer entre l'estimation des composantes principales et l’imputation des valeurs manquantes jusqu'à contingence.

La PCA elle-même ne fait pas d'hypothèses sur la distribution des données. Elle cherche à capturer la structure linéaire (corrélation) entre les variables.

Dans le contexte de l'imputation, l'objectif est de remplacer les valeurs manquantes de manières à préserver la structure globale des données.

```{r}
crabe_acp <- crabe_missMDA |>
  drop_na()
```

Cette première étape à permis de trier notre jeux de données en ne gardant que les valeurs non-manquantes afin d'effectuer l'ACP.

```{r}
crabe_acp |>
    group_by(sexe) |>
    summarize(
      across(where(is.numeric),
      		 median) ) |>
           		 ungroup()
```

```{r}
acp_simple <- crabe_acp |>
    select(- sexe) |>
    PCA()
```

Concernant le cercle de corrélation :

-   Nous observons dans un premier temps que l'axe 1 à une inertie de 85,3 %, ce qui signifie qu'il explique à lui seul 85,3 % de la variance totale des données. De plus, il représente de manière significative toutes nos variables, à l'exception de la variable age.

-   Les angles de nos variables sont fermés ce qui nous permet d'affirmer que nos variables sont très corrélées entre elles.

Concernant le graphique des individus :

-   On observe des clusters d'individus contribuant soit positivement soit négativement aux composantes principales.

```{r}
acp_simple$eig
fviz_screeplot(acp_simple, addlabels = TRUE)
```

On peut donc confirmer que la dimension 1 explique à elle seule 85,3% de la variance.

```{r}
crabe_sans_sexe <- crabe_acp |> select(-sexe)

res.pca<-PCA(crabe_sans_sexe)

contribution<-round(res.pca$var$contrib,2)

corrplot(contribution, is.corr=FALSE, method="circle", tl.srt=45, tl.col="#002200",
     	col=brewer.pal(n=9, name="OrRd"), addCoef.col="black", main="Tableau des contributions")
```

Ce tableau des contributions permet de voir que toutes nos variables sont significatives pour la dimension 1 à l'exception de la variable âge qui est plus contributive pour la dimension 2.

```{r}
acp <- PCA(
  X = crabe_acp,
  quali.sup = c("sexe"))
```

```{r}
plot.PCA(acp, choix = "ind", label = "quali")
plot.PCA(acp, choix = "ind", habillage = "sexe", label = "none")
```

Nous avons ensuite cherché à visualiser les individus dans l'ACP, en leur attribuant des couleurs ou des étiquettes en fonction de certaines variables qualitatives (comme le genre dans le deuxième cas), ce qui facilite la compréhension de la distribution des individus dans l'espace des composantes principales.

```{r}
acp$eig
```

Nous travaillerons avec les dimensions 1 et 2 qui explique à elles seules 92,5 % de la variance.

```{r}
crabe_complet_acp <-  MIPCA(crabe_missMDA |> select(-sexe), scale=TRUE, ncp=2)
```

Nous procédons donc maintenant à l'analyse en composante principales multiple imputation en excluant la variable "sexe", étant une variable qualitative, elle ne peut pas être utilisée dans l'acp qui est exclusivement quantitative. De plus, nous spécifions que nous travaillerons avec deux composantes principales avec le paramètre : ncp=2.

```{r}
plot.MIPCA(crabe_complet_acp, choice = "dim")
```

Le premier graphique après imputation est la projection de nos variables selon les deux premières dimensions de l'ACP.

Comme toutes les flèches sont proches soit de l'axes 1 soit de l'axe 2, cela signifie que les axes sont stables. Cette stabilité nous permet d'interpréter les résultats de notre ACP.

```{r}
plot.MIPCA(crabe_complet_acp, choice = "var")
```

Ce graphique spécifie que l'on souhaite visualiser les variables originales dans l'espace des deux premières dimensions de l'ACP. On observe dans notre cas que le graphique ne montre pas d'auréoles, les données ont donc bien été traitées et elles sont représentées de manière cohérente dans nos deux dimensions.

```{r}
crabe_complet_acp <-
    bind_cols(
      crabe_missMDA |> select(sexe),
      crabe_complet_acp[["res.imputePCA"]])
```

Ensuite, nous ajoutons notre variables "sexe" à notre base de données imputées des valeurs manquantes.

```{r}
md.pattern(crabe_complet_acp, rotate.names = TRUE)
```

Pour terminer, nous pouvons confirmer que toute nos variables ont bien été imputées.

# Comparaison des deux analyses

```{r}
#| echo: false
#| warning: false

moy_age<-mean(crabe_complet[,"age"])
moy_age_mice<-mean(crabe_complet_mice_rf2[,"age"])
moy_age_acp<-mean(crabe_complet_acp[,"age"])

difference_age_mice <- moy_age_mice - moy_age ; difference_age_acp <- moy_age_acp - moy_age

tableau1 <- data.frame(Mice = difference_age_mice , ACP = difference_age_acp)
tableau1$Approche_retenue <- ifelse(tableau1$Mice < tableau1$ACP, "Mice", "Acp")
```

```{r}
#| echo: false
#| warning: false

moy_diametre<-mean(crabe_complet[,"diametre"])
moy_diametre_mice<-mean(crabe_complet_mice_rf2[,"diametre"])
moy_diametre_acp<-mean(crabe_complet_acp[,"diametre"])


difference_diametre_mice <- moy_diametre - moy_diametre_mice ; difference_diametre_acp <- moy_diametre - moy_diametre_acp

tableau2 <- data.frame(Mice = difference_diametre_mice , ACP = difference_diametre_acp)
tableau2$Approche_retenue <- ifelse(tableau2$Mice < tableau2$ACP, "Mice", "Acp")
```

```{r}
#| echo: false
#| warning: false
moy_poids<-mean(crabe_complet[,"poids"])
moy_poids_mice<-mean(crabe_complet_mice_rf2[,"poids"])
moy_poids_acp<-mean(crabe_complet_acp[,"poids"])


difference_poids_mice <- moy_poids_mice - moy_poids ; difference_poids_acp <- moy_poids_acp - moy_poids

tableau3<- data.frame(Mice = difference_poids_mice , ACP = difference_poids_acp)
tableau3$Approche_retenue<- ifelse(tableau3$Mice < tableau3$ACP, "Mice", "Acp")
```

```{r}
rbind(tableau1, tableau2, tableau3)
```

En observant les résultats, nous pouvons conclure que la meilleure approche pour notre base de données est l'imputation MICE puisqu'elle domine sur deux de nos variables.

# Analyse descriptive sans N/A

```{r}
 summary(crabe_complet_mice_rf2)
```

En réexaminant les statistiques de notre jeu de données corrigé et en les comparant à l'analyse exploratoire initiale, nous observons que :

-   La moyenne de la variable « hauteur » a été légèrement ajustée, passant de 10,649 à 10,623, tandis que la médiane est restée inchangée à 11,049.
-   Concernant l'âge, la moyenne a été légèrement modifiée, évoluant de 9,955 à 9,958, sans pour autant altérer significativement l'interprétation de la distribution.
-   Les autres statistiques relatives à la longueur, au diamètre, au poids, au poids de la chair, au poids des viscères et au poids de la coquille sont identiques à celles énoncées dans la description initiale.

## Analyse descriptive univariée

Les variables quantitatives sont longueur, diamètre, hauteur, poids, poids de la chair, poids des viscères, poids de la coquille et âge.

Et nous avons une seule variable qualitative: le sexe.

## Variable Qualitative

**Tableau de contingence**

```{r}

count(crabe_complet_mice_rf2, sexe)
```

Nous avons trois catégories de sexe : femelle (F), indéterminé (I) et mâle (M), avec respectivement 1225, 1233 et 1435 individus dans chaque catégorie.

## Variables quantitatives

### Boite à moustache

```{r}
crabe_complet_mice_rf2 |>
 	pivot_longer(
  	cols = where(is.numeric)
	) |>
	ggplot() +
	aes(y = value) +
	facet_wrap(~ name, scales = "free_y") +
	geom_boxplot() +
	theme_light()
```

Après avoir vérifié et corrigé les deux valeurs aberrantes pour la variable « hauteur », nous avons décidé de conserver les valeurs extrêmes présentes pour les autres variables de type poids et taille. De même, concernant l'âge, étant donné que la longévité d'un crabe peut atteindre 3 à 4 ans et que nos données incluent des valeurs jusqu'à 30 mois, soit 2,5 ans, ces observations sont jugées cohérentes avec le comportement naturel des crabes.

### Histogrammes

Pour enrichir l'analyse, nous visualisons la forme de la distribution à l'aide d'histogrammes et superposons une courbe de densité. Cela nous permet d'évaluer visuellement la normalité de la distribution et de souligner les modes ainsi que les asymétries.

```{r}

#| warning: false
ggplot(crabe_complet_mice_rf2, aes(x = longueur)) +
  geom_histogram(aes(y = ..density..), binwidth = 1, fill = "blue", color = "black", alpha = 0.4) +
  geom_density(color = "red", size = 1) +  
  labs(title = "Distribution de la longueur ", x = "Longueur", y = "Densité") +  
  theme_minimal()

```

La distribution présente une légère asymétrie à droite. Cela signifie qu'il y a une proportion de crabes qui ont des longueurs plus grandes que la moyenne.

```{r}
#| warning: false
ggplot(crabe, aes(x = diametre)) +
  geom_histogram(aes(y = ..density..), binwidth = 1, fill = "blue", color = "black", alpha = 0.4) +  
  geom_density(color = "red", size = 1) +  
  labs(title = "Distribution du diamètre  avec courbe de densité",
   	x = "Diamètre",
   	y = "Densité") +
  theme_minimal()

```

La distribution du diamètre n'est pas symétrique ; elle présente une forme qui semble multimodale et qui n'est pas normale en raison de ses multiples pics.

```{r}
#| warning: false
ggplot(crabe_complet_mice_rf2, aes(x = hauteur)) +
  geom_histogram(aes(y = ..density..), binwidth = 0.5, fill = "blue",color = "black", alpha = 0.6) +
  geom_density(color = "red", size = 1) +
  labs(title = "Distribution de la hauteur ", x = "Hauteur", y = "Densité") +
  theme_minimal()

```

Le graphique nous montre une distribution de la hauteur des crabes qui semble être multimodale, car il y a plusieurs pics.

```{r}
#| warning: false
#| message: false


ggplot(crabe_complet_mice_rf2, aes(x = poids)) +
  geom_histogram(aes(y = ..density..), binwidth = 0.1, fill = "orange", color = "black", alpha = 0.6) +
  geom_density(color = "red", size = 1) +
  labs(title = "Distribution du poids ", x = "Poids", y = "Densité") +
  theme_minimal()

```

```{r}
#| warning: false
#| message: false

ggplot(crabe_complet_mice_rf2, aes(x = poids.chair)) +
  geom_histogram(aes(y = ..density..), binwidth = 0.01, fill = "orange",  alpha = 0.6) +
  geom_density(color = "red", size = 1) +
  labs(title = "Distribution du poids de chair ", x = "Poids de chair", y = "Densité") +
  theme_minimal()

```

```{r}
#| warning: false
#| message: false

ggplot(crabe_complet_mice_rf2, aes(x = poids.visceres)) +
  geom_histogram(aes(y = ..density..), binwidth = 0.01, fill = "orange",  alpha = 0.6) +
  geom_density(color = "red", size = 1) +
  labs(title = "Distribution du poids des viscères ", x = "Poids des viscères", y = "Densité") +
  theme_minimal()



```

```{r}
#| warning: false
#| message: false


ggplot(crabe_complet_mice_rf2, aes(x = poids.coquille)) +
  geom_histogram(aes(y = ..density..), binwidth = 0.01, fill = "orange",  alpha = 0.6) +
  geom_density(color = "red", size = 1) +
  labs(title = "Distribution du poids de la coquille ", x = "Poids de la coquille", y = "Densité") +
  theme_minimal()

```

Les poids de viscères, de la coquille et de la chair, pressentent des distribution asymétriques à droite, avec une concentration plus élevée de valeurs faibles et une queue qui s'étend vers des valeurs plus élevées.

```{r}
#| warning: false
#| message: false


ggplot(crabe_complet_mice_rf2, aes(x = age)) +
  geom_histogram(aes(y = ..density..), binwidth = 1, fill = "blue", alpha = 0.6) +
  geom_density(color = "red", size = 1) +
  labs(title = "Distribution de l'âge ", x = " ge", y = "Densité") +
  theme_minimal()

```

La queue de la distribution s'étend jusqu'à environ 30 mois, avec une diminution progressive de la densité au fur et à mesure que l'âge augmente, indiquant moins de crabes plus âgés.

# Analyse Bivariée

## Quantitative - Quantitative

```{r}
#| warning: false
#| message: false


 ggplot(crabe, aes(x = age, y = diametre, color = sexe)) +
  geom_point() +
  scale_color_manual(values = vecteur_couleur) +  
  theme_minimal() +  
  labs(title = "Relation entre l'âge et le diamètre ",
   	x = " ge",
   	y = "Diamètre")  

```

Nous pouvons observer une tendance positive entre l'âge et le diamètre, ce qui signifie que, en général, le diamètre des crabes augmente avec l'âge. Et on peut aussi observer que les crabes de sexe indéfini sont très présents jusqu'à l'âge de 10 mois.

**Corrélation (variables type poids)**

```{r}
cor(crabe_complet_mice_rf2[c("poids", "poids.chair", "poids.visceres", "poids.coquille")])
```

En ce qui concerne la relation entre le "poids", "poids.chair", "poids.visceres", "poids.coquille" les fortes corrélations indiquent que les différentes mesures de poids sont interdépendantes, ce qui n'est pas surprenant compte tenu de leur nature biologique.

Les lignes de régression sont bien ajustées à la distribution des points, bien que quelques points éloignés (valeurs extrêmes) en particulier dans la plage supérieure des valeurs.

```{r}
#| warning: false
#| message: false


variables_quantitatives <- c("longueur", "diametre", "hauteur", "poids")

# Création de toutes les paires possibles sans répétition ni inversion
paires <- combn(variables_quantitatives, 2, simplify = FALSE)


graphiques <- map(paires, ~ ggplot(crabe_complet_mice_rf2, aes_string(x = .[1], y = .[2], color = "sexe")) +
	geom_point() +
	geom_smooth(method = "lm", se = FALSE) +
	scale_color_manual(values = vecteur_couleur) +
	labs(title = paste("Relation entre", .[1], "et", .[2])) +
	theme_classic()
)


graphiques
```

Toutes les relations que nous observons sont positives, par exemple la relation entre le diamètre et le poids signifie qu'à mesure que le diamètre augmente, le poids augmente aussi. La ligne de régression pour les femelles est légèrement supérieure à celle des mâles et des jeunes (I), indiquant que pour un même diamètre, les femelles ont tendance à être plus lourdes.

La relation linéaire entre longueur et diamètre, mais aussi le diamètre et la hauteur et elle est presque uniforme entre les sexes et les points autour des lignes de régression suggère une variance faible des résidus.

En examinant de plus près la répartition des points selon les catégories de sexe, nous constatons que les données des mâles et des femelles se superposent sur une large gamme de valeurs pour toutes les paires de variables étudiées, ce qui indique des caractéristiques similaires entre ces deux groupes. En revanche, les points représentant la catégorie indéterminée (I) se concentrent davantage sur les échelons inférieurs des variables mesurées, suggérant que les individus classés comme indéterminés tendent à avoir des longueurs, des diamètres et des poids inférieurs par rapport aux mâles et aux femelles.

## Qualitative - quantitative

Afin d'examiner les relations entre nos variables quantitatives et notre variable qualitative, nous procédons à une visualisations deux à deux :

```{r}
ggplot(crabe_complet_mice_rf2, aes(x = sexe, y = longueur)) +
  geom_boxplot() +
  labs(title = "Comparaison de la taille entre les sexes ", x = "Sexe", y = "Longueur")

```

Nous pouvons observer que la médiane semble être légèrement plus élevée pour les femelles que pour les mâles et aussi elles semblent avoir une étendue interquartile (entre le premier et le troisième quartile) plus étroite que celle des mâles. Cela indique que les longueurs des femelles sont moins dispersées autour de la médiane.

```{r}
ggplot(crabe_complet_mice_rf2, aes(x = sexe, y = poids)) +
  geom_boxplot() +
  labs(title = "Comparaison du poids entre les sexes ", x = "Sexe", y = "Poids")
```

Les médianes semblent similaires entre les sexes.

```{r}
ggplot(crabe_complet_mice_rf2) +
	aes(x = poids, fill = sexe) +
	geom_histogram(bins = 50) +
	scale_fill_manual(values = vecteur_couleur) +
	theme_bw()
```

Les crabes féminins et masculins ont des distributions similaires, avec une gamme de poids étendue, tandis que les indéterminées ont une distribution plus concentrée vers les poids inférieurs.

**Fréquences en fonction du sexe**

```{r}
#| code-fold: false

crabe_complet_mice_rf2 |>
  group_by(sexe, diametre) |>
  count()
```

```{r}
#| code-fold: false

crabe_complet_mice_rf2 |>
  group_by(sexe, poids) |>
  count()
```

```{r}
#| code-fold: false

crabe_complet_mice_rf2 |>
  group_by(sexe, age) |>
  count()
```

# Conclusion

Ainsi, notre base de données, visant à comprendre les caractéristiques des crabes de Boston, est complète. Les valeurs aberrantes, extrêmes et les valeurs manquantes ont été remplacées avec différentes méthodes telles que la régression linéaire et des méthodes d'imputation multiple comme la méthode MICE ou missMDA. Aussi, l'approche MICE est celle que nous avons retenue pour notre analyse descriptive finale, étant celle avec le moins de différence par rapport à la base de données d'origine.

De plus, à la suite de notre analyse descriptive, nous avons voulu montrer au travers d'une régression logistique (Annexe) une analyse permettant d’identifier les caractéristiques des crabes femelles et mâles afin de remplacer le sexe indéterminé, mais cela ne s'est pas révélé significatif.

# Annexe: Régression Logistique

## Base avec crabe jeune

```{r}
crabe_jeune<-crabe |> filter (age<=9)
```

## Boite à moustache avec crabe jeune

```{r}
crabe_jeune |>
  pivot_longer(
    cols = where(is.numeric)
    ) |>
  ggplot() +
  aes(y = value) +
  facet_wrap(~ name, scales = "free_y") +
  geom_boxplot() +
  theme_light()
```

```{r}
#| warning: false
crabe_jeune|>
  pivot_longer(
    cols = longueur:age,
    names_to = "mesure",
    values_to = "valeur"
    ) |>
  ggplot() +
  aes(y = valeur, x = sexe, color = sexe) +
  geom_boxplot() +
  geom_jitter(alpha = 0.3) +
  scale_fill_manual(values = vecteur_couleur)+
  facet_wrap(~ mesure, scales = "free_y") +
  theme_bw()
```

## Regresion

```{r}
crabes_reg <- crabe_jeune |>
  mutate(sexe = case_when(
    sexe == "M" ~ 0,
    sexe == "F" ~ 1
    ))

count(crabes_reg, sexe)

crabes_reg |>
  pivot_longer(
    cols = longueur:age,
    names_to = "mesure",
    values_to = "valeur"
    ) |>
  ggplot() +
  aes(y = valeur) +
  geom_boxplot() +
  facet_wrap(~ mesure, scales = "free_y") +
  theme_bw()

str(crabes_reg)
```

**Séparation des données en ensembles d'entraînement et de test**

```{r}
crabes_entrainement <- crabes_reg |>
  filter(!is.na(sexe)) |>
  slice_sample(prop = 0.8)

```

**Vérification**

```{r}
crabes_verification <- anti_join(
  crabes_reg,
  crabes_entrainement

) |>
  filter(!is.na(sexe))
```

## Régression logistique

```{r}
regression_logistique <- glm(
  sexe ~ longueur + diametre + hauteur + poids + poids.chair + poids.visceres + poids.coquille + age,
  data = crabes_entrainement,
  family = binomial
)

car::Anova(regression_logistique)


```

Selon les résultats, aucun des prédicteurs n'est significatif au seuil traditionnel de 0.05, bien que **`poids.chair`** soit proche avec une valeur de p de 0.06477. Cela suggère qu'il pourrait y avoir une association entre le poids de la chair et le sexe des crabes.

```{r}
regression_logistique2 <- glm(
  sexe ~ poids.chair,
  data = crabes_entrainement,
  family = binomial
)

car::Anova(regression_logistique2)

plot(regression_logistique2)
```
